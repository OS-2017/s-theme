{"version":3,"sources":["components/content/_comp_cont_blocks.scss","config/variables/_var_colors.scss","../../../../../node_modules/breakpoint-sass/stylesheets/_breakpoint.scss","components/content/_comp_cont_ebrc.scss","components/content/_comp_cont_exposed_filters.scss","components/content/_comp_cont_forms.scss","components/content/_comp_cont_nodes.scss","components/content/_comp_cont_views.scss","components/content/_grants_reviewer_form.scss","components/prefaces/_comp_hdr_share-buttons.scss","config/variables/_var_grids.scss","components/prefaces/_comp_hdr_utilitymenu.scss","components/prefaces/_comp_pref_breadcrumbs.scss","components/prefaces/_comp_pref_main-menu.scss","../../../../../node_modules/singularitygs/stylesheets/singularitygs/_api.scss","../../../../../node_modules/singularitygs/stylesheets/singularitygs/api/_isolation.scss","components/prefaces/_comp_pref_mainmenu.scss","config/mixins/_mix_menus.scss","config/mixins/_mix_triangles.scss","config/mixins/_mix_clearfix.scss","../../../../../node_modules/singularitygs/stylesheets/singularitygs/math/_columns.scss","components/reusable/_comp_blocks.scss","components/reusable/_comp_lists.scss","components/reusable/_comp_media.scss","components/reusable/_comp_menus.scss","../../../../../node_modules/compass-mixins/lib/compass/typography/links/_hover-link.scss","../../../../../node_modules/compass-mixins/lib/compass/typography/links/_link-colors.scss","components/reusable/_comp_samhsa-icons.scss","components.css","components/reusable/_comp_typography.scss","components/sidebars/_comp_lr-menu.scss","config/mixins/_mix_icons.scss","components/sidebars/_comp_rr_blocks.scss","config/variables/_var_utility.scss"],"names":[],"mappings":"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C,CAPW,AAQpB,yHAEA,SAAa,CAHf,AAGmB,oEAEf,SAAW,CAAA,AACX,+BANJ,YAOM,Cc1ZN,Ad0ZO,kCAED,aAAe,CcnQrB,AduQK,2GcjQG,qBdoQH,Cc1QL,Ad0QK,sBc5PD,wBd+PS,Cc7Qb,Ad6Qa,qFAnBb,wBAuBgB,CcjRhB,AdiRsB,yBcvPlB,qBd4PC,CctRL,AdsRK,2BAKL,WAAY,AACV,eAAsB,CAAA,AKvbxB,uIACE,UACD,CSyJD,ATzJC,qCACD,WAAqB,AACnB,4BACD,CAAA,ACJC,+KLyBE,UAAS,CaiIb,AbjIyB,kDa+KnB,qB7BvMS,C6BwMV,AA/CL,mDAkDM,sB7B3MS,C6B4MV,AAnDL,wDP1JE,qBAA2B,CAAA,AAG7B,yDACE,sBAAa,CSDf,ATCe,WCLf,mBAAa,AACX,sBCAA,AQsBgB,iBRtBM,CAAA,ACatB,wBFdF,cCEG,AACC,SAAA,ADHJ,kBEgBc,AACR,sBFjBN,AEiBwB,aAEnB,CAAM,AACL,0BFpBN,cEsBW,AACL,oBAAgB,CFvBtB,AEuBsB,iGAGhB,yBAAiB,CMtBvB,ANsBuB,0BCtBvB,WAAU,CK0BV,AL1BU,0BAGR,cAAM,AAKN,yBAAoB,CAAA,AACpB,iGKwBQ,qBAAsB,ALrBhC,aAAQ,CKcR,ALdQ,6CAGN,WAAY,AACZ,iBAAoB,CKUtB,ALVsB,4CAGpB,kBAAe,CAAA,AACf,+CACA,cK8BI,AL9BJ,iBK8BsB,ALzBxB,gBAAsB,AACpB,gBK2BI,AL1BL,sB1BtBqB,A0BuBtB,SK2BM,AL3BN,iBK2BwB,ALzBrB,cAAA,AE7BH,oBAAO,CAAA,AACL,8DACA,kBAAsB,AACtB,qBACD,CGoBD,AHpBC,iEAGD,qBAAQ,AACN,gBACD,CGeD,AHfC,oECbD,cAAU,AACR,iBAAkB,AAClB,gBA0ID,CA5ID,AA4IC,2EAvIU,mBAAI,CEuBf,AFvBe,2CE6EZ,sBACA,AC/DoB,kBhCpBR,CAAA,A+B4Bf,8CFjBK,cAXL,AAWkB,iBE6EZ,AF3EA,gBE4EA,AF3Ee,S7Bdb,A+B0FF,oBACA,AF3EkB,cAhBxB,AAkBK,oBAEG,CEQR,AFRQ,6DbhBN,kBAAU,AACV,qBAAW,CAAA,AaiBT,gEbhBA,qBAAE,AACG,gBAAH,CAAG,AACL,mEAEA,cAAA,AACA,iBAAU,AACV,gBACD,CAAA,AabH,0EAwBM,mBACD,CE4FL,AF5FK,iCE8FD,sBC1GuB,CDwG3B,ACxG2B,4CHkBvB,iB7B9BW,CAAA,A+BgIf,8GFjIA,UAmCG,CE8FH,AF9FG,oHAnCH,kBAyCW,CEwFX,AFxFW,yIEiGL,kBACA,AFzFe,mBE0Ff,AFnGA,UAcE,CE0FR,AF1FQ,2DE4FJ,eACA,AFpJM,cEqJN,AFzFO,gBE0FP,AFzFO,uBApBL,CEiHN,AFjHW,sBEkHP,kBFrFgB,CAAA","file":"components.css","sourcesContent":["// Landing pages blocks in two column layout.\n// Block groups for landing pages.\n//======================================\n.cr-landing-block {\n  width: 100%;\n  margin-bottom: 15px;\n  background-color: $white;\n  .samhsa-block-title h2 {\n     margin: 0;\n     font-size: 1.5rem;\n     font-weight: bold;\n     background-color: $teal;\n     padding: 7px 15px;\n     color: $white;\n     a {\n      display: block;\n      color: $white;\n      text-decoration: none;\n      padding: 0;\n      &:hover {\n        text-decoration: underline;\n      }\n      span.ext {\n        display: none;\n      }\n    }\n  }\n  .field--name-body {\n    padding: 10px 15px;\n    border: 1px solid $teal;\n    ul {\n      list-style-type: none;\n      margin: 0 0 1.5em 0.25em;\n      li {\n        padding: 0.25em 1em;\n        text-indent: -1em;\n        margin-left: 10px;\n        &:before {\n          content: \"\\0BB \\020\";\n        }\n      }\n    }\n  }\n}\n\n// Home blocks - get help.\n//==================================\n.home-block {\n  h2 {\n    font-size: 28px;\n  }\n  h2:after {\n    position: absolute;\n    left: 0;\n    width: 80px;\n    content: \"\";\n    border-bottom: 4px solid $red;\n    bottom: -11px;\n  }\n  &.get-help {\n    .samhsa-block-title {\n\n     }\n    p.helpline-phone a {\n      color: $blue-gray;\n      font-size: 17px;\n      font-weight: bold;\n      text-decoration: none;\n     }\n    ul {\n      list-style: none;\n      margin: 0;\n      @include breakpoint ($break-tablet-portrait) {\n        display: flex;\n      }\n      li {\n        border-bottom: 1px solid $light-gray;\n        @include breakpoint ($break-tablet-portrait) {\n          width:33%;\n          border-right: 1px solid $light-gray;\n          margin-right: 20px;\n          padding-right: 10px;\n          border-bottom: none;\n          h3 {\n            margin-top: 15px;\n            font-weight: normal;\n          }\n        }\n        &:last-child {\n          border: none;\n        }\n        h3 {\n          a {\n            font-size: 1.8rem;\n            font-weigth: 400;\n            text-decoration: none;\n          }\n        }\n      }\n    }\n  }\n}\n\n// View blocks - newsroom blocks styles.\n//=========================================\n.cr-landing-block.landing-view-block {\n  border: 1px solid $teal;\n  .view-content {\n    padding: 5px 15px;\n  }\n  .views-field-field-release-date,\n  p.news-date {\n    font-weight: bold;\n    margin-top: 10px;\n  }\n  .view-footer {\n    margin: 0 0 15px 15px;\n    clear: both;\n  }\n}\n\n// EBP Featured resources view block.\n//========================================\n#block-views-block-ebrp-featured-resources-block-1 {\n  .views-col.col-1 {\n    padding-right:7px;\n  }\n    .views-col.col-2 {\n    padding-left:7px;\n  }\n}\n\n// Home blocks.\n// H2 titles for \"home-block\" class.\n.home-block {\n  h2{\n   position: relative;\n   &:after {\n     position: absolute;\n     left: 0;\n     width: 80px;\n     content: \"\";\n     border-bottom: 4px solid $red;\n     bottom: -11px;\n    }\n  }\n}\n.two-col-layout {\n  .view-content {\n    column-count: 2;\n  }\n  @include breakpoint ($break-tablet-portrait) {\n    .views-row {\n      margin-right: 2%;\n    }\n  }\n}\n\n// Offices and centers block styles.\n#block-officesandcentershomepageblock {\n  margin-bottom: 30px;\n    ul.centers-offices-items {\n    margin: 0 2% 0 0;\n    list-style: none;\n    float: left;\n    @include breakpoint ($break-tablet-portrait) {\n      width: 48%;\n    }\n    h3.centers-offices-item-title {\n      margin: 1em 0 .5em;\n      font-weight: normal;\n      a {\n        text-decoration: none;\n      }\n    }\n    p {\n      margin: 0;\n    }\n  }\n}\n\n// SAMHSA at Glance home block.\n#block-samhsaataglanceblock {\n  ul.glance-items {\n    margin: 20px 0 0 0;\n    list-style: none;\n    float: left;\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: row;\n    li.glance-item {\n      float: left;\n      margin: 0 1.75% 2% 0;\n      @include breakpoint ($break-tablet-landscape) {\n        width: 31.5%;\n      }\n      a {\n        text-decoration:none;\n      }\n      h3.glance-item-title {\n        margin: 0 0 .25em;\n        font-weight: normal;\n      }\n    }\n  }\n  .glance-item-image {\n    width: 130px;\n    float: left;\n    margin-right:10px;\n    @include breakpoint ($break-tablet-landscape) {\n\n    }\n  }\n  .glance-item-content {\n    p a {\n      color: $dark-gray;\n    }\n  }\n}\n\n// Language Toggle blocks.\n.block-views-blocklanguage-toggle--block-1 {\n  margin-bottom: 20px;\n}\n\n// Leadership and Regional Administrators Block.\n#block-views-block-leadership-regional-administrators {\n  clear: both;\n}\n","// Colors\r\n//New 2019 theme colors\r\n//===============================\r\n$white: #FFFFFF;\r\n$black: #000000;\r\n\r\n//grays\r\n$dark-gray: #4A4A4A;\r\n$dark-gray2: #5f636a;\r\n$medium-gray: #dee4e7;\r\n$light-gray: #CDCDCD;\r\n$lighter-gray: #EEEEEE;\r\n\r\n//new SAMHSA colors\r\n$blue: #1F419A;\r\n$blue-gray: #1E384B;\r\n$teal: #1A6986;\r\n$red: #CD3835;\r\n$red-dark: #A82D2B;  \r\n\r\n// General colors (non-specific variable term)\r\n//-----------------------------------------------------\r\n\r\n// Font Colors\r\n$base-font-color: $dark-gray;\r\n$action-color: $blue;\r\n$action-color-hover: $red-dark;\r\n$light-font-color: $white;\r\n\r\n//Message Colors\r\n$message-color: $light-gray;\r\n$error-color: #C00;\r\n$warning-color: #FC0;\r\n$status-color: #3C0;\r\n\r\n// Background Colors\r\n$base-background-color: $white;\r\n$second-background-color: $white;\r\n$base-accent-color: $blue-gray;\r\n$highlight-color: #f6ecab;\r\n$megamenu-highlight-color: $blue-gray;\r\n$megamenu-gray: $lighter-gray;\r\n\r\n//Main menu color\r\n$mm-bg-1: $blue-gray;\r\n$mm-bg-2: $blue-gray;\r\n$mm-color: $white;\r\n$mm-icon-color: $white;\r\n\r\n//Side menu color\r\n$sm-bg-1: $red;\r\n$sm-bg-2: $light-gray;\r\n$sm-bg-3: $lighter-gray;\r\n$sm-bg-4: #DADADA;\r\n$sm-color-1: $white;\r\n$sm-color-2: $black;\r\n$sm-border: 1px solid $white;\r\n\r\n//Social Media colors\r\n$fb-color: #3A67B8;\r\n$tw-color: #00A2F9;\r\n$yt-color: #FF0000;\r\n$blog-color: #1C7491;\r\n\r\n// This is superfish SAMHSA Main Menu\r\n$superfish-1-color: #fff;\r\n$superfish-1-color-txt: #1E384B;\r\n$superfish-1-background-color-level-first: #1E384B;\r\n$superfish-1-background-color-level-second: #eeeeee;\r\n$superfish-1-background-color-level-third: #d0d0d0;\r\n$superfish-1-background-color-level-fourth: #c0c0c0;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","//////////////////////////////\n// Default Variables\n//////////////////////////////\n$Breakpoint-Settings: (\n  'default media': all,\n  'default feature': min-width,\n  'default pair': width,\n\n  'force all media type': false,\n  'to ems': false,\n  'transform resolutions': true,\n\n  'no queries': false,\n  'no query fallbacks': false,\n\n  'base font size': 16px,\n\n  'legacy syntax': false\n);\n\n$breakpoint: () !default;\n\n//////////////////////////////\n// Imports\n//////////////////////////////\n@import \"breakpoint/settings\";\n@import 'breakpoint/context';\n@import 'breakpoint/helpers';\n@import 'breakpoint/parsers';\n@import 'breakpoint/no-query';\n\n@import 'breakpoint/respond-to';\n\n@import \"breakpoint/legacy-settings\";\n\n//////////////////////////////\n// Breakpoint Mixin\n//////////////////////////////\n\n@mixin breakpoint($query, $no-query: false) {\n  @include legacy-settings-warning;\n\n  // Reset contexts\n  @include private-breakpoint-reset-contexts();\n\n  $breakpoint: breakpoint($query, false);\n\n  $query-string: map-get($breakpoint, 'query');\n  $query-fallback: map-get($breakpoint, 'fallback');\n\n  $private-breakpoint-context-holder: map-get($breakpoint, 'context holder') !global;\n  $private-breakpoint-query-count: map-get($breakpoint, 'query count') !global;\n\n  // Allow for an as-needed override or usage of no query fallback.\n  @if $no-query != false {\n    $query-fallback: $no-query;\n  }\n\n  @if $query-fallback != false {\n    $context-setter: private-breakpoint-set-context('no-query', $query-fallback);\n  }\n\n  // Print Out Query String\n  @if not breakpoint-get('no queries') {\n    @media #{$query-string} {\n      @content;\n    }\n  }\n\n  @if breakpoint-get('no query fallbacks') != false or breakpoint-get('no queries') == true {\n\n    $type: type-of(breakpoint-get('no query fallbacks'));\n    $print: false;\n\n    @if ($type == 'bool') {\n      $print: true;\n    }\n    @else if ($type == 'string') {\n      @if $query-fallback == breakpoint-get('no query fallbacks') {\n        $print: true;\n      }\n    }\n    @else if ($type == 'list') {\n      @each $wrapper in breakpoint-get('no query fallbacks') {\n        @if $query-fallback == $wrapper {\n          $print: true;\n        }\n      }\n    }\n\n    // Write Fallback\n    @if ($query-fallback != false) and ($print == true) {\n      $type-fallback: type-of($query-fallback);\n\n      @if ($type-fallback != 'bool') {\n        #{$query-fallback} & {\n          @content;\n        }\n      }\n      @else {\n        @content;\n      }\n    }\n  }\n\n  @include private-breakpoint-reset-contexts();\n}\n\n\n@mixin mq($query, $no-query: false) {\n  @include breakpoint($query, $no-query) {\n    @content;\n  }\n}\n","\n//EBP All Resources View - block display\n//==========================================\n.program-banner {\n  display: none;\n}\n.ebrc-learn-more {\n  float: right;\n}\n.block-views-blockebrp-featured-resources-block-1 h2 {\n  font-size: 28px;\n  line-height: 30px;\n}\n.view-ebrp-featured-resources{\n  .views-row {\n    float: left;\n    width: 100%;\n    @include breakpoint ($break-tablet-landscape){\n      width: 31.5%;\n    }//breakpoint\n    margin-right: 7px;\n    margin-bottom: 25px;\n    border: none;\n    cursor: pointer;\n\n    .views-field.views-field-field-slide-pic {\n      float: left;\n      margin-right: 7px;\n      border: none;\n      img {\n        object-fit: cover;\n        width: 130px;\n        height: 130px;\n      }\n    }\n    .views-field-title a {\n      text-decoration: none;\n      color: #333;\n    }\n  }\n}\n\n.ebp-list {\n\n  .view-header {\n    position: relative;\n    h2.search-results {\n      position: absolute;\n      width: 100%;\n      float: right;\n      top: 460px;\n      right: 0;\n      font-size: 28px;\n      line-height: 30px;\n      @include breakpoint ($break-tablet-landscape) {\n        width: 65%;\n        top: 70px;\n      }\n    }\n    .out-of-results {\n      font-size: 14px;\n      line-height: 25px;\n      position: absolute;\n      display: inline-block;\n      top: 141px;\n      right: 0px;\n      left: 126px;\n      float: right;\n      width: 120px;\n      font-weight:bold;\n      color: #000000;\n      @include breakpoint ($break-tablet-landscape){\n        position: relative;\n        top: 17px;\n        left: 0;\n        width:auto;\n      }\n    }\n  }\n\n  .views-exposed-form {\n    position: relative;\n\n    div[data-drupal-selector=\"edit-field-ebp-portal-target-id\"] {\n      float: left;\n      padding: 0;\n      border: 1px solid #333333;\n      margin: 0;\n      min-height: 270px;\n      position: relative;\n      width: 100%;\n      top: 186px;\n      @include breakpoint ($break-tablet-landscape){\n        position: absolute;\n        width: 32%;\n        top: 170px;\n        min-height: 450px;\n      }//breakpoint\n      legend{\n        padding:5px 0;\n      }\n      input[type=\"radio\"]{\n        display: none;\n      }\n      label{\n        font-size: 16px;\n        color: #000;\n      }\n      :first-child {\n        background: #eeeeee\n      }\n      .form-type-radio {\n        padding: 10px 0 10px 12px;\n        border-bottom: 1px solid #333333;\n        margin: 0;\n        input[type=\"radio\"]:checked+label {\n          font-weight: 700;\n        }\n      }\n      .form-item-field-ebp-portal__target-id label {\n        color: #000000;\n        font-size: 16px;\n\n      }\n\n      .form-select.bef-links{\n        div {\n          border-bottom: 1px solid #d4d4d4;\n          padding: 10px 0;\n          a {\n            text-decoration: none;\n            color: #000;\n            font-size: 16px;\n            padding-left: 12px;\n            padding-top: 12px;\n          }\n        }\n        .bef-link-active {\n          background: #eeeeee;\n          border-top: none !important;\n          font-weight: 700;\n        }\n      }\n    }\n\n    fieldset[data-drupal-selector=\"edit-field-ebp-resource-type-target-id\"] {\n      float: left;\n      padding-left: 12px;\n      margin: 0;\n      width: 100%;\n      top: 412px;\n      position: absolute;\n      @include breakpoint ($break-tablet-landscape){\n        position: absolute;\n        top: 390px;\n        width: 32%;\n      }\n      legend {\n        padding: 10px 10px;\n        @include breakpoint ($break-tablet-landscape){\n          &::after {\n            display: none;\n          }\n        }\n        &.active::after {\n          border-style: solid;\n          border-width: 0.15em 0.15em 0 0;\n          content: '';\n          transform: rotate(45deg);\n          position: absolute;\n          color: #9b9b9b;\n          text-align: right;\n          width: 12px;\n          height: 12px;\n          right: 10px;\n          top: 17px;\n        }\n\n        &::after {\n          transform: rotate(134deg);\n          border-style: solid;\n          border-width: 0.15em 0.15em 0 0;\n          content: '';\n          position: absolute;\n          color: #9b9b9b;\n          text-align: right;\n          width: 11px;\n          height: 11px;\n          right: 10px;\n          top: 11px;\n        }\n     \n      }\n      .fieldset-wrapper{\n        @include breakpoint ($break-tablet-landscape){\n          display: block;\n        }\n        display: none;\n      }\n      .form-checkboxes {\n        column-count: 1;\n        padding-left:12px;\n        .form-type-checkbox{\n          width: 100%;\n          padding: 10px 0;\n          margin: 0;\n          font-size: 16px;\n          color: #000;\n        }\n      }\n      span.fieldset-legend {\n        font-size: 16px;\n        font-weight: normal;\n        color: #000;\n      }\n    }\n\n\n    .form-item-combine{\n      position: absolute;\n      width: 50%;\n      display: block!important;\n      @include breakpoint ($break-tablet-landscape){\n        width: 32%;\n      }\n      left: 0;\n      float: left;\n      padding: 0;\n      input {\n        width: 100%;\n        height: 45px;\n      }\n    }\n    .form-item-sort-bef-combine {\n      position: absolute;\n      float: left;\n      left: 0;\n      width:100%;\n      top:82px;\n      @include breakpoint ($break-tablet-landscape){\n        left:57%;\n        width: auto;\n        top: 5px;\n        position: relative;\n      }\n      label{\n        float: left;\n        color: #000000;\n      }\n      .form-select{\n        float: left;\n        margin: 0 0 0 8px;\n        border: 1px solid #333333;\n        width: auto;\n      }\n    }\n    .form-item-items-per-page {\n      padding: 0;\n      color:#000000;\n      float: right;\n      margin-right: 10px;\n      position: absolute;\n      width: 100%;\n      left: 0;\n      top: 129px;\n      @include breakpoint ($break-tablet-landscape){\n        width: auto;\n        position: absolute;\n        left: 77%;\n        top:5px;\n      }\n      label{\n        float: left;\n        margin-right: 5px;\n        padding-right: 5px;\n      }\n      select[data-drupal-selector=\"edit-items-per-page\"] {\n        display: inline-block;\n        min-width: 50px;\n        padding: 0;\n        width: auto;\n      }\n    }\n\n    .search_input {\n      position: relative;\n      width: 32%;\n      left: 0;\n      float: left;\n      padding: 0;\n      height:45px;\n    }\n\n    div[data-drupal-selector=\"edit-actions\"]{\n      position: absolute;\n      width: 22%;\n      left: 50%;\n      //top: 10px;\n      @include breakpoint ($break-tablet-landscape){\n       // position: relative;\n        top: 14px;\n        width: 9%;\n        left: 32%;\n        padding: 0;\n        margin: 0;\n      }\n      input[value=\"Reset\"],\n      input[value=\"Submit\"]{\n        width: 100%;\n        height: 45px;\n        margin:0;\n        @include breakpoint ($break-tablet-landscape){\n          position: absolute;\n          left: 57%;\n        }\n      }\n\n      input[value=\"Submit\"] {\n        width:100%;\n        padding: 0;\n        //left: 80%;\n        position: absolute;\n        @include breakpoint ($break-tablet-landscape){\n          position: absolute;\n          left: 0;\n        }\n      }\n      input[value=\"Reset\"] {\n        left: 121%;\n        position: absolute;\n      }\n    }\n  }\n\n  //view list\n  .view-content {\n    width: 100%;\n    margin-top: 260px;\n    float: right;\n    min-height: 580px;\n    @include breakpoint ($break-tablet-landscape){\n      width: 65%;\n      float: right;\n      margin-top: 90px;\n      }\n    }//breakpoint\n    .views-row {\n      border-bottom: 1px solid #333;\n      margin-bottom: 20px;\n      padding-bottom: 20px;\n      .views-field-body {\n        margin: 10px 0;\n      }\n      .resource-list-link span > a {\n        font-size: 18px;\n        line-height: 22px;\n        letter-spacing: 0;\n        font-weight: bold;\n        text-decoration: none;\n      }\n      .link-web-resources:hover,\n      .link-store:hover,\n      .download-pdf:hover {\n        text-decoration: none;\n      }\n    }\n    .link-store a, .download-pdf a, .link-web-resources a{\n      text-decoration: none;\n    }\n  }\n\n.view-empty .no-result {\n  float: right;\n  min-height: 580px;\n  h2{\n    font-size:28px;\n  }\n  p{\n    margin: 0 0 10px 0;\n    font-size: 15px;\n    line-height: 20px;\n  }\n}\n.last-updated {\n  display: none;\n}\n\n.view-ebp-all-resources {\n  .bef-exposed-form .form--inline > .form-item {\n    select {\n      line-height: 1.3;\n      height: auto;\n      color: #000;\n      padding:0;\n    }\n  }\n  .resource-list-row {\n    width: 100%;\n    border-bottom: 1px solid $dark-gray;\n    margin-top: 30px;\n    padding-bottom: 20px;\n  }\n  h3.views-field-title a {\n    text-decoration: none;\n  }\n  .resource-list-term {\n    font-size: 1.3rem;\n    .field-content {\n      display: inline;\n    }\n    .views-label {\n      font-weight: bold;\n      display: inline;\n    }\n  }\n\n  .view-empty .no-result {\n    float: right;\n    min-height: 580px;\n  }\n}\n\n\n.exposed-filters-two-column-view .exposed-filters-two-column-header-mobile {\n  display: block;\n  margin-right: 2.5%;\n  @include breakpoint ($break-tablet-portrait){\n    display: none;\n  }\n}\n",".block-views-blockebp-all-resources-block-1{\r\n  .accordion-toggle {\r\n    position: relative;\r\n    display: block;\r\n    padding: 10px;\r\n    font-size: 1.3em;\r\n    font-weight: 300;\r\n    border: 1px solid $teal;\r\n    background: $teal;\r\n    \r\n  }\r\n  .view-header {\r\n    display: block;\r\n    margin-bottom: 15px;\r\n    a{\r\n      text-decoration: none;\r\n      color: $white;\r\n    }\r\n    @include breakpoint ($break-mobile-landscape){\r\n      display: none;\r\n    } \r\n  }\r\n  .accordion-toggle.open {\r\n    background: #666;\r\n    //color: #fff;\r\n  }\r\n  .accordion-toggle:hover {\r\n    background: #165972;\r\n  }\r\n  .accordion-toggle span.toggle-icon {\r\n    position: absolute;\r\n    top: 4px;\r\n    right: 15px;\r\n    font-size: 1.5em;\r\n  }\r\n  \r\n  .view-filters {\r\n    display: none;\r\n    overflow: auto;\r\n    @include breakpoint ($break-mobile-landscape){\r\n      display: block;\r\n    } \r\n  }\r\n}//block-views-blockebp-all-resources-block-1\r\n \r\n\r\n","//Webforms styles\r\nspan.red {\r\n    color: red;\r\n}\r\n\r\n.webform-submission-form {\r\n  .ui-datepicker-trigger {\r\n      position: relative;\r\n      top: -36px;\r\n      left: 138px;\r\n  }\r\n  select, \r\n  .select2-container--default .select2-selection--single,\r\n  .select2-selection.select2-selection--single {\r\n      background-color: #fff;\r\n      border: 1px solid #CDCDCD;\r\n      border-radius: 0;\r\n      height: 32px;\r\n  }\r\n}\r\n@include breakpoint ($break-tablet-portrait){\r\n  .webform-submission-form{\r\n    input[type=email], \r\n    input[type=password],  \r\n    input[type=text], \r\n    input[type=url], \r\n    select, \r\n    .form-item-state,\r\n    .form-item-states,\r\n    textarea,\r\n    .form-textarea,\r\n    .form-type-textfield,\r\n    .webform-element-description {\r\n      width:350px;\r\n    }\r\n    #edit-event-date-date,\r\n    .form-text.required.hasDatepicker,\r\n    .form-text.hasDatepicker {\r\n      width: 128px;\r\n    }\r\n    .title-red > legend span.fieldset-legend{\r\n      font-size: 125%;\r\n        color:$red;\r\n      \r\n    }\r\n  }\r\n}\r\n\r\n//Grant reviewer application form style\r\n//=======================================\r\nhr.webform-horizontal-rule {\r\n    margin: 2em 0;\r\n    border-bottom: 2px solid $red-dark;\r\n}\r\n@include breakpoint ($break-tablet-portrait){\r\n  .webform-submission-application-for-peer-grant-revie-form{\r\n    .container-inline > label{\r\n      //clear: left;\r\n      float: left;\r\n      width: 220px;\r\n      margin-right: 7px;\r\n      text-align: right;\r\n      display: inline;\r\n      &:after {\r\n        content: \"\";\r\n      }\r\n    } \r\n    input[type=email], \r\n    input[type=password],  \r\n    input[type=text], \r\n    input[type=url], \r\n    select, \r\n    .form-item-state,\r\n    .form-item-states,\r\n    .form-type-textfield{\r\n      width: 350px;\r\n      display: inline;\r\n    }\r\n    textarea,\r\n    .form-textarea {\r\n      width:80%;\r\n    } \r\n    .webform-element--title-inline > label {\r\n    display: inline;\r\n    padding-right: 0;\r\n    }\r\n    div#edit-email--description,\r\n    .webform-element-description {\r\n    display: block;\r\n    width: 100%;\r\n    } \r\n  }\r\n}\r\n","//images\r\n@include breakpoint ($break-tablet-portrait){\r\n  img.right {\r\n      margin: 0 0 15px 15px;\r\n      float: right;\r\n  }\r\n}\r\n//summary styles\r\nsection.summary {\r\n    margin-bottom: 20px;\r\n    color: $black;\r\n}\r\n\r\n//Grants details\r\n\r\n.node--type-rfa.node--view-mode-full{\r\n  .field__item{\r\n    margin-top: 14px;\r\n  }\r\n  .field--name-field-announcement-state {\r\n    border-bottom: 1px black solid;\r\n    width: 100%;\r\n    display: block;\r\n    padding-bottom: 15px;\r\n    margin-bottom: 15px;\r\n    font-style: italic;\r\n  }\r\n  fieldset {\r\n    border: none;\r\n    padding: 0;\r\n    margin: 10px 0;\r\n    legend{\r\n      border: 0;\r\n      padding: 0;\r\n      span.fieldset-legend {\r\n        font-weight: bold;\r\n        font-size: 112.5%;\r\n        color: $red;\r\n        padding-top: 15px;\r\n      }\r\n    }//legend  \r\n    fieldset {\r\n      //margin-left: 15px;\r\n      legend{\r\n        margin-bottom: 0;\r\n        span.fieldset-legend {\r\n        font-size: 105%;\r\n        color: $black;\r\n      }\r\n     }//legend  \r\n   }//inner fieldset \r\n  }//fieldset\r\n} \r\n\r\n//Find Treament page - two column layout\r\n//.find-tretment added in the template\r\n\r\n.find-treatment{\r\n  @include breakpoint ($break-tablet-portrait){\r\n    .left {\r\n        width: 48%;\r\n        float: left;\r\n        margin-left: 0;\r\n        margin-right: 2%;\r\n    }\r\n  \r\n   .right {\r\n        width: 48%;\r\n        float: left;\r\n        margin-right: 0;\r\n        margin-left: 0;\r\n  \r\n    }\r\n  }//breakpoint\r\n}//.find-treatment\r\n","//Styles for Infographic View Page\n//===================================\n.view-infographic-view{\n  h4{\n    margin: 0.75em 0 0.75em;\n  }\n  .embed-code {\n    background-color: #EEDB9D;\n    padding: 10px;\n    font-size: 13px;\n    font-family: monospace;\n    color: black;\n    word-wrap: break-word;\n    h5{\n      margin: 0.5em 0 0.5em;\n      font-size: 1.4rem;\n    }\n  }//embed-code\n  .views-view-table{\n    @media only screen and (max-width: 624px){\n      display: block;\n    }\n    tbody, tr, td {\n      @media only screen and (max-width: 624px){\n        display: block;\n      }\n    }//tr, td\n  }//.views-view-table\n  .pager ul {\n    text-align: center;\n    a{\n      text-decoration: none;\n      &:active,\n      &:focus,\n      &:hover {\n        text-decoration: underline;\n      }\n    }//a\n  }//pager ul\n}//view-infographic-view\n\n//colorbox caption styles\n#cboxTitle {\n  left: 0;\n  height: 38px;\n  color: #313131;\n  padding: 0 20px 10px 15px;\n  display: table-cell !important;\n  vertical-align: middle;\n  float: none !important;\n  font-size: 13px;\n  line-height: 1.3;\n}\n\n\n//In the NEWS view (page display) styles\n//====================================\n\n.view-in-the-news{\n  .views-field-field-featured-image{\n    max-width: 30%;\n    float: left;\n    clear: both;\n    margin-top:10px;\n  }\n  .text-fields-wrapper {\n    float: left;\n    max-width: 70%;\n    padding-left: 10px;\n    p{\n      margin: 0;\n      &.news-date {\n        font-weight: bold;\n      }\n    }//p\n  }//text-fields-wrapper\n}//view-in-the-news\n\n\n//Press Anouncement View\n//============================\n\n//exposed filters\n#views-exposed-form-news-page-1{\n  .form-item-field-release-date-value-max label {\n    color: transparent;\n  }\n  .form-item {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  @include breakpoint ($break-mobile-landscape){\n    .form-item-body-value,\n    .form-item-field-release-date-value-min,\n    .form-item-field-release-date-value-max {\n      max-width: 28%;\n    }\n  }//breakpoint\n  @media only screen and (max-width: 624px){\n    .form-item-body-value{\n      width:100%;\n    }\n  }\n}\n\n//FEB Resources view - block display\n//======================================\n\n.fep-display{\n  .views-row {\n    border-bottom: 1px solid $medium-gray;\n    padding-bottom: 15px;\n  }\n  h3.field-content {\n    color: $red;\n  }\n  select{\n    line-height: 1.3;\n  }\n  .feb-program-info {\n    margin: 10px 0;\n    font-size: 1.3rem;\n  }\n  .services.clearfix{\n    font-size: 1.3rem;\n    @include breakpoint ($break-tablet-portrait){\n      .left {\n        float: left;\n        width: 50%;\n      }\n      .right {\n        float: left;\n        width: 50%;\n      }\n    }//breakpoint\n  }//services\n}//fep-display\n\n//GAIN TT - Trauma-Informed Response Trainer Listing\n//=================================================\n\n//Block display\n\n\n.view-gains-tt-list{\n  .view-filters {\n    select{\n      line-height: 1.3;\n    }\n    label{\n      display: block;\n    }\n  }//.view-filters\n  .views-row{\n    padding-bottom: 20px;\n  }\n}//.view-gains-tt-list\n\n//HPR resources view\n\n.view-hpr-resources{\n  select{\n    line-height: 1.3;\n  }\n  @include breakpoint ($break-mobile-landscape){\n    caption{\n      display: none;\n    }\n  }\n}\n\n//Gains court locators\n.block-views-blockgains-mhc-lists-block-1,\n.view-gains-mhc-lists-juvenile {\n  .views-row {\n    margin-bottom: 20px;\n  }\n}\n\n//Biographies view\n.view-leadership{\n  .views-row {\n    clear: both;\n  }\n  .views-field-field-bio-image{\n    img{\n      float: left;\n      margin-right: 15px;\n      margin-bottom: 15px;\n    }\n  }\n  .views-field-field-professional-title{\n    font-weight: bold;\n  }\n  &.view-display-id-block_bio{\n    .views-field.views-field-body-1 {\n      clear: both;\n      border-top: 1px solid $medium-gray;\n      padding-top: 20px;\n    }\n  }\n}\n\n//Biography node view styles\n//================================\n\n.node--type-biography {\n  .field--name-field-bio-image {\n    float: left;\n    margin: 0px 15px 15px 0px;\n  }\n  .field--name-field-professional-title {\n    font-weight: bold;\n    padding-top: 5px;\n  }\n  .field--name-body{\n    //border-top: 1px solid #000;\n    margin-top: 15px;\n    padding-top: 15px;\n    clear: both;\n  }\n}\n\n//Grants announcements Footer view block\n//=========================================\n.block-views-blockgrants-grants-footer-block{\n  .callout {\n    background: $medium-gray;\n    padding: 10px 15px;\n    margin: 15px 0px;\n    h2{\n      margin: .5em 0 .75em;\n    }\n  }\n  ul.app-materials ul {\n    margin-bottom: 0;\n  }\n}\n\n//Grants announcements details blocks\n//======================================\n\n.view-grants{\n  .view-icons-group{\n    background: $medium-gray;\n    padding: 10px 15px;\n    //position: absolute;\n    //top: 120px;\n    //width: 100%;\n    h4{\n      margin: 0 0 .75em;\n    }\n  }\n  select{\n    line-height: 1.3;\n  }\n  .form-item{\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n  .form-actions{\n    margin-top:0;\n    margin-bottom: 20px;\n  }\n  td.is-active {\n    background-color: transparent;\n  }\n  .views-field-field-rfa-number-1 {\n    width: 90px;\n  }\n}//view-grants\n\n.view-fy-samhsa-grant-awards{\n  #view-field-award-number-table-column{\n    width: 120px;\n  }\n  td.is-active {\n    background-color: transparent;\n  }\n  .views-view-table caption {\n    font-weight: bold;\n  }\n  .views-exposed-form {\n    margin-bottom: 0;\n    .form-actions{\n      margin-top:0;\n      margin-bottom: 0;\n    }\n    .form-item{\n      margin-bottom: 0;\n    }\n  }\n}\n\n//PROGRAMS views\n//===============================\n.view-programs-and-campaigns,\n.view-public-messages{\n  .item-list .pc-list{\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: row;\n    margin: 0;\n    list-style: none;\n    list-style-type: none;\n    li{\n      margin: 0 0 20px 0;\n    }\n    @include breakpoint ($break-mobile-landscape){\n      li{\n        width: 31.5%;\n        margin: 0 1.75% 2% 0;\n        float: left;\n      }//li\n    }//breakpoint\n  }\n  .views-field-title h3.field-content{\n    font-size: 18px;\n    line-height: 1.2;\n    margin: 10px 0 5px 0;\n    padding: 0;\n    font-weight: normal;\n    a{\n      text-decoration: none;\n    }\n  }\n  .form--inline .form-actions, .form-item {\n    margin-top: 0;\n    margin-bottom: 0;\n    @include breakpoint ($break-mobile-landscape){\n      clear: none;\n    }\n  }\n  @include breakpoint ($break-mobile-landscape){\n    .bef-exposed-form .form--inline > .form-item {\n      width: 40%;\n      margin-right: 0;\n    }\n  }\n}//view-programs-and-campaigns\n\n\n//NAC Meetings view\n\n.view-nac-meetings{\n  form {\n    margin: 0;\n  }\n\n  .bef-exposed-form {\n    position: relative;\n    .description {\n      font-size: 0.85em;\n      position: absolute;\n      top: 35px;\n    }\n    legend {\n      margin-bottom: 20px;\n    }\n  }//.bef-exposed-form\n  .views-table.views-view-table{\n    td.is-active {\n      background-color: transparent;\n    }\n  }// .views-table\n}//.view-nac-meetings\n\n//Homepage views\n//========================\n\n//Current Topics view\n\n.home-block{\n  .block-content {\n    margin-top: 35px;\n  }\n  ul.homepage-list {\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: row;\n    margin: 0;\n    list-style: none;\n    list-style-type: none;\n    li {\n      width: 100%;\n      margin: 0 1.75% 2% 0;\n      float: left;\n      @include breakpoint ($break-tablet-landscape){\n        width: 31.5%;\n      }//breakpoint\n      .views-field.views-field-field-hp-thumbnail {\n        width: 130px;\n        height: 130px;\n        float: left;\n        margin-right: 10px;\n      }//thumb\n      h3.field-content {\n        margin: 0 0 7px 0;\n        //font-size: 16px;\n        font-weight: normal;\n        a{\n          text-decoration: none;\n        }\n      }//h3\n    }//li\n  }//ul\n}//home-block\n.current-topics{\n  .block-content {\n    background-color: $lighter-gray;\n    padding: 20px 5px 20px 20px;\n    margin-top: 35px;\n  }\n}\na.link-button-style2{\n  display: inline-block;\n  background-color: $white;\n  border: 1px solid $teal;\n  font-family: Tahoma, Verdana, Segoe, sans-serif;\n  font-size: 16px;\n  font-weight: normal;\n  color: $teal;\n  letter-spacing: 1px;\n  margin: 0;\n  padding: 15px 20px;\n  text-decoration: none;\n  text-transform: capitalize;\n  text-align: center;\n  appearance: none;\n  box-shadow: none;\n  border-radius: 0;\n  line-height: 1.5;\n  &:hover{\n    text-decoration: none;\n    color: $dark-gray2;\n    border: 1px solid $dark-gray2;\n  }\n}\n\n//Bupe practitioners data tables.\n//====================================\n\n//National Waiver Totals view\n//------------------------------------\n.view-bupe-physician-count-national{\n  .bup-national-table{\n    tr {\n      background: transparent;\n      border-bottom: 1px solid $light-gray;\n      &:last-child {\n        border: none;\n        border-top: 1px solid #cdcdcd;\n      }\n      th{\n        /*width:15%;*/\n      }\n      .bup-totals,\n      .bup-grand-totals {\n        font-weight: bold;\n      }\n      th,td {\n        border: none;\n        padding:0.25em ;\n      }\n      td {\n        font-size: .9em;\n      }\n    }//tr\n  }//table\n}\n\n//Waiver Totals by State view\n//-------------------------------\n\n.block-views-blockbup-physician-count-national-table--block-1{\n  .view-header {\n    font-size: 15px;\n    color: $dark-gray2;\n    h2 {\n      background: $teal;\n      color: white;\n      font-size: 18px;\n      padding: 1em;\n      margin: 1em 0 0 0;\n    }//h2\n  }//view-header\n\n  #views-exposed-form-bup-physician-count-national-table--block-1{\n    a.chosen-single {\n      height: 45px;\n      display: flex;\n      align-items: center;\n\n      div {\n        top: 20%;\n      }\n    }//chose-single\n    input[type=submit]{\n      width: 123px;\n      height: 44px;\n      margin-left: 25px;\n      font-size: 1.1em;\n    }//input\n  }//views-exposed-form-bup-physician-count-national-table--block-1\n\n  .tablesaw caption {\n    text-align: left;\n    font-weight: bold;\n    font-size: 16px;\n  }\n  .bup-col-labels {\n    border: none;\n    margin: 0;\n    th{\n      border: none;\n      padding: 0;\n      font-size: 20px;\n    }\n    tr:nth-child(odd) {\n      background: transparent;\n      border-bottom:none;\n    }//tr\n  }//bup-col-labels\n  .waiver-table-wrapper {\n    background: $lighter-gray;\n    padding: 1em;\n    //exposed filters\n    .view-filters{\n      .views-exposed-form.bef-exposed-form{\n        label{\n          vertical-align: top;\n          display: inline-block;\n          margin-top: 5px;\n          margin-right: 20px;\n          color: $dark-gray2;\n        }\n        .form-actions {\n          clear: none;\n          margin-top: 0;\n          .button.js-form-submit.form-submit{\n            margin-top: 15px;\n          }\n        }\n      }\n    }//views-exposed-form\n    .chosen-search input[type=\"text\"] {\n      display:none;\n    }\n    .chosen-container.chosen-container-single .chosen-single {\n      border: 2px solid $light-gray;\n      background-color: $white;\n      background: white;\n      height: 34px;\n    }\n    .chosen-results {\n      background-color: $white;\n    }\n  }\n  .inner-table-view-wrapper {\n    background-color: $white;\n    padding: 1.5em;\n    tbody tr{\n      background-color: transparent;\n      border-bottom: 1px solid $light-gray;\n      &:last-child {\n        border: none;\n      }\n    }//tr\n    .bup-col-labels tbody tr{\n      border-bottom: none;\n    }\n    .pager ul {\n      text-align: left;\n      li a{\n        text-decoration:none;\n      }\n    }\n    .views-table.views-view-table{\n      margin: 2em 0;\n\n      caption {\n        font-size: 18px;\n        color: $teal;\n        font-weight: bold;\n        text-align: left;\n      }\n      td{\n        border:none;\n        padding:0;\n      }\n      .bup-data-by-state-table {\n        margin: 0;\n        th{\n          width: 15%;\n          //padding: .25em .5em 0 0 ;\n          background-color: $white;\n          border: none;\n          color: $dark-gray2;\n        }\n        .bup-totals,\n        .bup-grand-totals{\n          font-weight: bold;\n          color: $dark-gray2;\n        }\n        .bup-totals {\n          display: inline-block;\n          width: 3em;\n        }\n        td{\n          border: none;\n          padding: 1em;\n          font-size: .8em;\n          &:nth-child(2){\n            width: 74%;\n          }\n          &:nth-child(3){\n            width: 15%;\n          }\n          &:nth-child(4){\n            width: 17%;\n          }\n\n          span {\n            margin-right: 1em;\n          }\n        }//td\n        tr {\n          &:last-child {\n            border-top: 1px solid $light-gray;\n          }\n        }//tr\n      }//.bup-data-by-state-table\n    }//views-table\n  }//.inner table wrapper\n}//waiver-table-wrapper\n//view-block\n","/*** TS - Grant Reviewer Form Stylings related to latest design updates 3/10/20 ***/\n.alias-grants-review-grant-reviewer-application {\n    p, label, .description, .webform-element-description {font-size: 15px;}\n    label {\n        font-weight: normal;\n        color: black;\n    }\n    hr { border-bottom: 2px solid #999999 !important;}\n    fieldset {\n        border: none;\n        padding: 0;\n        margin-top: 3em;\n        margin-bottom: 1em;\n\n        legend {\n            font-size: 140%;\n            padding-bottom: 0px;\n            font-weight: bold;\n            color: #1f419a;\n        }\n\n        fieldset {\n            margin: 0;\n            legend {\n                padding-top: 1em;\n                font-size: 15px;\n                font-weight: bold;\n                color:black;\n                margin: 0;\n            }\n        }\n        .checkboxes--wrapper legend {\n            padding: 0;\n        }\n\n        .description, .webform-element-description {\n            margin-top: 5px;\n            margin-bottom: 15px;\n        }\n    }\n\n    .required-asterisk {\n        color: #f00000;\n        font-weight: bold;\n        font-size: 15px;\n        line-height: 15px;\n    }\n    .form-required:after {\n        width: 8px;\n        height: 8px;\n        background-size: 8px 8px;\n    }\n    input[type=text], input[type=email] {\n        width: 450px;\n        height: 30px;\n    }\n    .state-zip-wrapper {\n        margin: 0;\n        .fieldset-wrapper {\n            display: flex;\n            flex-direction: row;\n            justify-content: space-between;\n            width: 450px;\n\n            .form-item-state .form-select {\n                width: 235px;\n                height: 30px;\n            }\n        }\n        .form-item-zip-code {\n            label {text-align:left;}\n            text-align: right;\n            width: 50%;\n\n            input[type=text] {\n                width: 200px;\n                height: 30px;\n            }\n        }\n    }\n    .form-item-license label {\n        font-weight: bold;\n        margin-top: 1em;\n    }\n    #edit-race--wrapper legend {\n       padding-top: 1em;\n    }\n\n    textarea {\n        width: 100% !important;\n        height: 276px;\n    }\n\n    .form-submit {\n        margin: 0;\n        margin-right: 25px;\n        background: #1a6986;\n        border: none;\n        color:white;\n        width: 123px;\n        padding: 0px 10px;\n        text-transform: uppercase;\n        font-size: 16px;\n\n        &:hover {\n            border: none;\n        }\n    }\n    .form-reset {\n        margin: 0;\n        background: white;\n        color: #1a6986;\n        text-decoration: underline;\n        border: none;\n        padding: 0;\n\n        &:hover {\n            color: #1a6986;\n            border: none;\n            background: none;\n            font-weight: bold;\n        }\n    }\n\n    #edit-actions, #edit-reset {\n        display: inline;\n    }\n}\n","// Share Buttons (Add this)\n//==========================================================================\n//Vertically aligning everything and adding some space between the items\n\n.share-block{\n    display: none;\n  }\n\n@include breakpoint ($break-mobile-landscape){\n  .share-block{\n    float: right;\n    padding: $gutters $gutters 0 0;\n    display: block;\n    width: 160px;\n    ul.share-buttons{\n      overflow: hidden;\n      li{\n        float: right;\n        margin-left: 5px;\n      }\n      img{\n        display: block;\n        margin: 0;\n      }\n      i.fas.fa-envelope,\n      svg.fa-envelope {\n        font-size: 26px;\n        margin-top: -3px;\n        color: #b21d1b;\n      }\n    }\n  }\n}\n\n\n\n","// Grids\n//=====================================================================\n\n//Creating our Singularity grid\n$max-col: 12;\n$gutters: 14px;\n$gutters-main-layout: 5px 14px;\n$gutters-main-layout-home: 14px 30px;\n@include add-grid($max-col);\n@include add-gutter($gutters);\n\n//Max widths\n$max-width-mobile-landscape: 624px;\n$max-width-tablet-portrait: 768px;\n$max-width-tablet-landscape: 864px;\n$max-width-fullsize: 1000px;\n\n//Breakpoints\n$break-mobile-only: 1px $max-width-mobile-landscape - 1;\n$break-mobile-landscape: $max-width-mobile-landscape;\n$break-tablet-portrait: $max-width-tablet-portrait;\n$break-tablet-landscape: $max-width-tablet-landscape;\n$break-fullsize: $max-width-fullsize;\n","#block-utilitymenu {\n  ul[data-region=\"header\"].menu {\n    font-size: 14px;\n    li.menu-item {\n      a {\n        padding: 3px 10px;\n        color: $blue;\n        text-decoration: none;\n      }\n    }\n  }\n}\n","// Preface\r\n//--------------------------------------------------------------\r\n\r\n// This region houses the breadcrumbs and share block\r\n\r\n.region--preface-second{  \r\n  .breadcrumb-block{\r\n    display: none;\r\n  }\r\n  @include breakpoint ($break-mobile-landscape){\r\n    overflow: hidden;   \r\n    .breadcrumb-block{\r\n      float: left;\r\n      padding: $gutters 0 0 $gutters;\r\n      display: block;\r\n      width: calc(100% - 200px);\r\n      .breadcrumb {\r\n        padding-bottom: 0.5em;\r\n        font-size: 12px;\r\n        a{\r\n          font-weight: normal;\r\n          text-decoration: none;\r\n        }\r\n        li:before {\r\n          content: \"/\";\r\n        }//li\r\n        li:first-child:before {\r\n          content: \"\";\r\n        }//li:first\r\n      }//.breadcrumb      \r\n    }//breadcrumb block\r\n  }//breakpoint\r\n}","/* HHS ribbon - top bar - Begin */\n#hhs-ribbon {\n  background-color: #333;\n  color: #1E384B;\n  padding: 5px 0;\n  display: none;\n  @include breakpoint ($max-width-fullsize, true) {\n    display: block;\n  }\n  .svg-icon {\n    width: 22px;\n    height: 25px;\n    vertical-align: middle;\n    margin-right: 5px;\n  }\n  a {\n    color: #1E384B;\n    text-decoration: none;\n    line-height: 1em;\n    &:hover,\n    &:focus {\n      color: #333;\n    }\n  }\n}\n\ninput#q.samhsasearchbox {\n  font-size: 16px;\n  width: 77%;\n  height: 38px;\n  padding: 0px 10px;\n  box-sizing: border-box;\n  -webkit-appearance: none;\n  -webkit-border-radius: 0;\n  -moz-border-radius: 0;\n  border-radius: 0px;\n  vertical-align: middle;\n  margin: 0px -7px 0px 0px;\n  border: 1px solid #CDCDCD;\n}\n\n#search_box .samhsasearchbutton {\n  background-color: #1A6986;\n    background-image: none;\n    -webkit-border-radius: 0;\n    -moz-border-radius: 0;\n    border-radius: 0;\n    border: none;\n    color: #fff;\n    font-size: 16px;\n    float: right;\n    margin-top: 0px;\n    margin-left: 2%;\n    padding: 0;\n    height: 38px;\n    width: 23%;\n    margin-right: 0%;\n    box-sizing: content-box;\n    vertical-align: middle;\n    background: #1a6986;\n    position: absolute;\n    top: 0;\n    right: 0;\n    &:hover {\n      background-color: #5f636a;\n      /* border: 1px solid #5f636a; */\n      background: #5f636a;\n      box-shadow: 0 0 5px #1e384b;\n      padding: 0;\n      margin: 0;\n  }\n}\n/* HHS ribbon - top bar - End */\n//==========================================================================\n/*  Logo - site - branding block - Begin */\n#header-outer-wrapper {\n  .header-layout {\n    .region--header {\n      .site-branding {\n        float: none;\n        width: 100%;\n        margin: 0 auto;\n        padding: 0;\n        max-width: max-content;\n        @include breakpoint ($max-width-fullsize, true) {\n          width: 50%;\n          float: left;\n        }\n        #site-branding {\n          max-width: max-content;\n          #logo a {\n            background-image: url(../../../omega_samhsa_datasite/src/images/SAMHSA-logo-reversed.png);\n            background-repeat: no-repeat;\n            background-size: contain;\n            background-position: 0px 5px;\n            display: block;\n            height: 50px;\n            width: 118px;\n            @include breakpoint ($max-width-fullsize, true) {\n              background-image: url(../../../omega_samhsa_datasite/src/images/SAMHSA-logo-blue.png);\n              background-repeat: no-repeat;\n              background-size: contain;\n              background-position: 0px 0px;\n              display: block;\n              height: 85px;\n              width: 250px;\n            }\n            img {\n              display: none;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n\n\n// cutom styles added for desktop */\n.block-superfish-main-menu ul#superfish-main-menu.sf-style-none ul ul {\n  display:none !important; /* second level menus are hidden for desktop mode */\n}\n.block-superfish-main-menu {\n  ul.sf-style-none {\n    .mobile-only {\n      display: none !important;\n    }\n    .no-link {\n      background: $superfish-1-background-color-level-second;\n      color: #1e384b;\n      line-height: 20px;\n      padding: 0.75em 0;\n      font-size: 16px;\n      text-align: left;\n      font-weight: 400;\n      text-decoration: none;\n      margin: 0;\n      display: block;\n      position: relative;\n    }\n    .sub-title {\n      font-weight: bold;\n      display: block;\n      margin-bottom: 10px;\n    }\n    .locator-icon, .locator-icon:hover, .locator-icon:focus {\n      display: inline-block;\n      padding-left: 25px;\n      background-image: url('../../../omega_samhsa_main/src/images/locatorsm.png');\n      background-position: 0px 14px;\n      background-repeat: no-repeat;\n    }\n    .external-icon, .external-icon:hover, .external-icon:focus {\n      display: inline-block;\n      padding-right: 25px;\n      background-image: url('../../../omega_samhsa_main/src/images/external.png');\n      background-position: 212px 14px;\n      background-repeat: no-repeat;\n    }\n    li.sf-depth-1 ul li.sf-depth-2 {\n      ul {\n        display:none !important;\n      }\n    }\n    li .about-leadership {\n      border: none;\n      padding-top: 15px;\n      clear: both;\n      float: none;\n      overflow: hidden;\n      display: block;\n    }\n    .about-leadership div span {\n      padding-left: 130px;\n      background-image: url('../../../omega_samhsa_main/src/images/leadership.png');\n      background-position: 0px 0px;\n      background-repeat: no-repeat;\n      height: 120px;\n      display: block;\n    }\n  }\n}\n.extra-width .block-superfish-main-menu {\n  ul.sf-menu.menu {\n    display: flex;\n    flex-direction: row;\n    float: none;\n    width: 100%;\n    margin: 0 auto;\n    li {\n      display: inline-block;\n      float: none;\n      width: 100%;\n    }\n    li:nth-child(1) {\n      min-width: 170px;\n    }\n    li:nth-child(2) {\n      min-width: 190px;\n    }\n    li:nth-child(3) {\n      min-width: 170px;\n    }\n  }\n}\n.block-superfish-main-menu, #block-superfish-2 {\n  #superfish-main-menu.ul.sf-menu.menu {\n    display: flex;\n    flex-direction: row;\n    float: none;\n    width: 100%;\n    margin: 0 auto;\n    li {\n      display: inline-block;\n      float: none;\n      width: 100%;\n    }\n  }\n  .sf-style-none {\n    margin: 0;\n    padding: 0;\n    background: #1e384b;\n    width: 100%;\n    clear: both;\n    float: none;\n    min-height: 41px;\n    li.sf-depth-1 {\n      a.sf-depth-1, a.sf-depth-1.sf-with-ul {\n        font-weight: 400;\n        text-decoration: none;\n        height: 41px;\n        line-height: 41px;\n        text-align: center !important;\n        padding:0 0.75em!important;\n        letter-spacing: 0.03em;\n        color: #fff;\n        font-size: 16px;\n      }\n    }\n    &.sf-navbar {\n      width: 100%;\n      background: $superfish-1-background-color-level-first;\n    }\n    ul {\n      background: $superfish-1-background-color-level-second;\n      border: 1px solid #cdcdcd;\n      border-radius: unset;\n      padding: 15px 30px !important;\n      min-width:27em !important; /* some script is overriding the menu width */\n      &.sf-megamenu li {\n        &.sf-megamenu-wrapper {\n          background: $superfish-1-background-color-level-fourth;\n          li {\n            background: transparent;\n          }\n        }\n      }\n    }\n    a {\n      color: $superfish-1-color;\n      padding: 0.75em 1.05em;\n      font-size: 16px;\n      text-align: left;\n      font-family: Tahoma;\n      font-weight: 400;\n      text-decoration: none;\n      &.sf-with-ul {\n        padding-right: 2.25em;\n      }\n      &:focus {\n        background: $superfish-1-background-color-level-first;\n        outline: 0;\n      }\n      &:hover {\n        background: $superfish-1-background-color-level-first;\n        outline: 0;\n      }\n      &:active {\n        background: $superfish-1-background-color-level-first;\n        outline: 0;\n      }\n    }\n    span {\n      &.nolink {\n        color: $superfish-1-color-txt;\n        padding: 0.75em 0;\n        &.sf-with-ul {\n          padding-right: 2.25em;\n        }\n        &:hover {\n          background: $superfish-1-background-color-level-second;\n          outline: 0;\n        }\n      }\n      &.sf-description {\n        color: $superfish-1-color;\n        display: block;\n        font-size: 0.833em;\n        line-height: 1.5;\n        margin: 5px 0 0 5px;\n        padding: 0;\n      }\n    }\n    &.rtl {\n      span {\n        &.sf-description {\n          margin: 5px 5px 0 0;\n        }\n        &.nolink.sf-with-ul {\n          padding-left: 2.25em;\n          padding-right: 1em;\n        }\n      }\n      a.sf-with-ul {\n        padding-left: 2.25em;\n        padding-right: 1em;\n      }\n    }\n    li.sf-item-1 li.sf-item-1, li.sf-item-3 li.sf-item-6, li li.view-full-bio, li li .about-leadership {\n      border: none;\n    }\n    li {\n      background: $superfish-1-background-color-level-first;\n\n      li {\n        background: $superfish-1-background-color-level-second;\n        color: #1E384B;\n        font-size: 16px;\n        line-height: 20px;\n        border-bottom: 1px solid #cdcdcd;\n        a {\n          background: $superfish-1-background-color-level-second;\n          color: #1F419A;\n          padding-left:unset ;\n          padding-right:unset ;\n          line-height: 20px;\n          &:hover {\n            background: $superfish-1-background-color-level-second;\n            /* color: #CD3835;  508 contrast fix below */\n               color: #932725;\n          }\n          &:focus {\n            background: $superfish-1-background-color-level-second;\n            /* color: #CD3835;  508 contrast fix below */\n            color: #932725;\n          }\n          &:active {\n            background: $superfish-1-background-color-level-second;\n            /* color: #CD3835;  508 contrast fix below */\n            color: #932725;\n          }\n        }\n        li {\n          background: $superfish-1-background-color-level-third;\n        }\n      }\n      li:last-child {\n        border: none;\n      }\n      &:hover {\n        background: #eee;\n        /* background: $superfish-1-background-color-level-first; */\n        outline: 0;\n        > ul {\n          top: 40px;\n        }\n      }\n      &.sfHover {\n        background: $superfish-1-background-color-level-first;\n        outline: 0;\n        > ul {\n          top: 40px;\n        }\n      }\n    }\n    li.sf-item-1 ul {\n      li.sf-item-1 div span {\n        font-weight: bold;\n        display: block;\n        margin-bottom: 10px;\n      }\n      li.sf-item-2, li.sf-item-3, li.sf-item-4, li.sf-item-5 {\n        a {\n          display: inline-block;\n          padding-left: 25px;\n          background-image: url('../../../omega_samhsa_main/src/images/locatorsm.png');\n          background-position: 0px 14px;\n          background-repeat: no-repeat;\n        }\n      }\n    }\n    li.sf-item-3 ul {\n      li.sf-item-6, li.ext-link {\n        a {\n          display: inline-block;\n          padding-right: 25px;\n          background-image: url('../../../omega_samhsa_main/src/images/external.png');\n          background-position: 212px 14px;\n          background-repeat: no-repeat;\n        }\n      }\n      li.ext-link:hover {\n        background: unset;\n      }\n    }\n    li.sf-item-7 ul {\n    //   @include breakpoint ($tween_break_high, true) {\n    //     left: auto !important;\n    //     right: -117px !important;\n    //   }\n      li .about-leadership div span {\n        padding-left: 130px;\n        background-image: url('../../../omega_samhsa_main/src/images/leadership.png');\n        background-position: 0px 0px;\n        background-repeat: no-repeat;\n        height: 120px;\n        display: block;\n      }\n      li.view-full-bio a {\n        text-align: center;\n      }\n    }\n    .sf-sub-indicator {\n      display: none;\n     // background-image: url('../images/dropdown-arrows.png');\n    }\n    ul ul {\n      border: unset;\n      padding: unset !important;\n    }\n  }\n  div.sf-accordion-toggle {\n    &.sf-style-none a {\n      background: $superfish-1-background-color-level-first;\n      color: $superfish-1-color;\n      padding: 1em;\n      &.sf-expanded {\n        background-color: $superfish-1-background-color-level-fourth;\n        font-weight: bold;\n      }\n    }\n  }\n  .sf-menu.sf-style-none {\n    &.rtl {\n      &.sf-accordion li {\n        li {\n          a {\n            padding-left: auto;\n            padding-right: 2em;\n          }\n          li {\n            a {\n              padding-left: auto;\n              padding-right: 3em;\n            }\n            li {\n              a {\n                padding-left: auto;\n                padding-right: 4em;\n              }\n              li {\n                a {\n                  padding-left: auto;\n                  padding-right: 5em;\n                }\n                span.nolink {\n                  padding-left: auto;\n                  padding-right: 5em;\n                }\n              }\n              span.nolink {\n                padding-left: auto;\n                padding-right: 4em;\n              }\n            }\n            span.nolink {\n              padding-left: auto;\n              padding-right: 3em;\n            }\n          }\n          span.nolink {\n            padding-left: auto;\n            padding-right: 2em;\n          }\n        }\n      }\n      ul.sf-megamenu {\n        li.sf-megamenu-wrapper {\n          ol li {\n            &.sf-megamenu-column {\n              float: right;\n            }\n          }\n        }\n      }\n    }\n    &.sf-accordion li {\n      &.sf-expanded {\n        background-color: $superfish-1-background-color-level-fourth;\n        > {\n          a {\n            font-weight: bold;\n          }\n          span.nolink {\n            font-weight: bold;\n          }\n        }\n      }\n      li {\n        a {\n          padding-left: 2em;\n        }\n        li {\n          a {\n            padding-left: 3em;\n          }\n          li {\n            a {\n              padding-left: 4em;\n            }\n            li {\n              a {\n                padding-left: 5em;\n              }\n              span.nolink {\n                padding-left: 5em;\n              }\n            }\n            span.nolink {\n              padding-left: 4em;\n            }\n          }\n          span.nolink {\n            padding-left: 3em;\n          }\n        }\n        span.nolink {\n          padding-left: 2em;\n        }\n      }\n      a.sf-accordion-button {\n        font-weight: bold;\n        position: absolute;\n        right: 0;\n        top: 0;\n        z-index: 499;\n      }\n    }\n    ul.sf-megamenu {\n      li.sf-megamenu-wrapper {\n        ol {\n          margin: 0;\n          padding: 0;\n          li {\n            margin: 0;\n            padding: 0;\n            &.sf-megamenu-column {\n              display: inline;\n              float: left;\n            }\n          }\n        }\n        a.menuparent {\n          font-weight: bold;\n        }\n        span.nolink {\n          &.menuparent {\n            font-weight: bold;\n          }\n        }\n      }\n    }\n    li.news-room ul {\n      padding: 0 !important;\n      border: none;\n    }\n  }\n}\n// ul.sf-menu li.sf-depth-1:nth-child(5) a.sf-depth-1 {\n//   border-bottom: 4px solid #CD3835;\n// }\n\n.sf-style-none li.sf-depth-1 a.sf-depth-1.active,\n.sf-style-none li.sf-depth-1 a.sf-depth-1:hover,\n.sf-style-none li.sf-depth-1 a.sf-depth-1.sf-with-ul:hover,\n.sf-style-none li.sf-depth-1 a.sf-depth-1:hover,\n.sf-style-none li.sf-depth-1 a.sf-depth-1.sf-with-ul:hover {\n    border-bottom: 4px solid #CD3835;\n}\n\n.block-superfish-main-menu .sf-style-none li li a.active {\n  /* color: #CD3835;  508 contrast fix below */\n  color: #932725;\n}\n\n/* Mobile Menu */\n\n\n/* cutom styles added for desktop */\n.block-mobile-menu {\n  .dl-menuwrapper {\n  ul.dl-menu {\n    .no-link {\n      background: $superfish-1-background-color-level-second;\n      color: #1e384b;\n      line-height: 20px;\n      padding: 0.75em 0;\n      font-size: 16px;\n      text-align: left;\n      font-weight: 400;\n      text-decoration: none;\n      margin: 0;\n      display: block;\n      position: relative;\n    }\n    .sub-title {\n      font-weight: bold;\n      display: block;\n      margin-bottom: 10px;\n    }\n    .locator-icon, .locator-icon:hover, .locator-icon:focus {\n      display: inline-block;\n      padding-left: 25px;\n      background-image: url('../../../omega_samhsa_main/src/images/locatorsm.png');\n      background-position: 0px 14px;\n      background-repeat: no-repeat;\n    }\n    .external-icon, .external-icon:hover, .external-icon:focus {\n      display: inline-block;\n      padding-right: 25px;\n      background-image: url('../../../omega_samhsa_main/src/images/external.png');\n      background-position: 212px 14px;\n      background-repeat: no-repeat;\n    }\n    li .about-leadership {\n      border: none;\n      padding-top: 15px;\n      clear: both;\n      float: none;\n      overflow: hidden;\n      display: block;\n    }\n    .about-leadership div span {\n      padding-left: 130px;\n      background-image: url('../../../omega_samhsa_main/src/images/leadership.png');\n      background-position: 0px 0px;\n      background-repeat: no-repeat;\n      height: 120px;\n      display: block;\n    }\n  }\n  }\n}\n\n@media only screen and (min-width: 1000px)  {\n      .block-mobile-menu {\n        @include breakpoint ($max-width-tablet-landscape, true){\n          display: none;\n      }\n    }\n  }\n\n  #header-outer-wrapper {\n    background-color: $superfish-1-background-color-level-first;\n    //padding: 20px;\n    @include breakpoint ($max-width-fullsize, true) {\n      background-color: #fff;\n      padding-top:  15px;\n      margin-bottom: 20px;\n    }\n    .preface-layout {\n      position: relative;\n      .region--preface-first {\n        &:before {\n          display: none;\n        }\n        // .block-mobile-menu {\n\n        // }\n      }\n    }\n  }\n\n/* Common styles of menus */\n\n.dl-menuwrapper {\n  width: 100%;\n  max-width: 100%;\n  /* max-width: 300px; */\n  float: left;\n  position: absolute;\n  -webkit-perspective: 1000px;\n  perspective: 1000px;\n  -webkit-perspective-origin: 50% 200%;\n  perspective-origin: 50% 200%;\n  opacity: 0.97;\n  height: 0;\n}\n.dl-menuwrapper {\n  z-index: 500;\n}\n\n\n.dl-menuwrapper:first-child {\n  margin-right: 100px;\n}\n\n.dl-menuwrapper button {\n  background: transparent;\n  border: none;\n  width: 48px;\n  height: 45px;\n  text-indent: -900em;\n  overflow: hidden;\n  position: absolute;\n  cursor: pointer;\n  outline: none;\n  top:-52px;\n  left: 5px;\n  padding-top: 33px;\n  font-size: 12px;\n  text-align: center;\n  letter-spacing: 0.03em;\n}\n.dl-menuwrapper button:hover {\n  background: none;\n}\n/* .dl-menuwrapper button:hover,\n.dl-menuwrapper button.dl-active,*/\n.dl-menuwrapper ul {\n  background: #eee;\n}\n\n.dl-menuwrapper button:after {\n  content: '';\n  position: absolute;\n  width: 68%;\n  height: 5px;\n  background: #fff;\n  top: 10px;\n  left: 15%;\n  box-shadow:\n          0 10px 0 #fff,\n          0 20px 0 #fff;\n}\n\n.dl-menuwrapper ul {\n  padding: 0;\n  list-style: none;\n  -webkit-transform-style: preserve-3d;\n  transform-style: preserve-3d;\n}\n/* override menu css styles */\n.dl-menuwrapper .menu-item, .menu-item--collapsed, .menu-item--expanded {\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n  list-style-image: none;\n}\n.dl-menuwrapper li {\n  position: relative;\n}\n\n.dl-menuwrapper li a {\n  display: block;\n  position: relative;\n  padding: 15px 30px 15px 0px;\n  font-family: Tahoma, Verdana, Segoe, sans-serif;\n  font-size: 16px;\n  line-height: 20px;\n  font-weight: 300;\n  color: #1F419A;\n  outline: none;\n  border-bottom: 1px solid #979797;\n  text-decoration: none;\n}\n.dl-menuwrapper li.last a {\n  border: none;\n}\n.no-touch .dl-menuwrapper li a:hover {\n  background: rgba(255,248,213,0.1);\n}\n.dl-menuwrapper li.dl-back { background: rgba(0,0,0,0.1);  display: block; clear: both; float: none; overflow: hidden; border-bottom: 1px solid #979797; margin: 0 -15px; }\n.dl-menuwrapper li.dl-back .dl-back-link {  }\n.dl-menuwrapper li.dl-back > a {\n  padding-left: 30px;\n  padding-right: 45px;\n  background: unset;\n  border-bottom: none;\n  display: inline-block;\n  cursor: pointer;\n}\n.dl-menuwrapper ul.dl-subview li.dl-back > a {\n  border-right: 1px solid #979797;\n}\na.dl-back-link:before {\n  position: absolute;\n  top: 0;\n  line-height: 50px;\n  speak: none;\n  -webkit-font-smoothing: antialiased;\n  cursor: pointer;\n  text-rendering: auto;\n  font-size: 18px;\n  letter-spacing: 0;\n  font-weight: 200;\n  text-align: center;\n  left: 0;\n  width: 44px;\n  height: 50px;\n  content: \" \";\n // font-family: fontAwesome;\n // content: \"\\f053\";\n  padding-right: 10px;\n  color: #1f419a!important;\n  background: transparent url(../../../omega_samhsa_main/src/images/left-arrow.png) 12px 12px no-repeat;\n}\na.dl-close-link:after {\n  position: absolute;\n  top: 0;\n  line-height: 50px;\n  speak: none;\n  -webkit-font-smoothing: antialiased;\n  cursor: pointer;\n  content: \" \";\n  color: #1f419a;\n  letter-spacing: 0;\n  text-align: center;\n  right: 0;\n  width: 44px;\n  background: transparent url(../../../omega_samhsa_main/src/images/close.png) 16px 12px no-repeat;\n  height: 50px;\n}\n.dl-menuwrapper li.dl-back:after,\n.dl-menuwrapper li > a:not(:only-child):after {\n  position: absolute;\n  top: 0;\n  line-height: 50px;\n  font-family: 'arial';\n  speak: none;\n  -webkit-font-smoothing: antialiased;\n  /* content: \"\\e000\"; */\n}\n.dl-menuwrapper li.menu-item--expanded > span.expand:after {\n  position: absolute;\n  top: 0;\n  line-height: 50px;\n  speak: none;\n  -webkit-font-smoothing: antialiased;\n  cursor: pointer;\n  content: \" \";\n  //content: \"\\f054\";\n // font-family: FontAwesome;\n  text-rendering: auto;\n  font-size: 18px;\n  color: #1F419A;\n  letter-spacing: 0;\n  font-weight: 200;\n  text-align: center;\n  right: 0;\n  width: 44px;\n  height: 50px;\n  background: transparent url(../../../omega_samhsa_main/src/images/right-arrow.png) 16px 12px no-repeat;\n}\n.dl-menuwrapper li.dl-back:after {\n  left: 10px;\n  color: rgba(212,204,198,0.3);\n  -webkit-transform: rotate(180deg);\n  transform: rotate(180deg);\n}\n.dl-menuwrapper li .dl-close-link { display: inline-block; float: right;}\n.dl-menuwrapper li .dl-close-link {\n  padding-right: 30px;\n  background: unset;\n}\n.dl-menuwrapper li > a:after {\n  right: 10px;\n  color: rgba(0,0,0,0.15);\n}\n\n.dl-menuwrapper .dl-menu {\n  margin: 0 0 0 0;\n  position: relative;\n  width: 100%;\n  opacity: 0;\n  pointer-events: none;\n  -webkit-transform: translateY(10px);\n  transform: translateY(10px);\n  -webkit-backface-visibility: hidden;\n  backface-visibility: hidden;\n  padding: 0 15px;\n  left:-100%;\n}\n.dl-menuwrapper .dl-menu--1.dl-menu.dl-subview {\n  margin: -15px 0 0 0;\n}\n\n.dl-menuwrapper .dl-menu.dl-menu-toggle {\n  transition: all 0.3s ease;\n}\n\n.dl-menuwrapper .dl-menu.dl-menuopen {\n  opacity: 1;\n  pointer-events: auto;\n  -webkit-transform: translateY(0px);\n  transform: translateY(0px);\n  left:0px;\n  transition: 0.5s;\n  top: -70px;\n}\n\n/* Hide the inner submenus */\n.dl-menuwrapper li .dl-submenu {\n  display: none;\n}\n\n/*\nWhen a submenu is openend, we will hide all li siblings.\nFor that we give a class to the parent menu called \"dl-subview\".\nWe also hide the submenu link.\nThe opened submenu will get the class \"dl-subviewopen\".\nAll this is done for any sub-level being entered.\n*/\n.dl-menu.dl-subview li,\n.dl-menu.dl-subview li.dl-subviewopen > a,\n.dl-menu.dl-subview li.dl-subview > a {\n  display: none;\n}\n\n.dl-menu.dl-subview li.dl-subview,\n.dl-menu.dl-subview li.dl-subview .dl-submenu,\n.dl-menu.dl-subview li.dl-subviewopen,\n.dl-menu.dl-subview li.dl-subviewopen > .dl-submenu,\n.dl-menu.dl-subview li.dl-subviewopen > .dl-submenu > li {\n  display: block;\n}\n\n/* Dynamically added submenu outside of the menu context */\n.dl-menuwrapper > .dl-submenu {\n  position: absolute;\n  width: 100%;\n  top: 50px;\n  left: 0;\n  margin: 0;\n}\n\n/* Animation classes for moving out and in */\n\n.dl-menu.dl-animate-out-1 {\n  -webkit-animation: MenuAnimOut1 0.4s;\n  animation: MenuAnimOut1 0.4s;\n}\n\n.dl-menu.dl-animate-out-2 {\n  -webkit-animation: MenuAnimOut2 0.3s ease-in-out;\n  animation: MenuAnimOut2 0.3s ease-in-out;\n}\n\n.dl-menu.dl-animate-out-3 {\n  -webkit-animation: MenuAnimOut3 0.4s ease;\n  animation: MenuAnimOut3 0.4s ease;\n}\n\n.dl-menu.dl-animate-out-4 {\n  -webkit-animation: MenuAnimOut4 0.4s ease;\n  animation: MenuAnimOut4 0.4s ease;\n}\n\n.dl-menu.dl-animate-out-5 {\n  -webkit-animation: MenuAnimOut5 0.4s ease;\n  animation: MenuAnimOut5 0.4s ease;\n}\n\n@-webkit-keyframes MenuAnimOut1 {\n  0% { }\n  50% {\n    -webkit-transform: translateZ(-250px) rotateY(30deg);\n  }\n  75% {\n    -webkit-transform: translateZ(-372.5px) rotateY(15deg);\n    opacity: .5;\n  }\n  100% {\n    -webkit-transform: translateZ(-500px) rotateY(0deg);\n    opacity: 0;\n  }\n}\n\n@-webkit-keyframes MenuAnimOut2 {\n  0% { }\n  100% {\n    -webkit-transform: translateX(-100%);\n    opacity: 0;\n  }\n}\n\n@-webkit-keyframes MenuAnimOut3 {\n  0% { }\n  100% {\n    -webkit-transform: translateZ(300px);\n    opacity: 0;\n  }\n}\n\n@-webkit-keyframes MenuAnimOut4 {\n  0% { }\n  100% {\n    -webkit-transform: translateZ(-300px);\n    opacity: 0;\n  }\n}\n\n@-webkit-keyframes MenuAnimOut5 {\n  0% { }\n  100% {\n    -webkit-transform: translateY(40%);\n    opacity: 0;\n  }\n}\n\n@keyframes MenuAnimOut1 {\n  0% { }\n  50% {\n    -webkit-transform: translateZ(-250px) rotateY(30deg);\n    transform: translateZ(-250px) rotateY(30deg);\n  }\n  75% {\n    -webkit-transform: translateZ(-372.5px) rotateY(15deg);\n    transform: translateZ(-372.5px) rotateY(15deg);\n    opacity: .5;\n  }\n  100% {\n    -webkit-transform: translateZ(-500px) rotateY(0deg);\n    transform: translateZ(-500px) rotateY(0deg);\n    opacity: 0;\n  }\n}\n\n@keyframes MenuAnimOut2 {\n  0% { }\n  100% {\n    -webkit-transform: translateX(-100%);\n    transform: translateX(-100%);\n    opacity: 0;\n  }\n}\n\n@keyframes MenuAnimOut3 {\n  0% { }\n  100% {\n    -webkit-transform: translateZ(300px);\n    transform: translateZ(300px);\n    opacity: 0;\n  }\n}\n\n@keyframes MenuAnimOut4 {\n  0% { }\n  100% {\n    -webkit-transform: translateZ(-300px);\n    transform: translateZ(-300px);\n    opacity: 0;\n  }\n}\n\n@keyframes MenuAnimOut5 {\n  0% { }\n  100% {\n    -webkit-transform: translateY(40%);\n    transform: translateY(40%);\n    opacity: 0;\n  }\n}\n\n.dl-menu.dl-animate-in-1 {\n  -webkit-animation: MenuAnimIn1 0.3s;\n  animation: MenuAnimIn1 0.3s;\n}\n\n.dl-menu.dl-animate-in-2 {\n  -webkit-animation: MenuAnimIn2 0.3s ease-in-out;\n  animation: MenuAnimIn2 0.3s ease-in-out;\n}\n\n.dl-menu.dl-animate-in-3 {\n  -webkit-animation: MenuAnimIn3 0.4s ease;\n  animation: MenuAnimIn3 0.4s ease;\n}\n\n.dl-menu.dl-animate-in-4 {\n  -webkit-animation: MenuAnimIn4 0.4s ease;\n  animation: MenuAnimIn4 0.4s ease;\n}\n\n.dl-menu.dl-animate-in-5 {\n  -webkit-animation: MenuAnimIn5 0.4s ease;\n  animation: MenuAnimIn5 0.4s ease;\n}\n\n@-webkit-keyframes MenuAnimIn1 {\n  0% {\n    -webkit-transform: translateZ(-500px) rotateY(0deg);\n    opacity: 0;\n  }\n  20% {\n    -webkit-transform: translateZ(-250px) rotateY(30deg);\n    opacity: 0.5;\n  }\n  100% {\n    -webkit-transform: translateZ(0px) rotateY(0deg);\n    opacity: 1;\n  }\n}\n\n@-webkit-keyframes MenuAnimIn2 {\n  0% {\n    -webkit-transform: translateX(-100%);\n    opacity: 0;\n  }\n  100% {\n    -webkit-transform: translateX(0px);\n    opacity: 1;\n  }\n}\n\n@-webkit-keyframes MenuAnimIn3 {\n  0% {\n    -webkit-transform: translateZ(300px);\n    opacity: 0;\n  }\n  100% {\n    -webkit-transform: translateZ(0px);\n    opacity: 1;\n  }\n}\n\n@-webkit-keyframes MenuAnimIn4 {\n  0% {\n    -webkit-transform: translateZ(-300px);\n    opacity: 0;\n  }\n  100% {\n    -webkit-transform: translateZ(0px);\n    opacity: 1;\n  }\n}\n\n@-webkit-keyframes MenuAnimIn5 {\n  0% {\n    -webkit-transform: translateY(40%);\n    opacity: 0;\n  }\n  100% {\n    -webkit-transform: translateY(0);\n    opacity: 1;\n  }\n}\n\n@keyframes MenuAnimIn1 {\n  0% {\n    -webkit-transform: translateZ(-500px) rotateY(0deg);\n    transform: translateZ(-500px) rotateY(0deg);\n    opacity: 0;\n  }\n  20% {\n    -webkit-transform: translateZ(-250px) rotateY(30deg);\n    transform: translateZ(-250px) rotateY(30deg);\n    opacity: 0.5;\n  }\n  100% {\n    -webkit-transform: translateZ(0px) rotateY(0deg);\n    transform: translateZ(0px) rotateY(0deg);\n    opacity: 1;\n  }\n}\n\n@keyframes MenuAnimIn2 {\n  0% {\n    -webkit-transform: translateX(-100%);\n    transform: translateX(-100%);\n    opacity: 0;\n  }\n  100% {\n    -webkit-transform: translateX(0px);\n    transform: translateX(0px);\n    opacity: 1;\n  }\n}\n\n@keyframes MenuAnimIn3 {\n  0% {\n    -webkit-transform: translateZ(300px);\n    transform: translateZ(300px);\n    opacity: 0;\n  }\n  100% {\n    -webkit-transform: translateZ(0px);\n    transform: translateZ(0px);\n    opacity: 1;\n  }\n}\n\n@keyframes MenuAnimIn4 {\n  0% {\n    -webkit-transform: translateZ(-300px);\n    transform: translateZ(-300px);\n    opacity: 0;\n  }\n  100% {\n    -webkit-transform: translateZ(0px);\n    transform: translateZ(0px);\n    opacity: 1;\n  }\n}\n\n@keyframes MenuAnimIn5 {\n  0% {\n    -webkit-transform: translateY(40%);\n    transform: translateY(40%);\n    opacity: 0;\n  }\n  100% {\n    -webkit-transform: translateY(0);\n    transform: translateY(0);\n    opacity: 1;\n  }\n}\n\n.dl-menuwrapper > .dl-submenu.dl-animate-in-1 {\n  -webkit-animation: SubMenuAnimIn1 0.4s ease;\n  animation: SubMenuAnimIn1 0.4s ease;\n}\n\n.dl-menuwrapper > .dl-submenu.dl-animate-in-2 {\n  -webkit-animation: SubMenuAnimIn2 0.3s ease-in-out;\n  animation: SubMenuAnimIn2 0.3s ease-in-out;\n}\n\n.dl-menuwrapper > .dl-submenu.dl-animate-in-3 {\n  -webkit-animation: SubMenuAnimIn3 0.4s ease;\n  animation: SubMenuAnimIn3 0.4s ease;\n}\n\n.dl-menuwrapper > .dl-submenu.dl-animate-in-4 {\n  -webkit-animation: SubMenuAnimIn4 0.4s ease;\n  animation: SubMenuAnimIn4 0.4s ease;\n}\n\n.dl-menuwrapper > .dl-submenu.dl-animate-in-5 {\n  -webkit-animation: SubMenuAnimIn5 0.4s ease;\n  animation: SubMenuAnimIn5 0.4s ease;\n}\n\n@-webkit-keyframes SubMenuAnimIn1 {\n  0% {\n    -webkit-transform: translateX(50%);\n    opacity: 0;\n  }\n  100% {\n    -webkit-transform: translateX(0px);\n    opacity: 1;\n  }\n}\n\n@-webkit-keyframes SubMenuAnimIn2 {\n  0% {\n    -webkit-transform: translateX(100%);\n    opacity: 0;\n  }\n  100% {\n    -webkit-transform: translateX(0px);\n    opacity: 1;\n  }\n}\n\n@-webkit-keyframes SubMenuAnimIn3 {\n  0% {\n    -webkit-transform: translateZ(-300px);\n    opacity: 0;\n  }\n  100% {\n    -webkit-transform: translateZ(0px);\n    opacity: 1;\n  }\n}\n\n@-webkit-keyframes SubMenuAnimIn4 {\n  0% {\n    -webkit-transform: translateZ(300px);\n    opacity: 0;\n  }\n  100% {\n    -webkit-transform: translateZ(0px);\n    opacity: 1;\n  }\n}\n\n@-webkit-keyframes SubMenuAnimIn5 {\n  0% {\n    -webkit-transform: translateZ(-200px);\n    opacity: 0;\n  }\n  100% {\n    -webkit-transform: translateZ(0);\n    opacity: 1;\n  }\n}\n\n@keyframes SubMenuAnimIn1 {\n  0% {\n    -webkit-transform: translateX(50%);\n    transform: translateX(50%);\n    opacity: 0;\n  }\n  100% {\n    -webkit-transform: translateX(0px);\n    transform: translateX(0px);\n    opacity: 1;\n  }\n}\n\n@keyframes SubMenuAnimIn2 {\n  0% {\n    -webkit-transform: translateX(100%);\n    transform: translateX(100%);\n    opacity: 0;\n  }\n  100% {\n    -webkit-transform: translateX(0px);\n    transform: translateX(0px);\n    opacity: 1;\n  }\n}\n\n@keyframes SubMenuAnimIn3 {\n  0% {\n    -webkit-transform: translateZ(-300px);\n    transform: translateZ(-300px);\n    opacity: 0;\n  }\n  100% {\n    -webkit-transform: translateZ(0px);\n    transform: translateZ(0px);\n    opacity: 1;\n  }\n}\n\n@keyframes SubMenuAnimIn4 {\n  0% {\n    -webkit-transform: translateZ(300px);\n    transform: translateZ(300px);\n    opacity: 0;\n  }\n  100% {\n    -webkit-transform: translateZ(0px);\n    transform: translateZ(0px);\n    opacity: 1;\n  }\n}\n\n@keyframes SubMenuAnimIn5 {\n  0% {\n    -webkit-transform: translateZ(-200px);\n    transform: translateZ(-200px);\n    opacity: 0;\n  }\n  100% {\n    -webkit-transform: translateZ(0);\n    transform: translateZ(0);\n    opacity: 1;\n  }\n}\n\n.dl-menuwrapper > .dl-submenu.dl-animate-out-1 {\n  -webkit-animation: SubMenuAnimOut1 0.4s ease;\n  animation: SubMenuAnimOut1 0.4s ease;\n}\n\n.dl-menuwrapper > .dl-submenu.dl-animate-out-2 {\n  -webkit-animation: SubMenuAnimOut2 0.3s ease-in-out;\n  animation: SubMenuAnimOut2 0.3s ease-in-out;\n}\n\n.dl-menuwrapper > .dl-submenu.dl-animate-out-3 {\n  -webkit-animation: SubMenuAnimOut3 0.4s ease;\n  animation: SubMenuAnimOut3 0.4s ease;\n}\n\n.dl-menuwrapper > .dl-submenu.dl-animate-out-4 {\n  -webkit-animation: SubMenuAnimOut4 0.4s ease;\n  animation: SubMenuAnimOut4 0.4s ease;\n}\n\n.dl-menuwrapper > .dl-submenu.dl-animate-out-5 {\n  -webkit-animation: SubMenuAnimOut5 0.4s ease;\n  animation: SubMenuAnimOut5 0.4s ease;\n}\n\n@-webkit-keyframes SubMenuAnimOut1 {\n  0% {\n    -webkit-transform: translateX(0%);\n    opacity: 1;\n  }\n  100% {\n    -webkit-transform: translateX(50%);\n    opacity: 0;\n  }\n}\n\n@-webkit-keyframes SubMenuAnimOut2 {\n  0% {\n    -webkit-transform: translateX(0%);\n    opacity: 1;\n  }\n  100% {\n    -webkit-transform: translateX(100%);\n    opacity: 0;\n  }\n}\n\n@-webkit-keyframes SubMenuAnimOut3 {\n  0% {\n    -webkit-transform: translateZ(0px);\n    opacity: 1;\n  }\n  100% {\n    -webkit-transform: translateZ(-300px);\n    opacity: 0;\n  }\n}\n\n@-webkit-keyframes SubMenuAnimOut4 {\n  0% {\n    -webkit-transform: translateZ(0px);\n    opacity: 1;\n  }\n  100% {\n    -webkit-transform: translateZ(300px);\n    opacity: 0;\n  }\n}\n\n@-webkit-keyframes SubMenuAnimOut5 {\n  0% {\n    -webkit-transform: translateZ(0);\n    opacity: 1;\n  }\n  100% {\n    -webkit-transform: translateZ(-200px);\n    opacity: 0;\n  }\n}\n\n@keyframes SubMenuAnimOut1 {\n  0% {\n    -webkit-transform: translateX(0%);\n    transform: translateX(0%);\n    opacity: 1;\n  }\n  100% {\n    -webkit-transform: translateX(50%);\n    transform: translateX(50%);\n    opacity: 0;\n  }\n}\n\n@keyframes SubMenuAnimOut2 {\n  0% {\n    -webkit-transform: translateX(0%);\n    transform: translateX(0%);\n    opacity: 1;\n  }\n  100% {\n    -webkit-transform: translateX(100%);\n    transform: translateX(100%);\n    opacity: 0;\n  }\n}\n\n@keyframes SubMenuAnimOut3 {\n  0% {\n    -webkit-transform: translateZ(0px);\n    transform: translateZ(0px);\n    opacity: 1;\n  }\n  100% {\n    -webkit-transform: translateZ(-300px);\n    transform: translateZ(-300px);\n    opacity: 0;\n  }\n}\n\n@keyframes SubMenuAnimOut4 {\n  0% {\n    -webkit-transform: translateZ(0px);\n    transform: translateZ(0px);\n    opacity: 1;\n  }\n  100% {\n    -webkit-transform: translateZ(300px);\n    transform: translateZ(300px);\n    opacity: 0;\n  }\n}\n\n@keyframes SubMenuAnimOut5 {\n  0% {\n    -webkit-transform: translateZ(0);\n    transform: translateZ(0);\n    opacity: 1;\n  }\n  100% {\n    -webkit-transform: translateZ(-200px);\n    transform: translateZ(-200px);\n    opacity: 0;\n  }\n}\n\n/* No JS Fallback */\n.no-js .dl-menuwrapper .dl-menu {\n  position: relative;\n  opacity: 1;\n  -webkit-transform: none;\n  transform: none;\n}\n\n.no-js .dl-menuwrapper li .dl-submenu {\n  display: block;\n}\n\n.no-js .dl-menuwrapper li.dl-back {\n  display: none;\n}\n\n.no-js .dl-menuwrapper li > a:not(:only-child) {\n  background: rgba(0,0,0,0.1);\n}\n\n.no-js .dl-menuwrapper li > a:not(:only-child):after {\n  content: '';\n}\n.dl-menuwrapper span.nolink {\n  color: #1E384B;\n  /* padding: 0.75em 0; */\n  padding: 15px 0;\n  display: block;\n  position: relative;\n}\n.dl-menuwrapper span.nolink div span {\n  font-weight: bold;\n  display: block;\n  margin-bottom: 10px;\n}\n.dl-menu li.first ul.dl-menu--2 li.leaf a {\n  display: block;\n  padding-left: 35px;\n  background-image: url(../../../omega_samhsa_main/src/images/locatorsm.png);\n  background-position: 14px 16px;\n  background-repeat: no-repeat;\n}\n.dl-menu li.first ul.dl-menu--2 li.last.leaf a {\n  background: none;\n}\n.dl-menu li .about-leadership div span {\n  padding-left: 130px;\n  background-image: url('../../../omega_samhsa_main/src/images/leadership.png');\n  background-position: 0px 0px;\n  background-repeat: no-repeat;\n  height: 120px;\n  display: block;\n}\n/* Colors for demos */\n\n/* Demo 1 */\n.demo-1 .dl-menuwrapper button {\n  background: #c62860;\n  cursor: pointer;\n}\n\n.demo-1 .dl-menuwrapper button:hover,\n.demo-1 .dl-menuwrapper button.dl-active,\n.demo-1 .dl-menuwrapper ul {\n  background: #9e1847;\n}\n\n/* Demo 2 */\n.demo-2 .dl-menuwrapper button {\n  background: #e86814;\n}\n\n.demo-2 .dl-menuwrapper button:hover,\n.demo-2 .dl-menuwrapper button.dl-active,\n.demo-2 .dl-menuwrapper ul {\n  background: #D35400;\n}\n\n/* Demo 3 */\n.demo-3 .dl-menuwrapper button {\n  background: #08cbc4;\n}\n\n.demo-3 .dl-menuwrapper button:hover,\n.demo-3 .dl-menuwrapper button.dl-active,\n.demo-3 .dl-menuwrapper ul {\n  background: #00b4ae;\n}\n\n/* Demo 4 */\n.demo-4 .dl-menuwrapper button {\n  background: #90b912;\n}\n\n.demo-4 .dl-menuwrapper button:hover,\n.demo-4 .dl-menuwrapper button.dl-active,\n.demo-4 .dl-menuwrapper ul {\n  background: #79a002;\n}\n\n/* Demo 5 */\n.demo-5 .dl-menuwrapper button {\n  background: #744783;\n}\n\n.demo-5 .dl-menuwrapper button:hover,\n.demo-5 .dl-menuwrapper button.dl-active,\n.demo-5 .dl-menuwrapper ul {\n  background: #643771;\n}\n\n@media (min-width: 1000px) {\n  .block--menu-menu-samhsa-menu, .block--system-main-menu {\n    display: none;\n  }\n}\n.block-superfish-main-menu {\n  display: none;\n  @media (min-width: 1000px) {\n    display: block;\n    ul#superfish-1.sf-style-none {\n      margin-top: 20px;\n    }\n  }\n  h2.block__title {\n    display:none;\n  }\n}\n#block-superfish-2 {\n  display: block;\n  @media (min-width: 1000px) {\n    display: none;\n  }\n}\n@media (min-width: 1000px) {\n  .mobile-only {\n    display: none;\n  }\n}\n\n.overlay-container {\n  display: none;\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  overflow-y: auto;\n  transition: 0.5s;\n  z-index: 499;\n  background: #000000;\n  opacity: 0.7;\n}\n\n//-------------------------------------------\n//Hiding / Showing User menu, search and social\n//-------------------------------------------\n.header-social,\n.search-form-wrapper,\n.user-menu,\n.hhs-ribbon{\n  display: none!important;\n}\n\n//Show mobile search when magify icon has been clicked\n.search-form-wrapper.open{\n  display: block!important;\n  width: 100%;\n  overflow: hidden;\n  border-top-color: rgb(0, 0, 0);\n  padding: 14px;\n  background-color: #eee;\n  form {\n    margin: 0;\n  }\n}\n\n//Layout and display at screen sizes above mobile\n@include breakpoint ($break-fullsize){\n  .site-search .search-form-wrapper,\n  .user-menu, .hhs-ribbon{\n    display: block!important;\n  }\n  .header-social,\n  .site-search{\n    display: block!important;\n    @include grid-span(7, 6);\n    margin-right: 0 !important;\n    padding-right: 0 !important;\n  }\n}\n\n.site-branding {\n  margin: 0;\n  max-width: 100%;\n  padding: 10px 0;\n  width: 100%;\n  text-align: center;\n  .samhsa-logo {\n    fill:\n    #fff;\n    width: 118px;\n    height: 50px;\n    }\n\n  @include breakpoint ($break-fullsize){\n    margin: 0;\n    max-width: 190px!important;\n    padding: 10px 0 10px;\n    text-align: left;\n    .samhsa-logo {\n      fill: $blue-gray;\n      width: 250px;\n      height: 85px\n    }\n  }\n}\n\n.site-search{\n  position: absolute;\n  bottom: 0;\n  right: 5px;\n  width: unset;\n  float: none;\n  @include breakpoint ($break-fullsize){\n    .site-search{\n      position: relative;\n      bottom: auto;\n      right: auto;\n    }\n  #top-search-glass-icon {\n    display: block;\n    position: absolute;\n    right: 0;\n    top: 0;\n    text-align: center;\n    a {\n      display: inline-block;\n      width: 70px;\n      height: 70px;\n      }\n      #search-toggle{\n        display: none!important;\n      }\n    }\n  }\n  #search-toggle {\n    display: block!important;\n    width: 70px;\n    height: 70px;\n  }\n\n}\n\n@include breakpoint ($break-fullsize){\n  // .site-branding,\n  .site-search{\n    @include grid-span(6, 1);\n    float: right;\n    width: 57%;\n  }\n  .header-social{\n    @include grid-span(6, 7);\n  }\n}\n","@import \"api/float\";\n@import \"api/isolation\";\n@import \"api/calc\";\n\n//////////////////////////////\n// Master Grid Span mixin\n//////////////////////////////\n@mixin grid-span($span, $location: 1, $grid: null, $gutter: null, $output-style: null, $gutter-style: null, $options: null) {\n\n  @if $output-style == null {\n    $output-style: sgs-get('output');\n  }\n\n  $Grid: find-grid($grid);\n  $Gutter: find-gutter($gutter);\n  $Style: find-gutter-style($gutter-style);\n\n  $Start-Row: start-row($location);\n  $End-Row: end-row($span, $location, $Grid);\n\n  $Fixed-Gutter: fixed-gutter($Grid, $Gutter, $Style);\n  $Split-Gutter: index($Style, 'split');\n  $Gutter-Property: gutter-property($Grid, $Gutter, $Style);\n\n  $Direction: sgs-get('direction');\n  $From: if($options and type-of($options) == 'map', if(map-get($options, 'from'), map-get($options, 'from'), $Direction), $Direction);\n  $From: if($From == 'ltr' or $From == 'rtl', named-direction($From), $From);\n\n  $Holder: ();\n  @each $k, $v in $options {\n    $Holder: if($k == 'from', $Holder, map-merge($Holder, ($k: $v)));\n  }\n  $options: if(length($Holder) > 0, $Holder, null);\n\n  $Span-Map: (\n    'span': $span,\n    'location': $location,\n    'grid': $Grid,\n    'gutter': $Gutter,\n    'style': $Style,\n    'start row': $Start-Row,\n    'end row': $End-Row,\n    'fixed gutter': $Fixed-Gutter,\n    'split gutter': $Split-Gutter,\n    'gutter property': $Gutter-Property,\n    'options': $options\n  );\n\n  @if sgs-get('debug') != false {\n    -sgs-span-settings: inspect($Span-Map);\n  }\n\n\n  @if function-exists('output-#{$output-style}') {\n    $Left: ();\n    $Right: ();\n\n    @if $Direction == 'both' or $From == 'left' or ($Direction == 'rtl' and $From == 'opposite') {\n      $Left: call('output-#{$output-style}', map-merge($Span-Map, ('direction': left)));\n    }\n\n    @if $Direction == 'both' or $From == 'right' or ($Direction == 'ltr' and $From == 'opposite') {\n      $Right: call('output-#{$output-style}', map-merge($Span-Map, ('direction': right)));\n    }\n\n    $Left-Keys: map-keys($Left);\n    $Right-Keys: map-keys($Right);\n    $Exclude: ();\n\n    @each $key in $Left-Keys {\n      @if index($Right-Keys, $key) {\n        @if map-get($Right, $key) == map-get($Left, $key) {\n          $Exclude: append($Exclude, $key);\n        }\n      }\n    }\n\n    // Always try and print the Left value\n    @include grid-span-build-exclude($Left, $Exclude, false);\n\n    // If Direction is Both or RTL, add the RTL attribute selector\n    @if $Direction == 'both' or $Direction == 'rtl' {\n      [dir=\"rtl\"] & {\n        @include grid-span-build-exclude($Right, $Exclude, true);\n      }\n    }\n    @else {\n      @include grid-span-build-exclude($Right, $Exclude, true);\n    }\n  }\n  @else {\n    @warn \"There doesn't appear to be an output style named `#{$output-style}`. Please ensure that the function `output-#{$output-style}` and that the output style `#{$output-style}` are both available before trying to use them.\";\n  }\n}\n\n@mixin grid-span-build($property, $value) {\n  @if type-of($value) != 'map' {\n    #{$property}: $value;\n  }\n  @else {\n    @each $prefix, $val in $value {\n      #{$property}: $val;\n    }\n  }\n}\n\n@mixin grid-span-build-exclude($properties, $delta, $exclude: false) {\n  @each $property, $value in $properties {\n    @if $exclude {\n      @if not index($delta, $property) {\n        @include grid-span-build($property, $value);\n      }\n    }\n    @else {\n      @include grid-span-build($property, $value);\n    }\n  }\n}","@function output-isolation($Span-Map) {\n  // Set up Left/Right maps\n  $Return: ();\n\n  $Span: map-get($Span-Map, 'span');\n  $Location: map-get($Span-Map, 'location');\n\n  $Grid: map-get($Span-Map, 'grid');\n  $Gutter: map-get($Span-Map, 'gutter');\n  $Style: map-get($Span-Map, 'style');\n\n  $Start-Row: map-get($Span-Map, 'start row');\n  $End-Row: map-get($Span-Map, 'end row');\n\n  $Fixed-Gutter: map-get($Span-Map, 'fixed gutter');\n  $Split-Gutter: map-get($Span-Map, 'split gutter');\n  $Gutter-Property: map-get($Span-Map, 'gutter property');\n\n  $Direction: map-get($Span-Map, 'direction');\n  $Options: map-get($Span-Map, 'options');\n\n  $Width: column-span($Span, $Location, $Grid, $Gutter, $Style);\n  $Margin-Span: column-span(($Location - 1), 1, $Grid, $Gutter, $Style);\n  $Gutter-Span: gutter-span($Gutter, $Grid);\n\n  // Backwards Compatibility for Options\n  @if type-of($Options) != 'map' and $Options != null {\n    $Options: ('clear': unquote(nth($Options, 1)));\n  }\n\n  $Dir: $Direction;\n  $Opp: opposite-direction($Dir);\n\n  $Return: map-merge($Return, ('width': $Width));\n\n  @if ($End-Row) {\n    $Return: map-merge($Return, ('float': $Opp));\n    $Return: map-merge($Return, ('margin-#{$Dir}': 0));\n\n    @if $Split-Gutter and not $Fixed-Gutter {\n      $Return: map-merge($Return, ('#{$Gutter-Property}-#{$Opp}': $Gutter-Span / 2));\n    }\n    @else {\n      $Return: map-merge($Return, ('margin-#{$Opp}': 0));\n    }\n  }\n  @else {\n    $Return: map-merge($Return, ('float': $Dir));\n    $Return: map-merge($Return, ('margin-#{$Opp}': -100%));\n\n    @if $Start-Row {\n      @if $Split-Gutter and not $Fixed-Gutter {\n        $Return: map-merge($Return, ('margin-#{$Dir}': $Gutter-Span / 2));\n      }\n      @else if not $Fixed-Gutter {\n        $Return: map-merge($Return, ('margin-#{$Dir}': 0));\n      }\n    }\n    @else {\n      @if $Split-Gutter and not $Fixed-Gutter {\n        $Return: map-merge($Return, ('margin-#{$Dir}': $Margin-Span + $Gutter-Span + $Gutter-Span / 2));\n      }\n      @else if not $Fixed-Gutter {\n        $Return: map-merge($Return, ('margin-#{$Dir}': $Margin-Span + $Gutter-Span));\n      }\n      @else {\n        $Return: map-merge($Return, ('margin-#{$Dir}': $Margin-Span));\n      }\n    }\n  }\n  // If options are set, we merge them in!\n  @if ($Options) {\n    $Return: map-merge($Return, $Options);\n  }\n\n  // If CLear isn't already available, set it!\n  @if not map-has-key($Return, 'clear') {\n    $Return: map-merge($Return, ('clear': none));\n  }\n\n  // Left Fixed Gutters\n  @if $Fixed-Gutter {\n    @if index($Style, 'split') {\n      $Return: map-merge($Return, ('#{$Gutter-Property}-#{$Dir}': $Gutter-Span / 2));\n      $Return: map-merge($Return, ('#{$Gutter-Property}-#{$Opp}': $Gutter-Span / 2));\n    }\n    @else {\n      @if not $End-Row {\n        $Return: map-merge($Return, ('#{$Gutter-Property}-#{$Opp}': $Gutter-Span));\n      }\n      @else {\n        $Return: map-merge($Return, ('#{$Gutter-Property}-#{$Opp}': 0));\n      }\n    }\n  }\n\n  @return $Return;\n}\n\n//////////////////////////////\n// Happy Syntax for Isolation\n//\n// Makes working with Isolation easier, as it moves Clear to a 1st class citizen of the mixin, and automatically builds the verbose grid-span mixin call\n//////////////////////////////\n@mixin isolation-span($Span, $Location, $clear: false, $grid: false, $gutter: false, $gutter-style: false, $from: false) {\n  $Options: ();\n  @if $clear {\n    $Options: map-merge($Options, ('clear': unquote($clear)));\n  }\n  @if $from {\n    $Options: map-merge($Options, ('from': $from));\n  }\n\n  $Options: if(length($Options) > 0, $Options, null);\n  @include grid-span($Span, $Location, $grid, $gutter, 'isolation', $gutter-style, $Options);\n}\n\n//////////////////////////////\n// Happy Syntax of Asymmetric Grids\n//\n// Makes working with asymmetric grids easier!\n//////////////////////////////\n@mixin asymmetric-span($Location, $Span: false, $grid: false, $gutter: false, $gutter-style: false, $from: false, $output-style: false) {\n\n  $Span: if($Span != false, $Span, 1);\n  $output-style: if($output-style != false, $output-style, sgs-get('asymmetric output'));\n\n  $Options: ();\n  @if $from {\n    $Options: map-merge($Options, ('from': $from));\n  }\n  $Options: if(length($Options) > 0, $Options, null);\n\n  @include grid-span($Span, $Location, $grid, $gutter, $output-style, $gutter-style, $Options);\n}","\n// Main Menu\n//===================================================================\n\n//Mobile menu icon (to open the mobile menu)\n//-----------------------------\n.block-mobile-hamburger-block {\n  .menu-toggle,\n  .menu-toggle.open{\n    display: block;\n    text-decoration: none !important;\n    font-size: 1.1rem;\n    font-weight: bold;\n    text-transform: uppercase;\n    text-align: center;\n    line-height: 4.5;\n    padding: 2px 7px;\n    transition: none;\n    width: 65px;\n    height: 65px;\n    .menu-icon,\n    .menu-icon:before,\n    .menu-icon:after{\n      width: 30px;\n      height: 4px;\n      border-radius: 1px;\n      display: block;\n    }\n    .menu-icon{\n      position: relative;\n      overflow:  visible;\n      margin: 10px auto;\n      top: 18px;\n      &:before,\n      &:after{\n        content: '';\n        overflow: hidden;\n        position: absolute;\n        left: 0;\n      }\n      &:before{\n        top: -7px;\n      }\n      &:after{\n        bottom: -7px;\n      }\n    }\n  }\n}\n\n//Unique for one added via a block\n.block-mobile-hamburger-block{\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  @include breakpoint ($break-mobile-landscape){\n    display: none;\n  }\n}\n.block-mobile-hamburger-block  .menu-toggle.open{\n  background-color: $teal;\n}\n//The Menu\n//-----------------------------\n.main-menu{\n  overflow: visible;\n  position: relative;\n  z-index: 30;\n  display: none;\n\n  //Visibility settings for the mobile menu\n  //--------------------------------\n  &.open{\n    display: block;\n  }\n  @include breakpoint ($break-mobile-landscape){\n    display: block;\n  }\n  .menu{\n    @include menu;\n    background-color: $blue-gray;\n  }\n\n  //Things unique to mobile menu links\n  //--------------------------------\n  &.collapsible{\n    > .menu > li{\n      > a{\n        text-decoration: none;\n        position: relative;\n        padding: 0.35em 0.75em 0.35em 0.75em;\n        font-size: 1.6rem;\n\n        //the arrow\n        &:after{\n          @include triangle(right, $white, 5px);\n          position: absolute;\n          top: 50%;\n          right: 15px;\n          margin: -5px 0 0 0;\n        }\n      }\n    }\n\n    //Always hiding the mega menu\n    .mega-menu-wrapper{\n      display: none !important;\n    }\n  }\n\n  // Touch device visibility\n  //--------------------------------\n  .menu-item.open .mega-menu-wrapper{\n    display: block;\n    opacity: 1;\n  }\n\n  //Basic Menu set up\n  //--------------------------------\n  > .menu {\n    overflow: visible;\n    @include clearfix;\n    font-size: 1.4rem;\n    > li{\n      display: block;\n      border-bottom: 4px solid $blue-gray;\n      border-top: 1px solid $white;\n      &:hover{\n        border-bottom: 4px solid $red;\n        &+ li {\n          border-top: 1px solid $blue-gray;\n        }\n      }\n      > a{\n        display: block;\n        line-height: 1.4;\n        text-decoration: none;\n      }\n    }\n    > li.is-active {\n      border-bottom: 4px solid $red;\n    }\n\n    //Horizontal Menu\n    //-----------------------------\n    @include breakpoint ($break-mobile-landscape){\n      font-size: 1.4rem;\n\n      > li{\n        float: left;\n        border-top: none;\n        &:hover + li {\n          border-top: none;\n        }\n        > a{\n          padding: 0.25em 0;\n          text-align: center;\n         // min-height: 3.5em;\n        }\n      }\n    }\n    @include breakpoint ($break-tablet-portrait){\n      li > a{\n        //min-height: 3.5em;\n        padding: 0.5em 0;\n      }\n    }\n    @include breakpoint ($break-tablet-landscape){\n      font-size: 1.6rem;\n      li{\n      }\n    }\n  }\n\n\n  //Mega menu fonts always stay at 14px\n  .mega-menu-item{\n    font-size: 1.4rem;\n  }\n  > .menu > li{\n\n    //Responsive widths for navigation tabs\n    //-----------------------------------------\n    @include breakpoint ($break-mobile-landscape){\n      //Find help\n      &:nth-child(1){\n        width: 13%;\n      }\n      //Practitioner Training\n      &:nth-child(2){\n        width: 13%;\n      }\n      //Public Messages\n      &:nth-child(3){\n        width: 12%;\n      }\n      //Grants\n      &:nth-child(4){\n        width: 8%;\n      }\n      //Data\n      &:nth-child(5){\n        width: 8%;\n      }\n      //Programs\n      &:nth-child(6){\n        width: 11%;\n      }\n      //Newsroom\n      &:nth-child(7){\n        width: 12%;\n      }\n      //About Us\n      &:nth-child(8){\n        width: 11%;\n      }\n      //Publications\n      &:nth-child(9){\n        width: 12%;\n      }\n    }\n    @include breakpoint ($break-tablet-portrait){\n      &:nth-child(1){\n        width: 15%;\n      }\n      &:nth-child(2){\n        width: 17%;\n      }\n      &:nth-child(3){\n        width: 16%;\n      }\n      &:nth-child(4){\n        width: 7%;\n      }\n      &:nth-child(5){\n        width: 6%;\n      }\n      &:nth-child(6){\n        width: 9%;\n      }\n      &:nth-child(7){\n        width: 10%;\n      }\n      &:nth-child(8){\n        width: 9%;\n      }\n      &:nth-child(9){\n        width: 11%;\n      }\n    }\n  }\n}\n\n\n// Main Menu COLORS\n// Might want to edit the color variables in /config/variables/colors rather than change code here\n//-----------------------------------------------------\n\n//Mobile menu icon\n//---------------------\n.block-mobile-hamburger-block .menu-toggle{\n  color: $mm-icon-color !important;\n  .menu-icon,\n  .menu-icon:before,\n  .menu-icon:after{\n    background-color: $mm-icon-color;\n  }\n}\n.block-mobile-hamburger-block .menu-toggle:hover,\n.block-mobile-hamburger-block .menu-toggle.animating,\n.block-mobile-hamburger-block .menu-toggle.open{\n  color: $mm-color !important;\n  background-color: $teal;\n  .menu-icon,\n  .menu-icon:before,\n  .menu-icon:after{\n    background-color: $mm-color;\n  }\n}\n\n//Main menu top links\n//---------------------\n\n.main-menu .menu-item,\n.main-menu .menu-item.open{\n  background-color: transparent;\n  &:hover,\n  &:active,\n  &:focus{\n  background-color: transparent;\n  }\n  > a,\n  > a.is-active{\n   // @include link-colors($mm-color, $mm-color, $mm-color, $mm-color, $mm-color);\n  }\n}\n\n//MEGA MENU 2019 styles\n//========================\n//Base Set up for mega menu\n//--------------------------\n\n.mega-menu-item{\n  display: block;\n  width: 100%;\n  line-height: 1.3;\n@media (min-width: 1000px){\n    height: auto;\n  }\n  a.heading-link{\n    @include hover-link;\n  }\n}\n\n.menu--simple-mega-menu > .menu-item--expanded > .mega-menu-wrapper {\n  background: $lighter-gray;\n  border: 1px solid $light-gray;\n    .field--type-link {\n      margin: 0 10px 10px 0;\n      float: right;\n      margin-bottom: 10px;\n    }\n    .col-3 {\n      width: 32%;\n      float: left;\n      margin-right: 2%;\n        &:nth-child(3){\n          margin-right: 0;\n        }\n    }\n    .col-4{\n      width: 23.8%;\n      float: left;\n      margin-right: 1.2%;\n      &.about-1,\n      &.about-2{\n        border-right:1px solid #ccc;\n        height: 240px;\n      }\n\n    }\n    img.align-left {\n      margin: 5px 10px 0 0;\n    }\n}\n\n.simple-mega-menu{\n    h2 {\n      margin: 5px 0;\n      font-size: 1.5rem;\n        a{\n          color: $blue-gray;\n          text-decoration: none;\n            &:hover{\n              color: $red-dark;\n              text-decoration: underline;\n            }\n        }\n    }\n    h3 {\n      font-size: 14px;\n      margin: 0.75em 0;\n      color: $black;\n    }\n    ul {\n      margin-bottom: 10px;\n      li {\n      padding: 0.5em;\n      //mega menus second level bulleted list\n        ul {\n          margin-top: 10px;\n          margin-bottom: 0;\n          li{\n            font-size: 14px;\n            padding: 0.25em 1em;\n           //Double caret lists (used in mega menu)\n          /*&:before {\n              content: \"\\0BB \\020\";\n            }*/\n          }\n        }\n        a{\n          color: $blue;\n          text-decoration: none;\n            &:hover{\n              color: $blue-gray;\n              text-decoration: underline;\n            }\n        }\n      }\n    }\n}\n\n\n//Locator list (used in mega menu)\n//--------------------------------------\n\n.menu ul.locator li{\n  margin: 0 0 0.5em;\n  padding: 0 0 0 24px;\n  display: block;\n}\n\n//data mega menu styles\n//--------------------------\n\n.data_menu {\n  width: 100%;\n  margin-bottom: 15px;\n  margin-left: 5px;\n  ul {\n    padding: 0;\n    margin: 0;\n    li {\n      list-style: none;\n      padding: 5px 0;\n      a {\n        text-decoration: none;\n      }\n    }//li\n    .newlevel.level-1 {\n       margin: 12px 0;\n    }\n    .level-1 {\n      position: absolute;\n      top: 0;\n      left: 250px;\n    }\n  }//ul\n    .newlevel li:hover > ul {\n      display: block;\n    }\n    .level-0 ul {\n      display: none;\n    }\n}\n\n//fix for the arrows bug on the main navigation between 624-640px\n//------------------------------------------------------------------\n@media (min-width:624px)and (max-width:640px){\n  .main-menu.collapsible>.menu>li>a{\n    font-size: 1.4rem;\n    &:after{\n      border-left: none;\n      border-bottom: none;\n      border-top: none;\n    }\n  }\n}\n\n\n","// Menus and lists\r\n//==========================================================================\r\n\r\n//Apply this to the UL (or OL)\r\n\r\n@mixin menu(){\r\n  display: block;\r\n  margin: 0;\r\n  padding: 0;\r\n  > li,\r\n  > li > a{\r\n    display: inline-block;\r\n  }  \r\n  > li{\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n}\r\n\r\n//Apply this to the LI\r\n@mixin double-caret(){\r\n  \r\n  margin: 0 0 .5em;\r\n  padding: 0 0 0 1em;\r\n  position: relative;\r\n  display: block;  \r\n  &:before{\r\n    content: \"\\0BB \\020\";\r\n    position: absolute;\r\n    left: 0;\r\n  }\r\n}","// Triangle helper mixin\r\n//==========================================================================\r\n\r\n/// @param {Direction} $direction - Triangle direction, either `top`, `right`, `bottom` or `left`\r\n/// @param {Color} $color [currentcolor] - Triangle color \r\n/// @param {Length} $size [1em] - Triangle size\r\n\r\n@mixin triangle($direction, $color: currentcolor, $size: 1em) {\r\n  @if not index(top right bottom left, $direction) {\r\n    @error \"Direction must be either `top`, `right`, `bottom` or `left`.\";\r\n  }  \r\n  display: inline-block;\r\n  width: 0;\r\n  height: 0;\r\n  overflow: hidden;\r\n  content: '';\r\n  z-index: 2;\r\n  border-#{opposite-position($direction)}: ($size * 1.5) solid $color;  \r\n  $perpendicular-borders: $size solid transparent;  \r\n  @if $direction == top or $direction == bottom {\r\n    border-left:   $perpendicular-borders;\r\n    border-right:  $perpendicular-borders;\r\n  } @else if $direction == right or $direction == left {\r\n    border-bottom: $perpendicular-borders;\r\n    border-top:    $perpendicular-borders;\r\n  }\r\n}\r\n","// Clearfix\r\n//================================\r\n\r\n@mixin clearfix(){\r\n  &:after {\r\n    clear: both;\r\n    content: \"\";\r\n    display: table;\r\n  }\r\n}\r\n","//////////////////////////////\n// Find width, in percentages, of the column span\n//////////////////////////////\n@function column-span($span, $location, $grid: null, $gutter: null, $gutter-style: null) {\n  // Find the grid and gutters\n  $grid: find-grid($grid);\n  $gutter: find-gutter($gutter);\n  $gutter-style: find-gutter-style($gutter-style);\n\n  @if fixed-gutter($grid, $gutter, $gutter-style) {\n    $gutter: 0;\n  }\n\n  // @debug $grid;\n  // @debug $gutter;\n\n  // Combine the grid and gutters\n  $grid-and-gutters: column-sum($grid, $gutter, $gutter-style);\n\n  // @debug $grid-and-gutters;\n\n  // Equal width grid are easy! Deal with them!\n  @if type-of($grid) == 'number' or length($grid) == 1 {\n    $span-and-gutters: $span + $gutter * ($span - 1);\n    @return $span-and-gutters / $grid-and-gutters * 100%;\n  }\n  // Asymmetric lists are harder, so we're going to treat them as their own grid\n  @else if type-of($grid) == 'list' or length($grid) > 1 {\n    $span-and-gutters: 0;\n\n    @if $location == 1 and $span >= 1 {\n      @for $i from 1 through $span {\n        $span-and-gutters: $span-and-gutters + nth($grid, $i) + $gutter;\n      }\n    }\n    @else {\n      $total: $location + $span - 1;\n      @if $total != 0 {\n        @for $i from $location through $total {\n          $span-and-gutters: $span-and-gutters + nth($grid, $i) + $gutter;\n        }\n      }\n    }\n    $span-and-gutters: $span-and-gutters - $gutter;\n\n    @return $span-and-gutters / $grid-and-gutters * 100%;\n  }\n  @else {\n    @warn \"Can't find a working set of grid! That's terrible!\";\n    @return false;\n  }\n}\n\n//////////////////////////////\n// Find the total sum of the grid\n//////////////////////////////\n@function column-sum($grid, $gutter, $gutter-style) {\n  $split: if(index($gutter-style, 'split'), true, false);\n\n  @if type-of($grid) == 'number' or length($grid) == 1 {\n    @if $split {\n      @return nth($grid, 1) + ((column-count(nth($grid, 1))) * nth($gutter, 1));\n    }\n    @else {\n      @return nth($grid, 1) + ((column-count(nth($grid, 1)) - 1) * nth($gutter, 1));\n    }\n\n  }\n  @else if type-of($grid) == 'list' {\n    $sum: 0;\n    @each $column in $grid {\n      $sum: $sum + nth($column, 1);\n    }\n    @if $split {\n      $sum: $sum + (column-count($grid)) * nth($gutter, 1);\n    }\n    @else {\n      $sum: $sum + (column-count($grid) - 1) * nth($gutter, 1);\n    }\n    @return $sum;\n  }\n}\n\n//////////////////////////////\n// Find the number of grid\n//////////////////////////////\n@function column-count($grid) {\n  @if type-of($grid) == 'number' {\n    @return $grid;\n  }\n  @if type-of($grid) == 'list' {\n    @if length($grid) == 1 {\n      @return nth($grid, 1);\n    }\n    @else {\n      @return length($grid);\n    }\n  }\n}","//Change the display of items\n.display-block{\n  display: block;\n}\n.display-inline-block{\n  display: inline-block;\n}\n\n.media-block{\n  img{\n    @extend .img-left;\n  }\n  p{\n    @extend .p-clear;\n  }\n}\n","//Double caret lists (used in mega menu)\r\n//--------------------------------------\r\nul.double-caret li{\r\n  @include double-caret;\r\n}\r\n\r\n.region--content .pager ul{\r\n    text-align: center;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n",".img-left {\n  float: left;\n  padding: 0px 10px 10px 0px;\n}\n\n.img-right {\n  float: right;\n  padding: 0px 0px 10px 10px;\n}\n","// Used in the mega menu\r\n.heading-link{\r\n  font-weight: $weight-bold;\r\n  @include hover-link;\r\n  @include link-colors($action-color-hover, $action-color-hover, $action-color-hover, $action-color-hover, $action-color-hover);\r\n}\r\n\r\n","// a link that only has an underline when you hover over it\n@mixin hover-link {\n  text-decoration: none;\n  &:hover {\n    text-decoration: underline; } }\n","// Set all the colors for a link with one mixin call.\n// Order of arguments is:\n//\n// 1. normal\n// 2. hover\n// 3. active\n// 4. visited\n// 5. focus\n//\n// Those states not specified will inherit.\n// Mixin to an anchor link like so:\n//     a\n//       +link-colors(#00c, #0cc, #c0c, #ccc, #cc0)\n\n@mixin link-colors($normal, $hover: false, $active: false, $visited: false, $focus: false) {\n  color: $normal;\n  @if $visited {\n    &:visited {\n      color: $visited; } }\n  @if $focus {\n    &:focus {\n      color: $focus; } }\n  @if $hover {\n    &:hover {\n      color: $hover; } }\n  @if $active {\n    &:active {\n      color: $active; } } }\n","// samhsa-icon font icons\n//==========================================================================\n\n// Create the font family\n//----------------------------------------------\n@font-face {\n  font-family: 'samhsa-icons';\n  src:  url('../../fonts/icomoon/samhsa-icons/samhsa-icons.eot?xd8hxr');\n  src:  url('../../fonts/icomoon/samhsa-icons/samhsa-icons.eot?xd8hxr#iefix') format('embedded-opentype'),\n    url('../../fonts/icomoon/samhsa-icons/samhsa-icons.woff2?xd8hxr') format('woff2'),\n    url('../../fonts/icomoon/samhsa-icons/samhsa-icons.ttf?xd8hxr') format('truetype'),\n    url('../../fonts/icomoon/samhsa-icons/samhsa-icons.woff?xd8hxr') format('woff'),\n    url('../../fonts/icomoon/samhsa-icons/samhsa-icons.svg?xd8hxr#samhsa-icon') format('svg');\n  font-weight: normal;\n  font-style: normal;\n}\n\n[class^=\"samhsa-icons-\"], [class*=\" samhsa-icons-\"] {\n  font-family: 'samhsa-icons' !important;\n  speak: none;\n  font-style: normal;\n  font-weight: normal;\n  font-variant: normal;\n  text-transform: none;\n  line-height: 1;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n// Create the icons\n//----------------------------------------------\n.samhsa-icons-arrow-up:before {\n  content: \"\\e900\";\n}\n/*.samhsa-icons-magnify:before {\n  content: \"\\e901\";\n}*/",".cr-landing-block {\n  width: 100%;\n  margin-bottom: 15px;\n  background-color: #FFFFFF; }\n  .cr-landing-block .samhsa-block-title h2 {\n    margin: 0;\n    font-size: 1.5rem;\n    font-weight: bold;\n    background-color: #1A6986;\n    padding: 7px 15px;\n    color: #FFFFFF; }\n    .cr-landing-block .samhsa-block-title h2 a {\n      display: block;\n      color: #FFFFFF;\n      text-decoration: none;\n      padding: 0; }\n      .cr-landing-block .samhsa-block-title h2 a:hover {\n        text-decoration: underline; }\n      .cr-landing-block .samhsa-block-title h2 a span.ext {\n        display: none; }\n  .cr-landing-block .field--name-body {\n    padding: 10px 15px;\n    border: 1px solid #1A6986; }\n    .cr-landing-block .field--name-body ul {\n      list-style-type: none;\n      margin: 0 0 1.5em 0.25em; }\n      .cr-landing-block .field--name-body ul li {\n        padding: 0.25em 1em;\n        text-indent: -1em;\n        margin-left: 10px; }\n        .cr-landing-block .field--name-body ul li:before {\n          content: \"\\0BB \\020\"; }\n\n.home-block h2 {\n  font-size: 28px; }\n\n.home-block h2:after {\n  position: absolute;\n  left: 0;\n  width: 80px;\n  content: \"\";\n  border-bottom: 4px solid #CD3835;\n  bottom: -11px; }\n\n.home-block.get-help p.helpline-phone a {\n  color: #1E384B;\n  font-size: 17px;\n  font-weight: bold;\n  text-decoration: none; }\n\n.home-block.get-help ul {\n  list-style: none;\n  margin: 0; }\n  @media (min-width: 768px) {\n    .home-block.get-help ul {\n      display: flex; } }\n  .home-block.get-help ul li {\n    border-bottom: 1px solid #CDCDCD; }\n    @media (min-width: 768px) {\n      .home-block.get-help ul li {\n        width: 33%;\n        border-right: 1px solid #CDCDCD;\n        margin-right: 20px;\n        padding-right: 10px;\n        border-bottom: none; }\n        .home-block.get-help ul li h3 {\n          margin-top: 15px;\n          font-weight: normal; } }\n    .home-block.get-help ul li:last-child {\n      border: none; }\n    .home-block.get-help ul li h3 a {\n      font-size: 1.8rem;\n      font-weigth: 400;\n      text-decoration: none; }\n\n.cr-landing-block.landing-view-block {\n  border: 1px solid #1A6986; }\n  .cr-landing-block.landing-view-block .view-content {\n    padding: 5px 15px; }\n  .cr-landing-block.landing-view-block .views-field-field-release-date,\n  .cr-landing-block.landing-view-block p.news-date {\n    font-weight: bold;\n    margin-top: 10px; }\n  .cr-landing-block.landing-view-block .view-footer {\n    margin: 0 0 15px 15px;\n    clear: both; }\n\n#block-views-block-ebrp-featured-resources-block-1 .views-col.col-1 {\n  padding-right: 7px; }\n\n#block-views-block-ebrp-featured-resources-block-1 .views-col.col-2 {\n  padding-left: 7px; }\n\n.home-block h2 {\n  position: relative; }\n  .home-block h2:after {\n    position: absolute;\n    left: 0;\n    width: 80px;\n    content: \"\";\n    border-bottom: 4px solid #CD3835;\n    bottom: -11px; }\n\n.two-col-layout .view-content {\n  column-count: 2; }\n\n@media (min-width: 768px) {\n  .two-col-layout .views-row {\n    margin-right: 2%; } }\n\n#block-officesandcentershomepageblock {\n  margin-bottom: 30px; }\n  #block-officesandcentershomepageblock ul.centers-offices-items {\n    margin: 0 2% 0 0;\n    list-style: none;\n    float: left; }\n    @media (min-width: 768px) {\n      #block-officesandcentershomepageblock ul.centers-offices-items {\n        width: 48%; } }\n    #block-officesandcentershomepageblock ul.centers-offices-items h3.centers-offices-item-title {\n      margin: 1em 0 .5em;\n      font-weight: normal; }\n      #block-officesandcentershomepageblock ul.centers-offices-items h3.centers-offices-item-title a {\n        text-decoration: none; }\n    #block-officesandcentershomepageblock ul.centers-offices-items p {\n      margin: 0; }\n\n#block-samhsaataglanceblock ul.glance-items {\n  margin: 20px 0 0 0;\n  list-style: none;\n  float: left;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row; }\n  #block-samhsaataglanceblock ul.glance-items li.glance-item {\n    float: left;\n    margin: 0 1.75% 2% 0; }\n    @media (min-width: 864px) {\n      #block-samhsaataglanceblock ul.glance-items li.glance-item {\n        width: 31.5%; } }\n    #block-samhsaataglanceblock ul.glance-items li.glance-item a {\n      text-decoration: none; }\n    #block-samhsaataglanceblock ul.glance-items li.glance-item h3.glance-item-title {\n      margin: 0 0 .25em;\n      font-weight: normal; }\n\n#block-samhsaataglanceblock .glance-item-image {\n  width: 130px;\n  float: left;\n  margin-right: 10px; }\n\n#block-samhsaataglanceblock .glance-item-content p a {\n  color: #4A4A4A; }\n\n.block-views-blocklanguage-toggle--block-1 {\n  margin-bottom: 20px; }\n\n#block-views-block-leadership-regional-administrators {\n  clear: both; }\n\n.program-banner {\n  display: none; }\n\n.ebrc-learn-more {\n  float: right; }\n\n.block-views-blockebrp-featured-resources-block-1 h2 {\n  font-size: 28px;\n  line-height: 30px; }\n\n.view-ebrp-featured-resources .views-row {\n  float: left;\n  width: 100%;\n  margin-right: 7px;\n  margin-bottom: 25px;\n  border: none;\n  cursor: pointer; }\n  @media (min-width: 864px) {\n    .view-ebrp-featured-resources .views-row {\n      width: 31.5%; } }\n  .view-ebrp-featured-resources .views-row .views-field.views-field-field-slide-pic {\n    float: left;\n    margin-right: 7px;\n    border: none; }\n    .view-ebrp-featured-resources .views-row .views-field.views-field-field-slide-pic img {\n      object-fit: cover;\n      width: 130px;\n      height: 130px; }\n  .view-ebrp-featured-resources .views-row .views-field-title a {\n    text-decoration: none;\n    color: #333; }\n\n.ebp-list .view-header {\n  position: relative; }\n  .ebp-list .view-header h2.search-results {\n    position: absolute;\n    width: 100%;\n    float: right;\n    top: 460px;\n    right: 0;\n    font-size: 28px;\n    line-height: 30px; }\n    @media (min-width: 864px) {\n      .ebp-list .view-header h2.search-results {\n        width: 65%;\n        top: 70px; } }\n  .ebp-list .view-header .out-of-results {\n    font-size: 14px;\n    line-height: 25px;\n    position: absolute;\n    display: inline-block;\n    top: 141px;\n    right: 0px;\n    left: 126px;\n    float: right;\n    width: 120px;\n    font-weight: bold;\n    color: #000000; }\n    @media (min-width: 864px) {\n      .ebp-list .view-header .out-of-results {\n        position: relative;\n        top: 17px;\n        left: 0;\n        width: auto; } }\n\n.ebp-list .views-exposed-form {\n  position: relative; }\n  .ebp-list .views-exposed-form div[data-drupal-selector=\"edit-field-ebp-portal-target-id\"] {\n    float: left;\n    padding: 0;\n    border: 1px solid #333333;\n    margin: 0;\n    min-height: 270px;\n    position: relative;\n    width: 100%;\n    top: 186px; }\n    @media (min-width: 864px) {\n      .ebp-list .views-exposed-form div[data-drupal-selector=\"edit-field-ebp-portal-target-id\"] {\n        position: absolute;\n        width: 32%;\n        top: 170px;\n        min-height: 450px; } }\n    .ebp-list .views-exposed-form div[data-drupal-selector=\"edit-field-ebp-portal-target-id\"] legend {\n      padding: 5px 0; }\n    .ebp-list .views-exposed-form div[data-drupal-selector=\"edit-field-ebp-portal-target-id\"] input[type=\"radio\"] {\n      display: none; }\n    .ebp-list .views-exposed-form div[data-drupal-selector=\"edit-field-ebp-portal-target-id\"] label {\n      font-size: 16px;\n      color: #000; }\n    .ebp-list .views-exposed-form div[data-drupal-selector=\"edit-field-ebp-portal-target-id\"] :first-child {\n      background: #eeeeee; }\n    .ebp-list .views-exposed-form div[data-drupal-selector=\"edit-field-ebp-portal-target-id\"] .form-type-radio {\n      padding: 10px 0 10px 12px;\n      border-bottom: 1px solid #333333;\n      margin: 0; }\n      .ebp-list .views-exposed-form div[data-drupal-selector=\"edit-field-ebp-portal-target-id\"] .form-type-radio input[type=\"radio\"]:checked + label {\n        font-weight: 700; }\n    .ebp-list .views-exposed-form div[data-drupal-selector=\"edit-field-ebp-portal-target-id\"] .form-item-field-ebp-portal__target-id label {\n      color: #000000;\n      font-size: 16px; }\n    .ebp-list .views-exposed-form div[data-drupal-selector=\"edit-field-ebp-portal-target-id\"] .form-select.bef-links div {\n      border-bottom: 1px solid #d4d4d4;\n      padding: 10px 0; }\n      .ebp-list .views-exposed-form div[data-drupal-selector=\"edit-field-ebp-portal-target-id\"] .form-select.bef-links div a {\n        text-decoration: none;\n        color: #000;\n        font-size: 16px;\n        padding-left: 12px;\n        padding-top: 12px; }\n    .ebp-list .views-exposed-form div[data-drupal-selector=\"edit-field-ebp-portal-target-id\"] .form-select.bef-links .bef-link-active {\n      background: #eeeeee;\n      border-top: none !important;\n      font-weight: 700; }\n  .ebp-list .views-exposed-form fieldset[data-drupal-selector=\"edit-field-ebp-resource-type-target-id\"] {\n    float: left;\n    padding-left: 12px;\n    margin: 0;\n    width: 100%;\n    top: 412px;\n    position: absolute; }\n    @media (min-width: 864px) {\n      .ebp-list .views-exposed-form fieldset[data-drupal-selector=\"edit-field-ebp-resource-type-target-id\"] {\n        position: absolute;\n        top: 390px;\n        width: 32%; } }\n    .ebp-list .views-exposed-form fieldset[data-drupal-selector=\"edit-field-ebp-resource-type-target-id\"] legend {\n      padding: 10px 10px; }\n      @media (min-width: 864px) {\n        .ebp-list .views-exposed-form fieldset[data-drupal-selector=\"edit-field-ebp-resource-type-target-id\"] legend::after {\n          display: none; } }\n      .ebp-list .views-exposed-form fieldset[data-drupal-selector=\"edit-field-ebp-resource-type-target-id\"] legend.active::after {\n        border-style: solid;\n        border-width: 0.15em 0.15em 0 0;\n        content: '';\n        transform: rotate(45deg);\n        position: absolute;\n        color: #9b9b9b;\n        text-align: right;\n        width: 12px;\n        height: 12px;\n        right: 10px;\n        top: 17px; }\n      .ebp-list .views-exposed-form fieldset[data-drupal-selector=\"edit-field-ebp-resource-type-target-id\"] legend::after {\n        transform: rotate(134deg);\n        border-style: solid;\n        border-width: 0.15em 0.15em 0 0;\n        content: '';\n        position: absolute;\n        color: #9b9b9b;\n        text-align: right;\n        width: 11px;\n        height: 11px;\n        right: 10px;\n        top: 11px; }\n    .ebp-list .views-exposed-form fieldset[data-drupal-selector=\"edit-field-ebp-resource-type-target-id\"] .fieldset-wrapper {\n      display: none; }\n      @media (min-width: 864px) {\n        .ebp-list .views-exposed-form fieldset[data-drupal-selector=\"edit-field-ebp-resource-type-target-id\"] .fieldset-wrapper {\n          display: block; } }\n    .ebp-list .views-exposed-form fieldset[data-drupal-selector=\"edit-field-ebp-resource-type-target-id\"] .form-checkboxes {\n      column-count: 1;\n      padding-left: 12px; }\n      .ebp-list .views-exposed-form fieldset[data-drupal-selector=\"edit-field-ebp-resource-type-target-id\"] .form-checkboxes .form-type-checkbox {\n        width: 100%;\n        padding: 10px 0;\n        margin: 0;\n        font-size: 16px;\n        color: #000; }\n    .ebp-list .views-exposed-form fieldset[data-drupal-selector=\"edit-field-ebp-resource-type-target-id\"] span.fieldset-legend {\n      font-size: 16px;\n      font-weight: normal;\n      color: #000; }\n  .ebp-list .views-exposed-form .form-item-combine {\n    position: absolute;\n    width: 50%;\n    display: block !important;\n    left: 0;\n    float: left;\n    padding: 0; }\n    @media (min-width: 864px) {\n      .ebp-list .views-exposed-form .form-item-combine {\n        width: 32%; } }\n    .ebp-list .views-exposed-form .form-item-combine input {\n      width: 100%;\n      height: 45px; }\n  .ebp-list .views-exposed-form .form-item-sort-bef-combine {\n    position: absolute;\n    float: left;\n    left: 0;\n    width: 100%;\n    top: 82px; }\n    @media (min-width: 864px) {\n      .ebp-list .views-exposed-form .form-item-sort-bef-combine {\n        left: 57%;\n        width: auto;\n        top: 5px;\n        position: relative; } }\n    .ebp-list .views-exposed-form .form-item-sort-bef-combine label {\n      float: left;\n      color: #000000; }\n    .ebp-list .views-exposed-form .form-item-sort-bef-combine .form-select {\n      float: left;\n      margin: 0 0 0 8px;\n      border: 1px solid #333333;\n      width: auto; }\n  .ebp-list .views-exposed-form .form-item-items-per-page {\n    padding: 0;\n    color: #000000;\n    float: right;\n    margin-right: 10px;\n    position: absolute;\n    width: 100%;\n    left: 0;\n    top: 129px; }\n    @media (min-width: 864px) {\n      .ebp-list .views-exposed-form .form-item-items-per-page {\n        width: auto;\n        position: absolute;\n        left: 77%;\n        top: 5px; } }\n    .ebp-list .views-exposed-form .form-item-items-per-page label {\n      float: left;\n      margin-right: 5px;\n      padding-right: 5px; }\n    .ebp-list .views-exposed-form .form-item-items-per-page select[data-drupal-selector=\"edit-items-per-page\"] {\n      display: inline-block;\n      min-width: 50px;\n      padding: 0;\n      width: auto; }\n  .ebp-list .views-exposed-form .search_input {\n    position: relative;\n    width: 32%;\n    left: 0;\n    float: left;\n    padding: 0;\n    height: 45px; }\n  .ebp-list .views-exposed-form div[data-drupal-selector=\"edit-actions\"] {\n    position: absolute;\n    width: 22%;\n    left: 50%; }\n    @media (min-width: 864px) {\n      .ebp-list .views-exposed-form div[data-drupal-selector=\"edit-actions\"] {\n        top: 14px;\n        width: 9%;\n        left: 32%;\n        padding: 0;\n        margin: 0; } }\n    .ebp-list .views-exposed-form div[data-drupal-selector=\"edit-actions\"] input[value=\"Reset\"],\n    .ebp-list .views-exposed-form div[data-drupal-selector=\"edit-actions\"] input[value=\"Submit\"] {\n      width: 100%;\n      height: 45px;\n      margin: 0; }\n      @media (min-width: 864px) {\n        .ebp-list .views-exposed-form div[data-drupal-selector=\"edit-actions\"] input[value=\"Reset\"],\n        .ebp-list .views-exposed-form div[data-drupal-selector=\"edit-actions\"] input[value=\"Submit\"] {\n          position: absolute;\n          left: 57%; } }\n    .ebp-list .views-exposed-form div[data-drupal-selector=\"edit-actions\"] input[value=\"Submit\"] {\n      width: 100%;\n      padding: 0;\n      position: absolute; }\n      @media (min-width: 864px) {\n        .ebp-list .views-exposed-form div[data-drupal-selector=\"edit-actions\"] input[value=\"Submit\"] {\n          position: absolute;\n          left: 0; } }\n    .ebp-list .views-exposed-form div[data-drupal-selector=\"edit-actions\"] input[value=\"Reset\"] {\n      left: 121%;\n      position: absolute; }\n\n.ebp-list .view-content {\n  width: 100%;\n  margin-top: 260px;\n  float: right;\n  min-height: 580px; }\n  @media (min-width: 864px) {\n    .ebp-list .view-content {\n      width: 65%;\n      float: right;\n      margin-top: 90px; } }\n\n.ebp-list .views-row {\n  border-bottom: 1px solid #333;\n  margin-bottom: 20px;\n  padding-bottom: 20px; }\n  .ebp-list .views-row .views-field-body {\n    margin: 10px 0; }\n  .ebp-list .views-row .resource-list-link span > a {\n    font-size: 18px;\n    line-height: 22px;\n    letter-spacing: 0;\n    font-weight: bold;\n    text-decoration: none; }\n  .ebp-list .views-row .link-web-resources:hover,\n  .ebp-list .views-row .link-store:hover,\n  .ebp-list .views-row .download-pdf:hover {\n    text-decoration: none; }\n\n.ebp-list .link-store a, .ebp-list .download-pdf a, .ebp-list .link-web-resources a {\n  text-decoration: none; }\n\n.view-empty .no-result {\n  float: right;\n  min-height: 580px; }\n  .view-empty .no-result h2 {\n    font-size: 28px; }\n  .view-empty .no-result p {\n    margin: 0 0 10px 0;\n    font-size: 15px;\n    line-height: 20px; }\n\n.last-updated {\n  display: none; }\n\n.view-ebp-all-resources .bef-exposed-form .form--inline > .form-item select {\n  line-height: 1.3;\n  height: auto;\n  color: #000;\n  padding: 0; }\n\n.view-ebp-all-resources .resource-list-row {\n  width: 100%;\n  border-bottom: 1px solid #4A4A4A;\n  margin-top: 30px;\n  padding-bottom: 20px; }\n\n.view-ebp-all-resources h3.views-field-title a {\n  text-decoration: none; }\n\n.view-ebp-all-resources .resource-list-term {\n  font-size: 1.3rem; }\n  .view-ebp-all-resources .resource-list-term .field-content {\n    display: inline; }\n  .view-ebp-all-resources .resource-list-term .views-label {\n    font-weight: bold;\n    display: inline; }\n\n.view-ebp-all-resources .view-empty .no-result {\n  float: right;\n  min-height: 580px; }\n\n.exposed-filters-two-column-view .exposed-filters-two-column-header-mobile {\n  display: block;\n  margin-right: 2.5%; }\n  @media (min-width: 768px) {\n    .exposed-filters-two-column-view .exposed-filters-two-column-header-mobile {\n      display: none; } }\n\n.block-views-blockebp-all-resources-block-1 .accordion-toggle {\n  position: relative;\n  display: block;\n  padding: 10px;\n  font-size: 1.3em;\n  font-weight: 300;\n  border: 1px solid #1A6986;\n  background: #1A6986; }\n\n.block-views-blockebp-all-resources-block-1 .view-header {\n  display: block;\n  margin-bottom: 15px; }\n  .block-views-blockebp-all-resources-block-1 .view-header a {\n    text-decoration: none;\n    color: #FFFFFF; }\n  @media (min-width: 624px) {\n    .block-views-blockebp-all-resources-block-1 .view-header {\n      display: none; } }\n\n.block-views-blockebp-all-resources-block-1 .accordion-toggle.open {\n  background: #666; }\n\n.block-views-blockebp-all-resources-block-1 .accordion-toggle:hover {\n  background: #165972; }\n\n.block-views-blockebp-all-resources-block-1 .accordion-toggle span.toggle-icon {\n  position: absolute;\n  top: 4px;\n  right: 15px;\n  font-size: 1.5em; }\n\n.block-views-blockebp-all-resources-block-1 .view-filters {\n  display: none;\n  overflow: auto; }\n  @media (min-width: 624px) {\n    .block-views-blockebp-all-resources-block-1 .view-filters {\n      display: block; } }\n\nspan.red {\n  color: red; }\n\n.webform-submission-form .ui-datepicker-trigger {\n  position: relative;\n  top: -36px;\n  left: 138px; }\n\n.webform-submission-form select,\n.webform-submission-form .select2-container--default .select2-selection--single,\n.webform-submission-form .select2-selection.select2-selection--single {\n  background-color: #fff;\n  border: 1px solid #CDCDCD;\n  border-radius: 0;\n  height: 32px; }\n\n@media (min-width: 768px) {\n  .webform-submission-form input[type=email],\n  .webform-submission-form input[type=password],\n  .webform-submission-form input[type=text],\n  .webform-submission-form input[type=url],\n  .webform-submission-form select,\n  .webform-submission-form .form-item-state,\n  .webform-submission-form .form-item-states,\n  .webform-submission-form textarea,\n  .webform-submission-form .form-textarea,\n  .webform-submission-form .form-type-textfield,\n  .webform-submission-form .webform-element-description {\n    width: 350px; }\n  .webform-submission-form #edit-event-date-date,\n  .webform-submission-form .form-text.required.hasDatepicker,\n  .webform-submission-form .form-text.hasDatepicker {\n    width: 128px; }\n  .webform-submission-form .title-red > legend span.fieldset-legend {\n    font-size: 125%;\n    color: #CD3835; } }\n\nhr.webform-horizontal-rule {\n  margin: 2em 0;\n  border-bottom: 2px solid #A82D2B; }\n\n@media (min-width: 768px) {\n  .webform-submission-application-for-peer-grant-revie-form .container-inline > label {\n    float: left;\n    width: 220px;\n    margin-right: 7px;\n    text-align: right;\n    display: inline; }\n    .webform-submission-application-for-peer-grant-revie-form .container-inline > label:after {\n      content: \"\"; }\n  .webform-submission-application-for-peer-grant-revie-form input[type=email],\n  .webform-submission-application-for-peer-grant-revie-form input[type=password],\n  .webform-submission-application-for-peer-grant-revie-form input[type=text],\n  .webform-submission-application-for-peer-grant-revie-form input[type=url],\n  .webform-submission-application-for-peer-grant-revie-form select,\n  .webform-submission-application-for-peer-grant-revie-form .form-item-state,\n  .webform-submission-application-for-peer-grant-revie-form .form-item-states,\n  .webform-submission-application-for-peer-grant-revie-form .form-type-textfield {\n    width: 350px;\n    display: inline; }\n  .webform-submission-application-for-peer-grant-revie-form textarea,\n  .webform-submission-application-for-peer-grant-revie-form .form-textarea {\n    width: 80%; }\n  .webform-submission-application-for-peer-grant-revie-form .webform-element--title-inline > label {\n    display: inline;\n    padding-right: 0; }\n  .webform-submission-application-for-peer-grant-revie-form div#edit-email--description,\n  .webform-submission-application-for-peer-grant-revie-form .webform-element-description {\n    display: block;\n    width: 100%; } }\n\n@media (min-width: 768px) {\n  img.right {\n    margin: 0 0 15px 15px;\n    float: right; } }\n\nsection.summary {\n  margin-bottom: 20px;\n  color: #000000; }\n\n.node--type-rfa.node--view-mode-full .field__item {\n  margin-top: 14px; }\n\n.node--type-rfa.node--view-mode-full .field--name-field-announcement-state {\n  border-bottom: 1px black solid;\n  width: 100%;\n  display: block;\n  padding-bottom: 15px;\n  margin-bottom: 15px;\n  font-style: italic; }\n\n.node--type-rfa.node--view-mode-full fieldset {\n  border: none;\n  padding: 0;\n  margin: 10px 0; }\n  .node--type-rfa.node--view-mode-full fieldset legend {\n    border: 0;\n    padding: 0; }\n    .node--type-rfa.node--view-mode-full fieldset legend span.fieldset-legend {\n      font-weight: bold;\n      font-size: 112.5%;\n      color: #CD3835;\n      padding-top: 15px; }\n  .node--type-rfa.node--view-mode-full fieldset fieldset legend {\n    margin-bottom: 0; }\n    .node--type-rfa.node--view-mode-full fieldset fieldset legend span.fieldset-legend {\n      font-size: 105%;\n      color: #000000; }\n\n@media (min-width: 768px) {\n  .find-treatment .left {\n    width: 48%;\n    float: left;\n    margin-left: 0;\n    margin-right: 2%; }\n  .find-treatment .right {\n    width: 48%;\n    float: left;\n    margin-right: 0;\n    margin-left: 0; } }\n\n.view-infographic-view h4 {\n  margin: 0.75em 0 0.75em; }\n\n.view-infographic-view .embed-code {\n  background-color: #EEDB9D;\n  padding: 10px;\n  font-size: 13px;\n  font-family: monospace;\n  color: black;\n  word-wrap: break-word; }\n  .view-infographic-view .embed-code h5 {\n    margin: 0.5em 0 0.5em;\n    font-size: 1.4rem; }\n\n@media only screen and (max-width: 624px) {\n  .view-infographic-view .views-view-table {\n    display: block; } }\n\n@media only screen and (max-width: 624px) {\n  .view-infographic-view .views-view-table tbody, .view-infographic-view .views-view-table tr, .view-infographic-view .views-view-table td {\n    display: block; } }\n\n.view-infographic-view .pager ul {\n  text-align: center; }\n  .view-infographic-view .pager ul a {\n    text-decoration: none; }\n    .view-infographic-view .pager ul a:active, .view-infographic-view .pager ul a:focus, .view-infographic-view .pager ul a:hover {\n      text-decoration: underline; }\n\n#cboxTitle {\n  left: 0;\n  height: 38px;\n  color: #313131;\n  padding: 0 20px 10px 15px;\n  display: table-cell !important;\n  vertical-align: middle;\n  float: none !important;\n  font-size: 13px;\n  line-height: 1.3; }\n\n.view-in-the-news .views-field-field-featured-image {\n  max-width: 30%;\n  float: left;\n  clear: both;\n  margin-top: 10px; }\n\n.view-in-the-news .text-fields-wrapper {\n  float: left;\n  max-width: 70%;\n  padding-left: 10px; }\n  .view-in-the-news .text-fields-wrapper p {\n    margin: 0; }\n    .view-in-the-news .text-fields-wrapper p.news-date {\n      font-weight: bold; }\n\n#views-exposed-form-news-page-1 .form-item-field-release-date-value-max label {\n  color: transparent; }\n\n#views-exposed-form-news-page-1 .form-item {\n  margin-top: 0;\n  margin-bottom: 0; }\n\n@media (min-width: 624px) {\n  #views-exposed-form-news-page-1 .form-item-body-value,\n  #views-exposed-form-news-page-1 .form-item-field-release-date-value-min,\n  #views-exposed-form-news-page-1 .form-item-field-release-date-value-max {\n    max-width: 28%; } }\n\n@media only screen and (max-width: 624px) {\n  #views-exposed-form-news-page-1 .form-item-body-value {\n    width: 100%; } }\n\n.fep-display .views-row {\n  border-bottom: 1px solid #dee4e7;\n  padding-bottom: 15px; }\n\n.fep-display h3.field-content {\n  color: #CD3835; }\n\n.fep-display select {\n  line-height: 1.3; }\n\n.fep-display .feb-program-info {\n  margin: 10px 0;\n  font-size: 1.3rem; }\n\n.fep-display .services.clearfix {\n  font-size: 1.3rem; }\n  @media (min-width: 768px) {\n    .fep-display .services.clearfix .left {\n      float: left;\n      width: 50%; }\n    .fep-display .services.clearfix .right {\n      float: left;\n      width: 50%; } }\n\n.view-gains-tt-list .view-filters select {\n  line-height: 1.3; }\n\n.view-gains-tt-list .view-filters label {\n  display: block; }\n\n.view-gains-tt-list .views-row {\n  padding-bottom: 20px; }\n\n.view-hpr-resources select {\n  line-height: 1.3; }\n\n@media (min-width: 624px) {\n  .view-hpr-resources caption {\n    display: none; } }\n\n.block-views-blockgains-mhc-lists-block-1 .views-row,\n.view-gains-mhc-lists-juvenile .views-row {\n  margin-bottom: 20px; }\n\n.view-leadership .views-row {\n  clear: both; }\n\n.view-leadership .views-field-field-bio-image img {\n  float: left;\n  margin-right: 15px;\n  margin-bottom: 15px; }\n\n.view-leadership .views-field-field-professional-title {\n  font-weight: bold; }\n\n.view-leadership.view-display-id-block_bio .views-field.views-field-body-1 {\n  clear: both;\n  border-top: 1px solid #dee4e7;\n  padding-top: 20px; }\n\n.node--type-biography .field--name-field-bio-image {\n  float: left;\n  margin: 0px 15px 15px 0px; }\n\n.node--type-biography .field--name-field-professional-title {\n  font-weight: bold;\n  padding-top: 5px; }\n\n.node--type-biography .field--name-body {\n  margin-top: 15px;\n  padding-top: 15px;\n  clear: both; }\n\n.block-views-blockgrants-grants-footer-block .callout {\n  background: #dee4e7;\n  padding: 10px 15px;\n  margin: 15px 0px; }\n  .block-views-blockgrants-grants-footer-block .callout h2 {\n    margin: .5em 0 .75em; }\n\n.block-views-blockgrants-grants-footer-block ul.app-materials ul {\n  margin-bottom: 0; }\n\n.view-grants .view-icons-group {\n  background: #dee4e7;\n  padding: 10px 15px; }\n  .view-grants .view-icons-group h4 {\n    margin: 0 0 .75em; }\n\n.view-grants select {\n  line-height: 1.3; }\n\n.view-grants .form-item {\n  margin-top: 0;\n  margin-bottom: 0; }\n\n.view-grants .form-actions {\n  margin-top: 0;\n  margin-bottom: 20px; }\n\n.view-grants td.is-active {\n  background-color: transparent; }\n\n.view-grants .views-field-field-rfa-number-1 {\n  width: 90px; }\n\n.view-fy-samhsa-grant-awards #view-field-award-number-table-column {\n  width: 120px; }\n\n.view-fy-samhsa-grant-awards td.is-active {\n  background-color: transparent; }\n\n.view-fy-samhsa-grant-awards .views-view-table caption {\n  font-weight: bold; }\n\n.view-fy-samhsa-grant-awards .views-exposed-form {\n  margin-bottom: 0; }\n  .view-fy-samhsa-grant-awards .views-exposed-form .form-actions {\n    margin-top: 0;\n    margin-bottom: 0; }\n  .view-fy-samhsa-grant-awards .views-exposed-form .form-item {\n    margin-bottom: 0; }\n\n.view-programs-and-campaigns .item-list .pc-list,\n.view-public-messages .item-list .pc-list {\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  margin: 0;\n  list-style: none;\n  list-style-type: none; }\n  .view-programs-and-campaigns .item-list .pc-list li,\n  .view-public-messages .item-list .pc-list li {\n    margin: 0 0 20px 0; }\n  @media (min-width: 624px) {\n    .view-programs-and-campaigns .item-list .pc-list li,\n    .view-public-messages .item-list .pc-list li {\n      width: 31.5%;\n      margin: 0 1.75% 2% 0;\n      float: left; } }\n\n.view-programs-and-campaigns .views-field-title h3.field-content,\n.view-public-messages .views-field-title h3.field-content {\n  font-size: 18px;\n  line-height: 1.2;\n  margin: 10px 0 5px 0;\n  padding: 0;\n  font-weight: normal; }\n  .view-programs-and-campaigns .views-field-title h3.field-content a,\n  .view-public-messages .views-field-title h3.field-content a {\n    text-decoration: none; }\n\n.view-programs-and-campaigns .form--inline .form-actions, .view-programs-and-campaigns .form-item,\n.view-public-messages .form--inline .form-actions,\n.view-public-messages .form-item {\n  margin-top: 0;\n  margin-bottom: 0; }\n  @media (min-width: 624px) {\n    .view-programs-and-campaigns .form--inline .form-actions, .view-programs-and-campaigns .form-item,\n    .view-public-messages .form--inline .form-actions,\n    .view-public-messages .form-item {\n      clear: none; } }\n\n@media (min-width: 624px) {\n  .view-programs-and-campaigns .bef-exposed-form .form--inline > .form-item,\n  .view-public-messages .bef-exposed-form .form--inline > .form-item {\n    width: 40%;\n    margin-right: 0; } }\n\n.view-nac-meetings form {\n  margin: 0; }\n\n.view-nac-meetings .bef-exposed-form {\n  position: relative; }\n  .view-nac-meetings .bef-exposed-form .description {\n    font-size: 0.85em;\n    position: absolute;\n    top: 35px; }\n  .view-nac-meetings .bef-exposed-form legend {\n    margin-bottom: 20px; }\n\n.view-nac-meetings .views-table.views-view-table td.is-active {\n  background-color: transparent; }\n\n.home-block .block-content {\n  margin-top: 35px; }\n\n.home-block ul.homepage-list {\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  margin: 0;\n  list-style: none;\n  list-style-type: none; }\n  .home-block ul.homepage-list li {\n    width: 100%;\n    margin: 0 1.75% 2% 0;\n    float: left; }\n    @media (min-width: 864px) {\n      .home-block ul.homepage-list li {\n        width: 31.5%; } }\n    .home-block ul.homepage-list li .views-field.views-field-field-hp-thumbnail {\n      width: 130px;\n      height: 130px;\n      float: left;\n      margin-right: 10px; }\n    .home-block ul.homepage-list li h3.field-content {\n      margin: 0 0 7px 0;\n      font-weight: normal; }\n      .home-block ul.homepage-list li h3.field-content a {\n        text-decoration: none; }\n\n.current-topics .block-content {\n  background-color: #EEEEEE;\n  padding: 20px 5px 20px 20px;\n  margin-top: 35px; }\n\na.link-button-style2 {\n  display: inline-block;\n  background-color: #FFFFFF;\n  border: 1px solid #1A6986;\n  font-family: Tahoma, Verdana, Segoe, sans-serif;\n  font-size: 16px;\n  font-weight: normal;\n  color: #1A6986;\n  letter-spacing: 1px;\n  margin: 0;\n  padding: 15px 20px;\n  text-decoration: none;\n  text-transform: capitalize;\n  text-align: center;\n  appearance: none;\n  box-shadow: none;\n  border-radius: 0;\n  line-height: 1.5; }\n  a.link-button-style2:hover {\n    text-decoration: none;\n    color: #5f636a;\n    border: 1px solid #5f636a; }\n\n.view-bupe-physician-count-national .bup-national-table tr {\n  background: transparent;\n  border-bottom: 1px solid #CDCDCD; }\n  .view-bupe-physician-count-national .bup-national-table tr:last-child {\n    border: none;\n    border-top: 1px solid #cdcdcd; }\n  .view-bupe-physician-count-national .bup-national-table tr th {\n    /*width:15%;*/ }\n  .view-bupe-physician-count-national .bup-national-table tr .bup-totals,\n  .view-bupe-physician-count-national .bup-national-table tr .bup-grand-totals {\n    font-weight: bold; }\n  .view-bupe-physician-count-national .bup-national-table tr th, .view-bupe-physician-count-national .bup-national-table tr td {\n    border: none;\n    padding: 0.25em; }\n  .view-bupe-physician-count-national .bup-national-table tr td {\n    font-size: .9em; }\n\n.block-views-blockbup-physician-count-national-table--block-1 .view-header {\n  font-size: 15px;\n  color: #5f636a; }\n  .block-views-blockbup-physician-count-national-table--block-1 .view-header h2 {\n    background: #1A6986;\n    color: white;\n    font-size: 18px;\n    padding: 1em;\n    margin: 1em 0 0 0; }\n\n.block-views-blockbup-physician-count-national-table--block-1 #views-exposed-form-bup-physician-count-national-table--block-1 a.chosen-single {\n  height: 45px;\n  display: flex;\n  align-items: center; }\n  .block-views-blockbup-physician-count-national-table--block-1 #views-exposed-form-bup-physician-count-national-table--block-1 a.chosen-single div {\n    top: 20%; }\n\n.block-views-blockbup-physician-count-national-table--block-1 #views-exposed-form-bup-physician-count-national-table--block-1 input[type=submit] {\n  width: 123px;\n  height: 44px;\n  margin-left: 25px;\n  font-size: 1.1em; }\n\n.block-views-blockbup-physician-count-national-table--block-1 .tablesaw caption {\n  text-align: left;\n  font-weight: bold;\n  font-size: 16px; }\n\n.block-views-blockbup-physician-count-national-table--block-1 .bup-col-labels {\n  border: none;\n  margin: 0; }\n  .block-views-blockbup-physician-count-national-table--block-1 .bup-col-labels th {\n    border: none;\n    padding: 0;\n    font-size: 20px; }\n  .block-views-blockbup-physician-count-national-table--block-1 .bup-col-labels tr:nth-child(odd) {\n    background: transparent;\n    border-bottom: none; }\n\n.block-views-blockbup-physician-count-national-table--block-1 .waiver-table-wrapper {\n  background: #EEEEEE;\n  padding: 1em; }\n  .block-views-blockbup-physician-count-national-table--block-1 .waiver-table-wrapper .view-filters .views-exposed-form.bef-exposed-form label {\n    vertical-align: top;\n    display: inline-block;\n    margin-top: 5px;\n    margin-right: 20px;\n    color: #5f636a; }\n  .block-views-blockbup-physician-count-national-table--block-1 .waiver-table-wrapper .view-filters .views-exposed-form.bef-exposed-form .form-actions {\n    clear: none;\n    margin-top: 0; }\n    .block-views-blockbup-physician-count-national-table--block-1 .waiver-table-wrapper .view-filters .views-exposed-form.bef-exposed-form .form-actions .button.js-form-submit.form-submit {\n      margin-top: 15px; }\n  .block-views-blockbup-physician-count-national-table--block-1 .waiver-table-wrapper .chosen-search input[type=\"text\"] {\n    display: none; }\n  .block-views-blockbup-physician-count-national-table--block-1 .waiver-table-wrapper .chosen-container.chosen-container-single .chosen-single {\n    border: 2px solid #CDCDCD;\n    background-color: #FFFFFF;\n    background: white;\n    height: 34px; }\n  .block-views-blockbup-physician-count-national-table--block-1 .waiver-table-wrapper .chosen-results {\n    background-color: #FFFFFF; }\n\n.block-views-blockbup-physician-count-national-table--block-1 .inner-table-view-wrapper {\n  background-color: #FFFFFF;\n  padding: 1.5em; }\n  .block-views-blockbup-physician-count-national-table--block-1 .inner-table-view-wrapper tbody tr {\n    background-color: transparent;\n    border-bottom: 1px solid #CDCDCD; }\n    .block-views-blockbup-physician-count-national-table--block-1 .inner-table-view-wrapper tbody tr:last-child {\n      border: none; }\n  .block-views-blockbup-physician-count-national-table--block-1 .inner-table-view-wrapper .bup-col-labels tbody tr {\n    border-bottom: none; }\n  .block-views-blockbup-physician-count-national-table--block-1 .inner-table-view-wrapper .pager ul {\n    text-align: left; }\n    .block-views-blockbup-physician-count-national-table--block-1 .inner-table-view-wrapper .pager ul li a {\n      text-decoration: none; }\n  .block-views-blockbup-physician-count-national-table--block-1 .inner-table-view-wrapper .views-table.views-view-table {\n    margin: 2em 0; }\n    .block-views-blockbup-physician-count-national-table--block-1 .inner-table-view-wrapper .views-table.views-view-table caption {\n      font-size: 18px;\n      color: #1A6986;\n      font-weight: bold;\n      text-align: left; }\n    .block-views-blockbup-physician-count-national-table--block-1 .inner-table-view-wrapper .views-table.views-view-table td {\n      border: none;\n      padding: 0; }\n    .block-views-blockbup-physician-count-national-table--block-1 .inner-table-view-wrapper .views-table.views-view-table .bup-data-by-state-table {\n      margin: 0; }\n      .block-views-blockbup-physician-count-national-table--block-1 .inner-table-view-wrapper .views-table.views-view-table .bup-data-by-state-table th {\n        width: 15%;\n        background-color: #FFFFFF;\n        border: none;\n        color: #5f636a; }\n      .block-views-blockbup-physician-count-national-table--block-1 .inner-table-view-wrapper .views-table.views-view-table .bup-data-by-state-table .bup-totals,\n      .block-views-blockbup-physician-count-national-table--block-1 .inner-table-view-wrapper .views-table.views-view-table .bup-data-by-state-table .bup-grand-totals {\n        font-weight: bold;\n        color: #5f636a; }\n      .block-views-blockbup-physician-count-national-table--block-1 .inner-table-view-wrapper .views-table.views-view-table .bup-data-by-state-table .bup-totals {\n        display: inline-block;\n        width: 3em; }\n      .block-views-blockbup-physician-count-national-table--block-1 .inner-table-view-wrapper .views-table.views-view-table .bup-data-by-state-table td {\n        border: none;\n        padding: 1em;\n        font-size: .8em; }\n        .block-views-blockbup-physician-count-national-table--block-1 .inner-table-view-wrapper .views-table.views-view-table .bup-data-by-state-table td:nth-child(2) {\n          width: 74%; }\n        .block-views-blockbup-physician-count-national-table--block-1 .inner-table-view-wrapper .views-table.views-view-table .bup-data-by-state-table td:nth-child(3) {\n          width: 15%; }\n        .block-views-blockbup-physician-count-national-table--block-1 .inner-table-view-wrapper .views-table.views-view-table .bup-data-by-state-table td:nth-child(4) {\n          width: 17%; }\n        .block-views-blockbup-physician-count-national-table--block-1 .inner-table-view-wrapper .views-table.views-view-table .bup-data-by-state-table td span {\n          margin-right: 1em; }\n      .block-views-blockbup-physician-count-national-table--block-1 .inner-table-view-wrapper .views-table.views-view-table .bup-data-by-state-table tr:last-child {\n        border-top: 1px solid #CDCDCD; }\n\n/*** TS - Grant Reviewer Form Stylings related to latest design updates 3/10/20 ***/\n.alias-grants-review-grant-reviewer-application p, .alias-grants-review-grant-reviewer-application label, .alias-grants-review-grant-reviewer-application .description, .alias-grants-review-grant-reviewer-application .webform-element-description {\n  font-size: 15px; }\n\n.alias-grants-review-grant-reviewer-application label {\n  font-weight: normal;\n  color: black; }\n\n.alias-grants-review-grant-reviewer-application hr {\n  border-bottom: 2px solid #999999 !important; }\n\n.alias-grants-review-grant-reviewer-application fieldset {\n  border: none;\n  padding: 0;\n  margin-top: 3em;\n  margin-bottom: 1em; }\n  .alias-grants-review-grant-reviewer-application fieldset legend {\n    font-size: 140%;\n    padding-bottom: 0px;\n    font-weight: bold;\n    color: #1f419a; }\n  .alias-grants-review-grant-reviewer-application fieldset fieldset {\n    margin: 0; }\n    .alias-grants-review-grant-reviewer-application fieldset fieldset legend {\n      padding-top: 1em;\n      font-size: 15px;\n      font-weight: bold;\n      color: black;\n      margin: 0; }\n  .alias-grants-review-grant-reviewer-application fieldset .checkboxes--wrapper legend {\n    padding: 0; }\n  .alias-grants-review-grant-reviewer-application fieldset .description, .alias-grants-review-grant-reviewer-application fieldset .webform-element-description {\n    margin-top: 5px;\n    margin-bottom: 15px; }\n\n.alias-grants-review-grant-reviewer-application .required-asterisk {\n  color: #f00000;\n  font-weight: bold;\n  font-size: 15px;\n  line-height: 15px; }\n\n.alias-grants-review-grant-reviewer-application .form-required:after {\n  width: 8px;\n  height: 8px;\n  background-size: 8px 8px; }\n\n.alias-grants-review-grant-reviewer-application input[type=text], .alias-grants-review-grant-reviewer-application input[type=email] {\n  width: 450px;\n  height: 30px; }\n\n.alias-grants-review-grant-reviewer-application .state-zip-wrapper {\n  margin: 0; }\n  .alias-grants-review-grant-reviewer-application .state-zip-wrapper .fieldset-wrapper {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    width: 450px; }\n    .alias-grants-review-grant-reviewer-application .state-zip-wrapper .fieldset-wrapper .form-item-state .form-select {\n      width: 235px;\n      height: 30px; }\n  .alias-grants-review-grant-reviewer-application .state-zip-wrapper .form-item-zip-code {\n    text-align: right;\n    width: 50%; }\n    .alias-grants-review-grant-reviewer-application .state-zip-wrapper .form-item-zip-code label {\n      text-align: left; }\n    .alias-grants-review-grant-reviewer-application .state-zip-wrapper .form-item-zip-code input[type=text] {\n      width: 200px;\n      height: 30px; }\n\n.alias-grants-review-grant-reviewer-application .form-item-license label {\n  font-weight: bold;\n  margin-top: 1em; }\n\n.alias-grants-review-grant-reviewer-application #edit-race--wrapper legend {\n  padding-top: 1em; }\n\n.alias-grants-review-grant-reviewer-application textarea {\n  width: 100% !important;\n  height: 276px; }\n\n.alias-grants-review-grant-reviewer-application .form-submit {\n  margin: 0;\n  margin-right: 25px;\n  background: #1a6986;\n  border: none;\n  color: white;\n  width: 123px;\n  padding: 0px 10px;\n  text-transform: uppercase;\n  font-size: 16px; }\n  .alias-grants-review-grant-reviewer-application .form-submit:hover {\n    border: none; }\n\n.alias-grants-review-grant-reviewer-application .form-reset {\n  margin: 0;\n  background: white;\n  color: #1a6986;\n  text-decoration: underline;\n  border: none;\n  padding: 0; }\n  .alias-grants-review-grant-reviewer-application .form-reset:hover {\n    color: #1a6986;\n    border: none;\n    background: none;\n    font-weight: bold; }\n\n.alias-grants-review-grant-reviewer-application #edit-actions, .alias-grants-review-grant-reviewer-application #edit-reset {\n  display: inline; }\n\n.share-block {\n  display: none; }\n\n@media (min-width: 624px) {\n  .share-block {\n    float: right;\n    padding: 14px 14px 0 0;\n    display: block;\n    width: 160px; }\n    .share-block ul.share-buttons {\n      overflow: hidden; }\n      .share-block ul.share-buttons li {\n        float: right;\n        margin-left: 5px; }\n      .share-block ul.share-buttons img {\n        display: block;\n        margin: 0; }\n      .share-block ul.share-buttons i.fas.fa-envelope,\n      .share-block ul.share-buttons svg.fa-envelope {\n        font-size: 26px;\n        margin-top: -3px;\n        color: #b21d1b; } }\n\n#block-utilitymenu ul[data-region=\"header\"].menu {\n  font-size: 14px; }\n  #block-utilitymenu ul[data-region=\"header\"].menu li.menu-item a {\n    padding: 3px 10px;\n    color: #1F419A;\n    text-decoration: none; }\n\n.region--preface-second .breadcrumb-block {\n  display: none; }\n\n@media (min-width: 624px) {\n  .region--preface-second {\n    overflow: hidden; }\n    .region--preface-second .breadcrumb-block {\n      float: left;\n      padding: 14px 0 0 14px;\n      display: block;\n      width: calc(100% - 200px); }\n      .region--preface-second .breadcrumb-block .breadcrumb {\n        padding-bottom: 0.5em;\n        font-size: 12px; }\n        .region--preface-second .breadcrumb-block .breadcrumb a {\n          font-weight: normal;\n          text-decoration: none; }\n        .region--preface-second .breadcrumb-block .breadcrumb li:before {\n          content: \"/\"; }\n        .region--preface-second .breadcrumb-block .breadcrumb li:first-child:before {\n          content: \"\"; } }\n\n/* HHS ribbon - top bar - Begin */\n#hhs-ribbon {\n  background-color: #333;\n  color: #1E384B;\n  padding: 5px 0;\n  display: none; }\n  @media (min-width: 1000px) {\n    #hhs-ribbon {\n      display: block; } }\n  #hhs-ribbon .svg-icon {\n    width: 22px;\n    height: 25px;\n    vertical-align: middle;\n    margin-right: 5px; }\n  #hhs-ribbon a {\n    color: #1E384B;\n    text-decoration: none;\n    line-height: 1em; }\n    #hhs-ribbon a:hover, #hhs-ribbon a:focus {\n      color: #333; }\n\ninput#q.samhsasearchbox {\n  font-size: 16px;\n  width: 77%;\n  height: 38px;\n  padding: 0px 10px;\n  box-sizing: border-box;\n  -webkit-appearance: none;\n  -webkit-border-radius: 0;\n  -moz-border-radius: 0;\n  border-radius: 0px;\n  vertical-align: middle;\n  margin: 0px -7px 0px 0px;\n  border: 1px solid #CDCDCD; }\n\n#search_box .samhsasearchbutton {\n  background-color: #1A6986;\n  background-image: none;\n  -webkit-border-radius: 0;\n  -moz-border-radius: 0;\n  border-radius: 0;\n  border: none;\n  color: #fff;\n  font-size: 16px;\n  float: right;\n  margin-top: 0px;\n  margin-left: 2%;\n  padding: 0;\n  height: 38px;\n  width: 23%;\n  margin-right: 0%;\n  box-sizing: content-box;\n  vertical-align: middle;\n  background: #1a6986;\n  position: absolute;\n  top: 0;\n  right: 0; }\n  #search_box .samhsasearchbutton:hover {\n    background-color: #5f636a;\n    /* border: 1px solid #5f636a; */\n    background: #5f636a;\n    box-shadow: 0 0 5px #1e384b;\n    padding: 0;\n    margin: 0; }\n\n/* HHS ribbon - top bar - End */\n/*  Logo - site - branding block - Begin */\n#header-outer-wrapper .header-layout .region--header .site-branding {\n  float: none;\n  width: 100%;\n  margin: 0 auto;\n  padding: 0;\n  max-width: max-content; }\n  @media (min-width: 1000px) {\n    #header-outer-wrapper .header-layout .region--header .site-branding {\n      width: 50%;\n      float: left; } }\n  #header-outer-wrapper .header-layout .region--header .site-branding #site-branding {\n    max-width: max-content; }\n    #header-outer-wrapper .header-layout .region--header .site-branding #site-branding #logo a {\n      background-image: url(../../../omega_samhsa_datasite/src/images/SAMHSA-logo-reversed.png);\n      background-repeat: no-repeat;\n      background-size: contain;\n      background-position: 0px 5px;\n      display: block;\n      height: 50px;\n      width: 118px; }\n      @media (min-width: 1000px) {\n        #header-outer-wrapper .header-layout .region--header .site-branding #site-branding #logo a {\n          background-image: url(../../../omega_samhsa_datasite/src/images/SAMHSA-logo-blue.png);\n          background-repeat: no-repeat;\n          background-size: contain;\n          background-position: 0px 0px;\n          display: block;\n          height: 85px;\n          width: 250px; } }\n      #header-outer-wrapper .header-layout .region--header .site-branding #site-branding #logo a img {\n        display: none; }\n\n.block-superfish-main-menu ul#superfish-main-menu.sf-style-none ul ul {\n  display: none !important;\n  /* second level menus are hidden for desktop mode */ }\n\n.block-superfish-main-menu ul.sf-style-none .mobile-only {\n  display: none !important; }\n\n.block-superfish-main-menu ul.sf-style-none .no-link {\n  background: #eeeeee;\n  color: #1e384b;\n  line-height: 20px;\n  padding: 0.75em 0;\n  font-size: 16px;\n  text-align: left;\n  font-weight: 400;\n  text-decoration: none;\n  margin: 0;\n  display: block;\n  position: relative; }\n\n.block-superfish-main-menu ul.sf-style-none .sub-title {\n  font-weight: bold;\n  display: block;\n  margin-bottom: 10px; }\n\n.block-superfish-main-menu ul.sf-style-none .locator-icon, .block-superfish-main-menu ul.sf-style-none .locator-icon:hover, .block-superfish-main-menu ul.sf-style-none .locator-icon:focus {\n  display: inline-block;\n  padding-left: 25px;\n  background-image: url(\"../../../omega_samhsa_main/src/images/locatorsm.png\");\n  background-position: 0px 14px;\n  background-repeat: no-repeat; }\n\n.block-superfish-main-menu ul.sf-style-none .external-icon, .block-superfish-main-menu ul.sf-style-none .external-icon:hover, .block-superfish-main-menu ul.sf-style-none .external-icon:focus {\n  display: inline-block;\n  padding-right: 25px;\n  background-image: url(\"../../../omega_samhsa_main/src/images/external.png\");\n  background-position: 212px 14px;\n  background-repeat: no-repeat; }\n\n.block-superfish-main-menu ul.sf-style-none li.sf-depth-1 ul li.sf-depth-2 ul {\n  display: none !important; }\n\n.block-superfish-main-menu ul.sf-style-none li .about-leadership {\n  border: none;\n  padding-top: 15px;\n  clear: both;\n  float: none;\n  overflow: hidden;\n  display: block; }\n\n.block-superfish-main-menu ul.sf-style-none .about-leadership div span {\n  padding-left: 130px;\n  background-image: url(\"../../../omega_samhsa_main/src/images/leadership.png\");\n  background-position: 0px 0px;\n  background-repeat: no-repeat;\n  height: 120px;\n  display: block; }\n\n.extra-width .block-superfish-main-menu ul.sf-menu.menu {\n  display: flex;\n  flex-direction: row;\n  float: none;\n  width: 100%;\n  margin: 0 auto; }\n  .extra-width .block-superfish-main-menu ul.sf-menu.menu li {\n    display: inline-block;\n    float: none;\n    width: 100%; }\n  .extra-width .block-superfish-main-menu ul.sf-menu.menu li:nth-child(1) {\n    min-width: 170px; }\n  .extra-width .block-superfish-main-menu ul.sf-menu.menu li:nth-child(2) {\n    min-width: 190px; }\n  .extra-width .block-superfish-main-menu ul.sf-menu.menu li:nth-child(3) {\n    min-width: 170px; }\n\n.block-superfish-main-menu #superfish-main-menu.ul.sf-menu.menu, #block-superfish-2 #superfish-main-menu.ul.sf-menu.menu {\n  display: flex;\n  flex-direction: row;\n  float: none;\n  width: 100%;\n  margin: 0 auto; }\n  .block-superfish-main-menu #superfish-main-menu.ul.sf-menu.menu li, #block-superfish-2 #superfish-main-menu.ul.sf-menu.menu li {\n    display: inline-block;\n    float: none;\n    width: 100%; }\n\n.block-superfish-main-menu .sf-style-none, #block-superfish-2 .sf-style-none {\n  margin: 0;\n  padding: 0;\n  background: #1e384b;\n  width: 100%;\n  clear: both;\n  float: none;\n  min-height: 41px; }\n  .block-superfish-main-menu .sf-style-none li.sf-depth-1 a.sf-depth-1, .block-superfish-main-menu .sf-style-none li.sf-depth-1 a.sf-depth-1.sf-with-ul, #block-superfish-2 .sf-style-none li.sf-depth-1 a.sf-depth-1, #block-superfish-2 .sf-style-none li.sf-depth-1 a.sf-depth-1.sf-with-ul {\n    font-weight: 400;\n    text-decoration: none;\n    height: 41px;\n    line-height: 41px;\n    text-align: center !important;\n    padding: 0 0.75em !important;\n    letter-spacing: 0.03em;\n    color: #fff;\n    font-size: 16px; }\n  .block-superfish-main-menu .sf-style-none.sf-navbar, #block-superfish-2 .sf-style-none.sf-navbar {\n    width: 100%;\n    background: #1E384B; }\n  .block-superfish-main-menu .sf-style-none ul, #block-superfish-2 .sf-style-none ul {\n    background: #eeeeee;\n    border: 1px solid #cdcdcd;\n    border-radius: unset;\n    padding: 15px 30px !important;\n    min-width: 27em !important;\n    /* some script is overriding the menu width */ }\n    .block-superfish-main-menu .sf-style-none ul.sf-megamenu li.sf-megamenu-wrapper, #block-superfish-2 .sf-style-none ul.sf-megamenu li.sf-megamenu-wrapper {\n      background: #c0c0c0; }\n      .block-superfish-main-menu .sf-style-none ul.sf-megamenu li.sf-megamenu-wrapper li, #block-superfish-2 .sf-style-none ul.sf-megamenu li.sf-megamenu-wrapper li {\n        background: transparent; }\n  .block-superfish-main-menu .sf-style-none a, #block-superfish-2 .sf-style-none a {\n    color: #fff;\n    padding: 0.75em 1.05em;\n    font-size: 16px;\n    text-align: left;\n    font-family: Tahoma;\n    font-weight: 400;\n    text-decoration: none; }\n    .block-superfish-main-menu .sf-style-none a.sf-with-ul, #block-superfish-2 .sf-style-none a.sf-with-ul {\n      padding-right: 2.25em; }\n    .block-superfish-main-menu .sf-style-none a:focus, #block-superfish-2 .sf-style-none a:focus {\n      background: #1E384B;\n      outline: 0; }\n    .block-superfish-main-menu .sf-style-none a:hover, #block-superfish-2 .sf-style-none a:hover {\n      background: #1E384B;\n      outline: 0; }\n    .block-superfish-main-menu .sf-style-none a:active, #block-superfish-2 .sf-style-none a:active {\n      background: #1E384B;\n      outline: 0; }\n  .block-superfish-main-menu .sf-style-none span.nolink, #block-superfish-2 .sf-style-none span.nolink {\n    color: #1E384B;\n    padding: 0.75em 0; }\n    .block-superfish-main-menu .sf-style-none span.nolink.sf-with-ul, #block-superfish-2 .sf-style-none span.nolink.sf-with-ul {\n      padding-right: 2.25em; }\n    .block-superfish-main-menu .sf-style-none span.nolink:hover, #block-superfish-2 .sf-style-none span.nolink:hover {\n      background: #eeeeee;\n      outline: 0; }\n  .block-superfish-main-menu .sf-style-none span.sf-description, #block-superfish-2 .sf-style-none span.sf-description {\n    color: #fff;\n    display: block;\n    font-size: 0.833em;\n    line-height: 1.5;\n    margin: 5px 0 0 5px;\n    padding: 0; }\n  .block-superfish-main-menu .sf-style-none.rtl span.sf-description, #block-superfish-2 .sf-style-none.rtl span.sf-description {\n    margin: 5px 5px 0 0; }\n  .block-superfish-main-menu .sf-style-none.rtl span.nolink.sf-with-ul, #block-superfish-2 .sf-style-none.rtl span.nolink.sf-with-ul {\n    padding-left: 2.25em;\n    padding-right: 1em; }\n  .block-superfish-main-menu .sf-style-none.rtl a.sf-with-ul, #block-superfish-2 .sf-style-none.rtl a.sf-with-ul {\n    padding-left: 2.25em;\n    padding-right: 1em; }\n  .block-superfish-main-menu .sf-style-none li.sf-item-1 li.sf-item-1, .block-superfish-main-menu .sf-style-none li.sf-item-3 li.sf-item-6, .block-superfish-main-menu .sf-style-none li li.view-full-bio, .block-superfish-main-menu .sf-style-none li li .about-leadership, #block-superfish-2 .sf-style-none li.sf-item-1 li.sf-item-1, #block-superfish-2 .sf-style-none li.sf-item-3 li.sf-item-6, #block-superfish-2 .sf-style-none li li.view-full-bio, #block-superfish-2 .sf-style-none li li .about-leadership {\n    border: none; }\n  .block-superfish-main-menu .sf-style-none li, #block-superfish-2 .sf-style-none li {\n    background: #1E384B; }\n    .block-superfish-main-menu .sf-style-none li li, #block-superfish-2 .sf-style-none li li {\n      background: #eeeeee;\n      color: #1E384B;\n      font-size: 16px;\n      line-height: 20px;\n      border-bottom: 1px solid #cdcdcd; }\n      .block-superfish-main-menu .sf-style-none li li a, #block-superfish-2 .sf-style-none li li a {\n        background: #eeeeee;\n        color: #1F419A;\n        padding-left: unset;\n        padding-right: unset;\n        line-height: 20px; }\n        .block-superfish-main-menu .sf-style-none li li a:hover, #block-superfish-2 .sf-style-none li li a:hover {\n          background: #eeeeee;\n          /* color: #CD3835;  508 contrast fix below */\n          color: #932725; }\n        .block-superfish-main-menu .sf-style-none li li a:focus, #block-superfish-2 .sf-style-none li li a:focus {\n          background: #eeeeee;\n          /* color: #CD3835;  508 contrast fix below */\n          color: #932725; }\n        .block-superfish-main-menu .sf-style-none li li a:active, #block-superfish-2 .sf-style-none li li a:active {\n          background: #eeeeee;\n          /* color: #CD3835;  508 contrast fix below */\n          color: #932725; }\n      .block-superfish-main-menu .sf-style-none li li li, #block-superfish-2 .sf-style-none li li li {\n        background: #d0d0d0; }\n    .block-superfish-main-menu .sf-style-none li li:last-child, #block-superfish-2 .sf-style-none li li:last-child {\n      border: none; }\n    .block-superfish-main-menu .sf-style-none li:hover, #block-superfish-2 .sf-style-none li:hover {\n      background: #eee;\n      /* background: $superfish-1-background-color-level-first; */\n      outline: 0; }\n      .block-superfish-main-menu .sf-style-none li:hover > ul, #block-superfish-2 .sf-style-none li:hover > ul {\n        top: 40px; }\n    .block-superfish-main-menu .sf-style-none li.sfHover, #block-superfish-2 .sf-style-none li.sfHover {\n      background: #1E384B;\n      outline: 0; }\n      .block-superfish-main-menu .sf-style-none li.sfHover > ul, #block-superfish-2 .sf-style-none li.sfHover > ul {\n        top: 40px; }\n  .block-superfish-main-menu .sf-style-none li.sf-item-1 ul li.sf-item-1 div span, #block-superfish-2 .sf-style-none li.sf-item-1 ul li.sf-item-1 div span {\n    font-weight: bold;\n    display: block;\n    margin-bottom: 10px; }\n  .block-superfish-main-menu .sf-style-none li.sf-item-1 ul li.sf-item-2 a, .block-superfish-main-menu .sf-style-none li.sf-item-1 ul li.sf-item-3 a, .block-superfish-main-menu .sf-style-none li.sf-item-1 ul li.sf-item-4 a, .block-superfish-main-menu .sf-style-none li.sf-item-1 ul li.sf-item-5 a, #block-superfish-2 .sf-style-none li.sf-item-1 ul li.sf-item-2 a, #block-superfish-2 .sf-style-none li.sf-item-1 ul li.sf-item-3 a, #block-superfish-2 .sf-style-none li.sf-item-1 ul li.sf-item-4 a, #block-superfish-2 .sf-style-none li.sf-item-1 ul li.sf-item-5 a {\n    display: inline-block;\n    padding-left: 25px;\n    background-image: url(\"../../../omega_samhsa_main/src/images/locatorsm.png\");\n    background-position: 0px 14px;\n    background-repeat: no-repeat; }\n  .block-superfish-main-menu .sf-style-none li.sf-item-3 ul li.sf-item-6 a, .block-superfish-main-menu .sf-style-none li.sf-item-3 ul li.ext-link a, #block-superfish-2 .sf-style-none li.sf-item-3 ul li.sf-item-6 a, #block-superfish-2 .sf-style-none li.sf-item-3 ul li.ext-link a {\n    display: inline-block;\n    padding-right: 25px;\n    background-image: url(\"../../../omega_samhsa_main/src/images/external.png\");\n    background-position: 212px 14px;\n    background-repeat: no-repeat; }\n  .block-superfish-main-menu .sf-style-none li.sf-item-3 ul li.ext-link:hover, #block-superfish-2 .sf-style-none li.sf-item-3 ul li.ext-link:hover {\n    background: unset; }\n  .block-superfish-main-menu .sf-style-none li.sf-item-7 ul li .about-leadership div span, #block-superfish-2 .sf-style-none li.sf-item-7 ul li .about-leadership div span {\n    padding-left: 130px;\n    background-image: url(\"../../../omega_samhsa_main/src/images/leadership.png\");\n    background-position: 0px 0px;\n    background-repeat: no-repeat;\n    height: 120px;\n    display: block; }\n  .block-superfish-main-menu .sf-style-none li.sf-item-7 ul li.view-full-bio a, #block-superfish-2 .sf-style-none li.sf-item-7 ul li.view-full-bio a {\n    text-align: center; }\n  .block-superfish-main-menu .sf-style-none .sf-sub-indicator, #block-superfish-2 .sf-style-none .sf-sub-indicator {\n    display: none; }\n  .block-superfish-main-menu .sf-style-none ul ul, #block-superfish-2 .sf-style-none ul ul {\n    border: unset;\n    padding: unset !important; }\n\n.block-superfish-main-menu div.sf-accordion-toggle.sf-style-none a, #block-superfish-2 div.sf-accordion-toggle.sf-style-none a {\n  background: #1E384B;\n  color: #fff;\n  padding: 1em; }\n  .block-superfish-main-menu div.sf-accordion-toggle.sf-style-none a.sf-expanded, #block-superfish-2 div.sf-accordion-toggle.sf-style-none a.sf-expanded {\n    background-color: #c0c0c0;\n    font-weight: bold; }\n\n.block-superfish-main-menu .sf-menu.sf-style-none.rtl.sf-accordion li li a, #block-superfish-2 .sf-menu.sf-style-none.rtl.sf-accordion li li a {\n  padding-left: auto;\n  padding-right: 2em; }\n\n.block-superfish-main-menu .sf-menu.sf-style-none.rtl.sf-accordion li li li a, #block-superfish-2 .sf-menu.sf-style-none.rtl.sf-accordion li li li a {\n  padding-left: auto;\n  padding-right: 3em; }\n\n.block-superfish-main-menu .sf-menu.sf-style-none.rtl.sf-accordion li li li li a, #block-superfish-2 .sf-menu.sf-style-none.rtl.sf-accordion li li li li a {\n  padding-left: auto;\n  padding-right: 4em; }\n\n.block-superfish-main-menu .sf-menu.sf-style-none.rtl.sf-accordion li li li li li a, #block-superfish-2 .sf-menu.sf-style-none.rtl.sf-accordion li li li li li a {\n  padding-left: auto;\n  padding-right: 5em; }\n\n.block-superfish-main-menu .sf-menu.sf-style-none.rtl.sf-accordion li li li li li span.nolink, #block-superfish-2 .sf-menu.sf-style-none.rtl.sf-accordion li li li li li span.nolink {\n  padding-left: auto;\n  padding-right: 5em; }\n\n.block-superfish-main-menu .sf-menu.sf-style-none.rtl.sf-accordion li li li li span.nolink, #block-superfish-2 .sf-menu.sf-style-none.rtl.sf-accordion li li li li span.nolink {\n  padding-left: auto;\n  padding-right: 4em; }\n\n.block-superfish-main-menu .sf-menu.sf-style-none.rtl.sf-accordion li li li span.nolink, #block-superfish-2 .sf-menu.sf-style-none.rtl.sf-accordion li li li span.nolink {\n  padding-left: auto;\n  padding-right: 3em; }\n\n.block-superfish-main-menu .sf-menu.sf-style-none.rtl.sf-accordion li li span.nolink, #block-superfish-2 .sf-menu.sf-style-none.rtl.sf-accordion li li span.nolink {\n  padding-left: auto;\n  padding-right: 2em; }\n\n.block-superfish-main-menu .sf-menu.sf-style-none.rtl ul.sf-megamenu li.sf-megamenu-wrapper ol li.sf-megamenu-column, #block-superfish-2 .sf-menu.sf-style-none.rtl ul.sf-megamenu li.sf-megamenu-wrapper ol li.sf-megamenu-column {\n  float: right; }\n\n.block-superfish-main-menu .sf-menu.sf-style-none.sf-accordion li.sf-expanded, #block-superfish-2 .sf-menu.sf-style-none.sf-accordion li.sf-expanded {\n  background-color: #c0c0c0; }\n  .block-superfish-main-menu .sf-menu.sf-style-none.sf-accordion li.sf-expanded > a, #block-superfish-2 .sf-menu.sf-style-none.sf-accordion li.sf-expanded > a {\n    font-weight: bold; }\n  .block-superfish-main-menu .sf-menu.sf-style-none.sf-accordion li.sf-expanded > span.nolink, #block-superfish-2 .sf-menu.sf-style-none.sf-accordion li.sf-expanded > span.nolink {\n    font-weight: bold; }\n\n.block-superfish-main-menu .sf-menu.sf-style-none.sf-accordion li li a, #block-superfish-2 .sf-menu.sf-style-none.sf-accordion li li a {\n  padding-left: 2em; }\n\n.block-superfish-main-menu .sf-menu.sf-style-none.sf-accordion li li li a, #block-superfish-2 .sf-menu.sf-style-none.sf-accordion li li li a {\n  padding-left: 3em; }\n\n.block-superfish-main-menu .sf-menu.sf-style-none.sf-accordion li li li li a, #block-superfish-2 .sf-menu.sf-style-none.sf-accordion li li li li a {\n  padding-left: 4em; }\n\n.block-superfish-main-menu .sf-menu.sf-style-none.sf-accordion li li li li li a, #block-superfish-2 .sf-menu.sf-style-none.sf-accordion li li li li li a {\n  padding-left: 5em; }\n\n.block-superfish-main-menu .sf-menu.sf-style-none.sf-accordion li li li li li span.nolink, #block-superfish-2 .sf-menu.sf-style-none.sf-accordion li li li li li span.nolink {\n  padding-left: 5em; }\n\n.block-superfish-main-menu .sf-menu.sf-style-none.sf-accordion li li li li span.nolink, #block-superfish-2 .sf-menu.sf-style-none.sf-accordion li li li li span.nolink {\n  padding-left: 4em; }\n\n.block-superfish-main-menu .sf-menu.sf-style-none.sf-accordion li li li span.nolink, #block-superfish-2 .sf-menu.sf-style-none.sf-accordion li li li span.nolink {\n  padding-left: 3em; }\n\n.block-superfish-main-menu .sf-menu.sf-style-none.sf-accordion li li span.nolink, #block-superfish-2 .sf-menu.sf-style-none.sf-accordion li li span.nolink {\n  padding-left: 2em; }\n\n.block-superfish-main-menu .sf-menu.sf-style-none.sf-accordion li a.sf-accordion-button, #block-superfish-2 .sf-menu.sf-style-none.sf-accordion li a.sf-accordion-button {\n  font-weight: bold;\n  position: absolute;\n  right: 0;\n  top: 0;\n  z-index: 499; }\n\n.block-superfish-main-menu .sf-menu.sf-style-none ul.sf-megamenu li.sf-megamenu-wrapper ol, #block-superfish-2 .sf-menu.sf-style-none ul.sf-megamenu li.sf-megamenu-wrapper ol {\n  margin: 0;\n  padding: 0; }\n  .block-superfish-main-menu .sf-menu.sf-style-none ul.sf-megamenu li.sf-megamenu-wrapper ol li, #block-superfish-2 .sf-menu.sf-style-none ul.sf-megamenu li.sf-megamenu-wrapper ol li {\n    margin: 0;\n    padding: 0; }\n    .block-superfish-main-menu .sf-menu.sf-style-none ul.sf-megamenu li.sf-megamenu-wrapper ol li.sf-megamenu-column, #block-superfish-2 .sf-menu.sf-style-none ul.sf-megamenu li.sf-megamenu-wrapper ol li.sf-megamenu-column {\n      display: inline;\n      float: left; }\n\n.block-superfish-main-menu .sf-menu.sf-style-none ul.sf-megamenu li.sf-megamenu-wrapper a.menuparent, #block-superfish-2 .sf-menu.sf-style-none ul.sf-megamenu li.sf-megamenu-wrapper a.menuparent {\n  font-weight: bold; }\n\n.block-superfish-main-menu .sf-menu.sf-style-none ul.sf-megamenu li.sf-megamenu-wrapper span.nolink.menuparent, #block-superfish-2 .sf-menu.sf-style-none ul.sf-megamenu li.sf-megamenu-wrapper span.nolink.menuparent {\n  font-weight: bold; }\n\n.block-superfish-main-menu .sf-menu.sf-style-none li.news-room ul, #block-superfish-2 .sf-menu.sf-style-none li.news-room ul {\n  padding: 0 !important;\n  border: none; }\n\n.sf-style-none li.sf-depth-1 a.sf-depth-1.active,\n.sf-style-none li.sf-depth-1 a.sf-depth-1:hover,\n.sf-style-none li.sf-depth-1 a.sf-depth-1.sf-with-ul:hover,\n.sf-style-none li.sf-depth-1 a.sf-depth-1:hover,\n.sf-style-none li.sf-depth-1 a.sf-depth-1.sf-with-ul:hover {\n  border-bottom: 4px solid #CD3835; }\n\n.block-superfish-main-menu .sf-style-none li li a.active {\n  /* color: #CD3835;  508 contrast fix below */\n  color: #932725; }\n\n/* Mobile Menu */\n/* cutom styles added for desktop */\n.block-mobile-menu .dl-menuwrapper ul.dl-menu .no-link {\n  background: #eeeeee;\n  color: #1e384b;\n  line-height: 20px;\n  padding: 0.75em 0;\n  font-size: 16px;\n  text-align: left;\n  font-weight: 400;\n  text-decoration: none;\n  margin: 0;\n  display: block;\n  position: relative; }\n\n.block-mobile-menu .dl-menuwrapper ul.dl-menu .sub-title {\n  font-weight: bold;\n  display: block;\n  margin-bottom: 10px; }\n\n.block-mobile-menu .dl-menuwrapper ul.dl-menu .locator-icon, .block-mobile-menu .dl-menuwrapper ul.dl-menu .locator-icon:hover, .block-mobile-menu .dl-menuwrapper ul.dl-menu .locator-icon:focus {\n  display: inline-block;\n  padding-left: 25px;\n  background-image: url(\"../../../omega_samhsa_main/src/images/locatorsm.png\");\n  background-position: 0px 14px;\n  background-repeat: no-repeat; }\n\n.block-mobile-menu .dl-menuwrapper ul.dl-menu .external-icon, .block-mobile-menu .dl-menuwrapper ul.dl-menu .external-icon:hover, .block-mobile-menu .dl-menuwrapper ul.dl-menu .external-icon:focus {\n  display: inline-block;\n  padding-right: 25px;\n  background-image: url(\"../../../omega_samhsa_main/src/images/external.png\");\n  background-position: 212px 14px;\n  background-repeat: no-repeat; }\n\n.block-mobile-menu .dl-menuwrapper ul.dl-menu li .about-leadership {\n  border: none;\n  padding-top: 15px;\n  clear: both;\n  float: none;\n  overflow: hidden;\n  display: block; }\n\n.block-mobile-menu .dl-menuwrapper ul.dl-menu .about-leadership div span {\n  padding-left: 130px;\n  background-image: url(\"../../../omega_samhsa_main/src/images/leadership.png\");\n  background-position: 0px 0px;\n  background-repeat: no-repeat;\n  height: 120px;\n  display: block; }\n\n@media only screen and (min-width: 1000px) and (min-width: 864px) {\n  .block-mobile-menu {\n    display: none; } }\n\n#header-outer-wrapper {\n  background-color: #1E384B; }\n  @media (min-width: 1000px) {\n    #header-outer-wrapper {\n      background-color: #fff;\n      padding-top: 15px;\n      margin-bottom: 20px; } }\n  #header-outer-wrapper .preface-layout {\n    position: relative; }\n    #header-outer-wrapper .preface-layout .region--preface-first:before {\n      display: none; }\n\n/* Common styles of menus */\n.dl-menuwrapper {\n  width: 100%;\n  max-width: 100%;\n  /* max-width: 300px; */\n  float: left;\n  position: absolute;\n  -webkit-perspective: 1000px;\n  perspective: 1000px;\n  -webkit-perspective-origin: 50% 200%;\n  perspective-origin: 50% 200%;\n  opacity: 0.97;\n  height: 0; }\n\n.dl-menuwrapper {\n  z-index: 500; }\n\n.dl-menuwrapper:first-child {\n  margin-right: 100px; }\n\n.dl-menuwrapper button {\n  background: transparent;\n  border: none;\n  width: 48px;\n  height: 45px;\n  text-indent: -900em;\n  overflow: hidden;\n  position: absolute;\n  cursor: pointer;\n  outline: none;\n  top: -52px;\n  left: 5px;\n  padding-top: 33px;\n  font-size: 12px;\n  text-align: center;\n  letter-spacing: 0.03em; }\n\n.dl-menuwrapper button:hover {\n  background: none; }\n\n/* .dl-menuwrapper button:hover,\n.dl-menuwrapper button.dl-active,*/\n.dl-menuwrapper ul {\n  background: #eee; }\n\n.dl-menuwrapper button:after {\n  content: '';\n  position: absolute;\n  width: 68%;\n  height: 5px;\n  background: #fff;\n  top: 10px;\n  left: 15%;\n  box-shadow: 0 10px 0 #fff, 0 20px 0 #fff; }\n\n.dl-menuwrapper ul {\n  padding: 0;\n  list-style: none;\n  -webkit-transform-style: preserve-3d;\n  transform-style: preserve-3d; }\n\n/* override menu css styles */\n.dl-menuwrapper .menu-item, .menu-item--collapsed, .menu-item--expanded {\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n  list-style-image: none; }\n\n.dl-menuwrapper li {\n  position: relative; }\n\n.dl-menuwrapper li a {\n  display: block;\n  position: relative;\n  padding: 15px 30px 15px 0px;\n  font-family: Tahoma, Verdana, Segoe, sans-serif;\n  font-size: 16px;\n  line-height: 20px;\n  font-weight: 300;\n  color: #1F419A;\n  outline: none;\n  border-bottom: 1px solid #979797;\n  text-decoration: none; }\n\n.dl-menuwrapper li.last a {\n  border: none; }\n\n.no-touch .dl-menuwrapper li a:hover {\n  background: rgba(255, 248, 213, 0.1); }\n\n.dl-menuwrapper li.dl-back {\n  background: rgba(0, 0, 0, 0.1);\n  display: block;\n  clear: both;\n  float: none;\n  overflow: hidden;\n  border-bottom: 1px solid #979797;\n  margin: 0 -15px; }\n\n.dl-menuwrapper li.dl-back > a {\n  padding-left: 30px;\n  padding-right: 45px;\n  background: unset;\n  border-bottom: none;\n  display: inline-block;\n  cursor: pointer; }\n\n.dl-menuwrapper ul.dl-subview li.dl-back > a {\n  border-right: 1px solid #979797; }\n\na.dl-back-link:before {\n  position: absolute;\n  top: 0;\n  line-height: 50px;\n  speak: none;\n  -webkit-font-smoothing: antialiased;\n  cursor: pointer;\n  text-rendering: auto;\n  font-size: 18px;\n  letter-spacing: 0;\n  font-weight: 200;\n  text-align: center;\n  left: 0;\n  width: 44px;\n  height: 50px;\n  content: \" \";\n  padding-right: 10px;\n  color: #1f419a !important;\n  background: transparent url(../../../omega_samhsa_main/src/images/left-arrow.png) 12px 12px no-repeat; }\n\na.dl-close-link:after {\n  position: absolute;\n  top: 0;\n  line-height: 50px;\n  speak: none;\n  -webkit-font-smoothing: antialiased;\n  cursor: pointer;\n  content: \" \";\n  color: #1f419a;\n  letter-spacing: 0;\n  text-align: center;\n  right: 0;\n  width: 44px;\n  background: transparent url(../../../omega_samhsa_main/src/images/close.png) 16px 12px no-repeat;\n  height: 50px; }\n\n.dl-menuwrapper li.dl-back:after,\n.dl-menuwrapper li > a:not(:only-child):after {\n  position: absolute;\n  top: 0;\n  line-height: 50px;\n  font-family: 'arial';\n  speak: none;\n  -webkit-font-smoothing: antialiased;\n  /* content: \"\\e000\"; */ }\n\n.dl-menuwrapper li.menu-item--expanded > span.expand:after {\n  position: absolute;\n  top: 0;\n  line-height: 50px;\n  speak: none;\n  -webkit-font-smoothing: antialiased;\n  cursor: pointer;\n  content: \" \";\n  text-rendering: auto;\n  font-size: 18px;\n  color: #1F419A;\n  letter-spacing: 0;\n  font-weight: 200;\n  text-align: center;\n  right: 0;\n  width: 44px;\n  height: 50px;\n  background: transparent url(../../../omega_samhsa_main/src/images/right-arrow.png) 16px 12px no-repeat; }\n\n.dl-menuwrapper li.dl-back:after {\n  left: 10px;\n  color: rgba(212, 204, 198, 0.3);\n  -webkit-transform: rotate(180deg);\n  transform: rotate(180deg); }\n\n.dl-menuwrapper li .dl-close-link {\n  display: inline-block;\n  float: right; }\n\n.dl-menuwrapper li .dl-close-link {\n  padding-right: 30px;\n  background: unset; }\n\n.dl-menuwrapper li > a:after {\n  right: 10px;\n  color: rgba(0, 0, 0, 0.15); }\n\n.dl-menuwrapper .dl-menu {\n  margin: 0 0 0 0;\n  position: relative;\n  width: 100%;\n  opacity: 0;\n  pointer-events: none;\n  -webkit-transform: translateY(10px);\n  transform: translateY(10px);\n  -webkit-backface-visibility: hidden;\n  backface-visibility: hidden;\n  padding: 0 15px;\n  left: -100%; }\n\n.dl-menuwrapper .dl-menu--1.dl-menu.dl-subview {\n  margin: -15px 0 0 0; }\n\n.dl-menuwrapper .dl-menu.dl-menu-toggle {\n  transition: all 0.3s ease; }\n\n.dl-menuwrapper .dl-menu.dl-menuopen {\n  opacity: 1;\n  pointer-events: auto;\n  -webkit-transform: translateY(0px);\n  transform: translateY(0px);\n  left: 0px;\n  transition: 0.5s;\n  top: -70px; }\n\n/* Hide the inner submenus */\n.dl-menuwrapper li .dl-submenu {\n  display: none; }\n\n/*\nWhen a submenu is openend, we will hide all li siblings.\nFor that we give a class to the parent menu called \"dl-subview\".\nWe also hide the submenu link.\nThe opened submenu will get the class \"dl-subviewopen\".\nAll this is done for any sub-level being entered.\n*/\n.dl-menu.dl-subview li,\n.dl-menu.dl-subview li.dl-subviewopen > a,\n.dl-menu.dl-subview li.dl-subview > a {\n  display: none; }\n\n.dl-menu.dl-subview li.dl-subview,\n.dl-menu.dl-subview li.dl-subview .dl-submenu,\n.dl-menu.dl-subview li.dl-subviewopen,\n.dl-menu.dl-subview li.dl-subviewopen > .dl-submenu,\n.dl-menu.dl-subview li.dl-subviewopen > .dl-submenu > li {\n  display: block; }\n\n/* Dynamically added submenu outside of the menu context */\n.dl-menuwrapper > .dl-submenu {\n  position: absolute;\n  width: 100%;\n  top: 50px;\n  left: 0;\n  margin: 0; }\n\n/* Animation classes for moving out and in */\n.dl-menu.dl-animate-out-1 {\n  -webkit-animation: MenuAnimOut1 0.4s;\n  animation: MenuAnimOut1 0.4s; }\n\n.dl-menu.dl-animate-out-2 {\n  -webkit-animation: MenuAnimOut2 0.3s ease-in-out;\n  animation: MenuAnimOut2 0.3s ease-in-out; }\n\n.dl-menu.dl-animate-out-3 {\n  -webkit-animation: MenuAnimOut3 0.4s ease;\n  animation: MenuAnimOut3 0.4s ease; }\n\n.dl-menu.dl-animate-out-4 {\n  -webkit-animation: MenuAnimOut4 0.4s ease;\n  animation: MenuAnimOut4 0.4s ease; }\n\n.dl-menu.dl-animate-out-5 {\n  -webkit-animation: MenuAnimOut5 0.4s ease;\n  animation: MenuAnimOut5 0.4s ease; }\n\n@-webkit-keyframes MenuAnimOut1 {\n  0% { }\n  50% {\n    -webkit-transform: translateZ(-250px) rotateY(30deg); }\n  75% {\n    -webkit-transform: translateZ(-372.5px) rotateY(15deg);\n    opacity: .5; }\n  100% {\n    -webkit-transform: translateZ(-500px) rotateY(0deg);\n    opacity: 0; } }\n\n@-webkit-keyframes MenuAnimOut2 {\n  0% { }\n  100% {\n    -webkit-transform: translateX(-100%);\n    opacity: 0; } }\n\n@-webkit-keyframes MenuAnimOut3 {\n  0% { }\n  100% {\n    -webkit-transform: translateZ(300px);\n    opacity: 0; } }\n\n@-webkit-keyframes MenuAnimOut4 {\n  0% { }\n  100% {\n    -webkit-transform: translateZ(-300px);\n    opacity: 0; } }\n\n@-webkit-keyframes MenuAnimOut5 {\n  0% { }\n  100% {\n    -webkit-transform: translateY(40%);\n    opacity: 0; } }\n\n@keyframes MenuAnimOut1 {\n  0% { }\n  50% {\n    -webkit-transform: translateZ(-250px) rotateY(30deg);\n    transform: translateZ(-250px) rotateY(30deg); }\n  75% {\n    -webkit-transform: translateZ(-372.5px) rotateY(15deg);\n    transform: translateZ(-372.5px) rotateY(15deg);\n    opacity: .5; }\n  100% {\n    -webkit-transform: translateZ(-500px) rotateY(0deg);\n    transform: translateZ(-500px) rotateY(0deg);\n    opacity: 0; } }\n\n@keyframes MenuAnimOut2 {\n  0% { }\n  100% {\n    -webkit-transform: translateX(-100%);\n    transform: translateX(-100%);\n    opacity: 0; } }\n\n@keyframes MenuAnimOut3 {\n  0% { }\n  100% {\n    -webkit-transform: translateZ(300px);\n    transform: translateZ(300px);\n    opacity: 0; } }\n\n@keyframes MenuAnimOut4 {\n  0% { }\n  100% {\n    -webkit-transform: translateZ(-300px);\n    transform: translateZ(-300px);\n    opacity: 0; } }\n\n@keyframes MenuAnimOut5 {\n  0% { }\n  100% {\n    -webkit-transform: translateY(40%);\n    transform: translateY(40%);\n    opacity: 0; } }\n\n.dl-menu.dl-animate-in-1 {\n  -webkit-animation: MenuAnimIn1 0.3s;\n  animation: MenuAnimIn1 0.3s; }\n\n.dl-menu.dl-animate-in-2 {\n  -webkit-animation: MenuAnimIn2 0.3s ease-in-out;\n  animation: MenuAnimIn2 0.3s ease-in-out; }\n\n.dl-menu.dl-animate-in-3 {\n  -webkit-animation: MenuAnimIn3 0.4s ease;\n  animation: MenuAnimIn3 0.4s ease; }\n\n.dl-menu.dl-animate-in-4 {\n  -webkit-animation: MenuAnimIn4 0.4s ease;\n  animation: MenuAnimIn4 0.4s ease; }\n\n.dl-menu.dl-animate-in-5 {\n  -webkit-animation: MenuAnimIn5 0.4s ease;\n  animation: MenuAnimIn5 0.4s ease; }\n\n@-webkit-keyframes MenuAnimIn1 {\n  0% {\n    -webkit-transform: translateZ(-500px) rotateY(0deg);\n    opacity: 0; }\n  20% {\n    -webkit-transform: translateZ(-250px) rotateY(30deg);\n    opacity: 0.5; }\n  100% {\n    -webkit-transform: translateZ(0px) rotateY(0deg);\n    opacity: 1; } }\n\n@-webkit-keyframes MenuAnimIn2 {\n  0% {\n    -webkit-transform: translateX(-100%);\n    opacity: 0; }\n  100% {\n    -webkit-transform: translateX(0px);\n    opacity: 1; } }\n\n@-webkit-keyframes MenuAnimIn3 {\n  0% {\n    -webkit-transform: translateZ(300px);\n    opacity: 0; }\n  100% {\n    -webkit-transform: translateZ(0px);\n    opacity: 1; } }\n\n@-webkit-keyframes MenuAnimIn4 {\n  0% {\n    -webkit-transform: translateZ(-300px);\n    opacity: 0; }\n  100% {\n    -webkit-transform: translateZ(0px);\n    opacity: 1; } }\n\n@-webkit-keyframes MenuAnimIn5 {\n  0% {\n    -webkit-transform: translateY(40%);\n    opacity: 0; }\n  100% {\n    -webkit-transform: translateY(0);\n    opacity: 1; } }\n\n@keyframes MenuAnimIn1 {\n  0% {\n    -webkit-transform: translateZ(-500px) rotateY(0deg);\n    transform: translateZ(-500px) rotateY(0deg);\n    opacity: 0; }\n  20% {\n    -webkit-transform: translateZ(-250px) rotateY(30deg);\n    transform: translateZ(-250px) rotateY(30deg);\n    opacity: 0.5; }\n  100% {\n    -webkit-transform: translateZ(0px) rotateY(0deg);\n    transform: translateZ(0px) rotateY(0deg);\n    opacity: 1; } }\n\n@keyframes MenuAnimIn2 {\n  0% {\n    -webkit-transform: translateX(-100%);\n    transform: translateX(-100%);\n    opacity: 0; }\n  100% {\n    -webkit-transform: translateX(0px);\n    transform: translateX(0px);\n    opacity: 1; } }\n\n@keyframes MenuAnimIn3 {\n  0% {\n    -webkit-transform: translateZ(300px);\n    transform: translateZ(300px);\n    opacity: 0; }\n  100% {\n    -webkit-transform: translateZ(0px);\n    transform: translateZ(0px);\n    opacity: 1; } }\n\n@keyframes MenuAnimIn4 {\n  0% {\n    -webkit-transform: translateZ(-300px);\n    transform: translateZ(-300px);\n    opacity: 0; }\n  100% {\n    -webkit-transform: translateZ(0px);\n    transform: translateZ(0px);\n    opacity: 1; } }\n\n@keyframes MenuAnimIn5 {\n  0% {\n    -webkit-transform: translateY(40%);\n    transform: translateY(40%);\n    opacity: 0; }\n  100% {\n    -webkit-transform: translateY(0);\n    transform: translateY(0);\n    opacity: 1; } }\n\n.dl-menuwrapper > .dl-submenu.dl-animate-in-1 {\n  -webkit-animation: SubMenuAnimIn1 0.4s ease;\n  animation: SubMenuAnimIn1 0.4s ease; }\n\n.dl-menuwrapper > .dl-submenu.dl-animate-in-2 {\n  -webkit-animation: SubMenuAnimIn2 0.3s ease-in-out;\n  animation: SubMenuAnimIn2 0.3s ease-in-out; }\n\n.dl-menuwrapper > .dl-submenu.dl-animate-in-3 {\n  -webkit-animation: SubMenuAnimIn3 0.4s ease;\n  animation: SubMenuAnimIn3 0.4s ease; }\n\n.dl-menuwrapper > .dl-submenu.dl-animate-in-4 {\n  -webkit-animation: SubMenuAnimIn4 0.4s ease;\n  animation: SubMenuAnimIn4 0.4s ease; }\n\n.dl-menuwrapper > .dl-submenu.dl-animate-in-5 {\n  -webkit-animation: SubMenuAnimIn5 0.4s ease;\n  animation: SubMenuAnimIn5 0.4s ease; }\n\n@-webkit-keyframes SubMenuAnimIn1 {\n  0% {\n    -webkit-transform: translateX(50%);\n    opacity: 0; }\n  100% {\n    -webkit-transform: translateX(0px);\n    opacity: 1; } }\n\n@-webkit-keyframes SubMenuAnimIn2 {\n  0% {\n    -webkit-transform: translateX(100%);\n    opacity: 0; }\n  100% {\n    -webkit-transform: translateX(0px);\n    opacity: 1; } }\n\n@-webkit-keyframes SubMenuAnimIn3 {\n  0% {\n    -webkit-transform: translateZ(-300px);\n    opacity: 0; }\n  100% {\n    -webkit-transform: translateZ(0px);\n    opacity: 1; } }\n\n@-webkit-keyframes SubMenuAnimIn4 {\n  0% {\n    -webkit-transform: translateZ(300px);\n    opacity: 0; }\n  100% {\n    -webkit-transform: translateZ(0px);\n    opacity: 1; } }\n\n@-webkit-keyframes SubMenuAnimIn5 {\n  0% {\n    -webkit-transform: translateZ(-200px);\n    opacity: 0; }\n  100% {\n    -webkit-transform: translateZ(0);\n    opacity: 1; } }\n\n@keyframes SubMenuAnimIn1 {\n  0% {\n    -webkit-transform: translateX(50%);\n    transform: translateX(50%);\n    opacity: 0; }\n  100% {\n    -webkit-transform: translateX(0px);\n    transform: translateX(0px);\n    opacity: 1; } }\n\n@keyframes SubMenuAnimIn2 {\n  0% {\n    -webkit-transform: translateX(100%);\n    transform: translateX(100%);\n    opacity: 0; }\n  100% {\n    -webkit-transform: translateX(0px);\n    transform: translateX(0px);\n    opacity: 1; } }\n\n@keyframes SubMenuAnimIn3 {\n  0% {\n    -webkit-transform: translateZ(-300px);\n    transform: translateZ(-300px);\n    opacity: 0; }\n  100% {\n    -webkit-transform: translateZ(0px);\n    transform: translateZ(0px);\n    opacity: 1; } }\n\n@keyframes SubMenuAnimIn4 {\n  0% {\n    -webkit-transform: translateZ(300px);\n    transform: translateZ(300px);\n    opacity: 0; }\n  100% {\n    -webkit-transform: translateZ(0px);\n    transform: translateZ(0px);\n    opacity: 1; } }\n\n@keyframes SubMenuAnimIn5 {\n  0% {\n    -webkit-transform: translateZ(-200px);\n    transform: translateZ(-200px);\n    opacity: 0; }\n  100% {\n    -webkit-transform: translateZ(0);\n    transform: translateZ(0);\n    opacity: 1; } }\n\n.dl-menuwrapper > .dl-submenu.dl-animate-out-1 {\n  -webkit-animation: SubMenuAnimOut1 0.4s ease;\n  animation: SubMenuAnimOut1 0.4s ease; }\n\n.dl-menuwrapper > .dl-submenu.dl-animate-out-2 {\n  -webkit-animation: SubMenuAnimOut2 0.3s ease-in-out;\n  animation: SubMenuAnimOut2 0.3s ease-in-out; }\n\n.dl-menuwrapper > .dl-submenu.dl-animate-out-3 {\n  -webkit-animation: SubMenuAnimOut3 0.4s ease;\n  animation: SubMenuAnimOut3 0.4s ease; }\n\n.dl-menuwrapper > .dl-submenu.dl-animate-out-4 {\n  -webkit-animation: SubMenuAnimOut4 0.4s ease;\n  animation: SubMenuAnimOut4 0.4s ease; }\n\n.dl-menuwrapper > .dl-submenu.dl-animate-out-5 {\n  -webkit-animation: SubMenuAnimOut5 0.4s ease;\n  animation: SubMenuAnimOut5 0.4s ease; }\n\n@-webkit-keyframes SubMenuAnimOut1 {\n  0% {\n    -webkit-transform: translateX(0%);\n    opacity: 1; }\n  100% {\n    -webkit-transform: translateX(50%);\n    opacity: 0; } }\n\n@-webkit-keyframes SubMenuAnimOut2 {\n  0% {\n    -webkit-transform: translateX(0%);\n    opacity: 1; }\n  100% {\n    -webkit-transform: translateX(100%);\n    opacity: 0; } }\n\n@-webkit-keyframes SubMenuAnimOut3 {\n  0% {\n    -webkit-transform: translateZ(0px);\n    opacity: 1; }\n  100% {\n    -webkit-transform: translateZ(-300px);\n    opacity: 0; } }\n\n@-webkit-keyframes SubMenuAnimOut4 {\n  0% {\n    -webkit-transform: translateZ(0px);\n    opacity: 1; }\n  100% {\n    -webkit-transform: translateZ(300px);\n    opacity: 0; } }\n\n@-webkit-keyframes SubMenuAnimOut5 {\n  0% {\n    -webkit-transform: translateZ(0);\n    opacity: 1; }\n  100% {\n    -webkit-transform: translateZ(-200px);\n    opacity: 0; } }\n\n@keyframes SubMenuAnimOut1 {\n  0% {\n    -webkit-transform: translateX(0%);\n    transform: translateX(0%);\n    opacity: 1; }\n  100% {\n    -webkit-transform: translateX(50%);\n    transform: translateX(50%);\n    opacity: 0; } }\n\n@keyframes SubMenuAnimOut2 {\n  0% {\n    -webkit-transform: translateX(0%);\n    transform: translateX(0%);\n    opacity: 1; }\n  100% {\n    -webkit-transform: translateX(100%);\n    transform: translateX(100%);\n    opacity: 0; } }\n\n@keyframes SubMenuAnimOut3 {\n  0% {\n    -webkit-transform: translateZ(0px);\n    transform: translateZ(0px);\n    opacity: 1; }\n  100% {\n    -webkit-transform: translateZ(-300px);\n    transform: translateZ(-300px);\n    opacity: 0; } }\n\n@keyframes SubMenuAnimOut4 {\n  0% {\n    -webkit-transform: translateZ(0px);\n    transform: translateZ(0px);\n    opacity: 1; }\n  100% {\n    -webkit-transform: translateZ(300px);\n    transform: translateZ(300px);\n    opacity: 0; } }\n\n@keyframes SubMenuAnimOut5 {\n  0% {\n    -webkit-transform: translateZ(0);\n    transform: translateZ(0);\n    opacity: 1; }\n  100% {\n    -webkit-transform: translateZ(-200px);\n    transform: translateZ(-200px);\n    opacity: 0; } }\n\n/* No JS Fallback */\n.no-js .dl-menuwrapper .dl-menu {\n  position: relative;\n  opacity: 1;\n  -webkit-transform: none;\n  transform: none; }\n\n.no-js .dl-menuwrapper li .dl-submenu {\n  display: block; }\n\n.no-js .dl-menuwrapper li.dl-back {\n  display: none; }\n\n.no-js .dl-menuwrapper li > a:not(:only-child) {\n  background: rgba(0, 0, 0, 0.1); }\n\n.no-js .dl-menuwrapper li > a:not(:only-child):after {\n  content: ''; }\n\n.dl-menuwrapper span.nolink {\n  color: #1E384B;\n  /* padding: 0.75em 0; */\n  padding: 15px 0;\n  display: block;\n  position: relative; }\n\n.dl-menuwrapper span.nolink div span {\n  font-weight: bold;\n  display: block;\n  margin-bottom: 10px; }\n\n.dl-menu li.first ul.dl-menu--2 li.leaf a {\n  display: block;\n  padding-left: 35px;\n  background-image: url(../../../omega_samhsa_main/src/images/locatorsm.png);\n  background-position: 14px 16px;\n  background-repeat: no-repeat; }\n\n.dl-menu li.first ul.dl-menu--2 li.last.leaf a {\n  background: none; }\n\n.dl-menu li .about-leadership div span {\n  padding-left: 130px;\n  background-image: url(\"../../../omega_samhsa_main/src/images/leadership.png\");\n  background-position: 0px 0px;\n  background-repeat: no-repeat;\n  height: 120px;\n  display: block; }\n\n/* Colors for demos */\n/* Demo 1 */\n.demo-1 .dl-menuwrapper button {\n  background: #c62860;\n  cursor: pointer; }\n\n.demo-1 .dl-menuwrapper button:hover,\n.demo-1 .dl-menuwrapper button.dl-active,\n.demo-1 .dl-menuwrapper ul {\n  background: #9e1847; }\n\n/* Demo 2 */\n.demo-2 .dl-menuwrapper button {\n  background: #e86814; }\n\n.demo-2 .dl-menuwrapper button:hover,\n.demo-2 .dl-menuwrapper button.dl-active,\n.demo-2 .dl-menuwrapper ul {\n  background: #D35400; }\n\n/* Demo 3 */\n.demo-3 .dl-menuwrapper button {\n  background: #08cbc4; }\n\n.demo-3 .dl-menuwrapper button:hover,\n.demo-3 .dl-menuwrapper button.dl-active,\n.demo-3 .dl-menuwrapper ul {\n  background: #00b4ae; }\n\n/* Demo 4 */\n.demo-4 .dl-menuwrapper button {\n  background: #90b912; }\n\n.demo-4 .dl-menuwrapper button:hover,\n.demo-4 .dl-menuwrapper button.dl-active,\n.demo-4 .dl-menuwrapper ul {\n  background: #79a002; }\n\n/* Demo 5 */\n.demo-5 .dl-menuwrapper button {\n  background: #744783; }\n\n.demo-5 .dl-menuwrapper button:hover,\n.demo-5 .dl-menuwrapper button.dl-active,\n.demo-5 .dl-menuwrapper ul {\n  background: #643771; }\n\n@media (min-width: 1000px) {\n  .block--menu-menu-samhsa-menu, .block--system-main-menu {\n    display: none; } }\n\n.block-superfish-main-menu {\n  display: none; }\n  @media (min-width: 1000px) {\n    .block-superfish-main-menu {\n      display: block; }\n      .block-superfish-main-menu ul#superfish-1.sf-style-none {\n        margin-top: 20px; } }\n  .block-superfish-main-menu h2.block__title {\n    display: none; }\n\n#block-superfish-2 {\n  display: block; }\n  @media (min-width: 1000px) {\n    #block-superfish-2 {\n      display: none; } }\n\n@media (min-width: 1000px) {\n  .mobile-only {\n    display: none; } }\n\n.overlay-container {\n  display: none;\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  overflow-y: auto;\n  transition: 0.5s;\n  z-index: 499;\n  background: #000000;\n  opacity: 0.7; }\n\n.header-social,\n.search-form-wrapper,\n.user-menu,\n.hhs-ribbon {\n  display: none !important; }\n\n.search-form-wrapper.open {\n  display: block !important;\n  width: 100%;\n  overflow: hidden;\n  border-top-color: black;\n  padding: 14px;\n  background-color: #eee; }\n  .search-form-wrapper.open form {\n    margin: 0; }\n\n@media (min-width: 1000px) {\n  .site-search .search-form-wrapper,\n  .user-menu, .hhs-ribbon {\n    display: block !important; }\n  .header-social,\n  .site-search {\n    display: block !important;\n    width: 58.33333%;\n    float: right;\n    margin-left: 0;\n    margin-right: 0;\n    clear: none;\n    padding-right: 0;\n    margin-right: 0 !important;\n    padding-right: 0 !important; } }\n\n.site-branding {\n  margin: 0;\n  max-width: 100%;\n  padding: 10px 0;\n  width: 100%;\n  text-align: center; }\n  .site-branding .samhsa-logo {\n    fill: #fff;\n    width: 118px;\n    height: 50px; }\n  @media (min-width: 1000px) {\n    .site-branding {\n      margin: 0;\n      max-width: 190px !important;\n      padding: 10px 0 10px;\n      text-align: left; }\n      .site-branding .samhsa-logo {\n        fill: #1E384B;\n        width: 250px;\n        height: 85px; } }\n\n.site-search {\n  position: absolute;\n  bottom: 0;\n  right: 5px;\n  width: unset;\n  float: none; }\n  @media (min-width: 1000px) {\n    .site-search .site-search {\n      position: relative;\n      bottom: auto;\n      right: auto; }\n    .site-search #top-search-glass-icon {\n      display: block;\n      position: absolute;\n      right: 0;\n      top: 0;\n      text-align: center; }\n      .site-search #top-search-glass-icon a {\n        display: inline-block;\n        width: 70px;\n        height: 70px; }\n      .site-search #top-search-glass-icon #search-toggle {\n        display: none !important; } }\n  .site-search #search-toggle {\n    display: block !important;\n    width: 70px;\n    height: 70px; }\n\n@media (min-width: 1000px) {\n  .site-search {\n    width: 50%;\n    float: left;\n    margin-right: -100%;\n    clear: none;\n    padding-right: 14px;\n    float: right;\n    width: 57%; }\n  .header-social {\n    width: 50%;\n    float: right;\n    margin-left: 0;\n    margin-right: 0;\n    clear: none;\n    padding-right: 0; } }\n\n.block-mobile-hamburger-block .menu-toggle,\n.block-mobile-hamburger-block .menu-toggle.open {\n  display: block;\n  text-decoration: none !important;\n  font-size: 1.1rem;\n  font-weight: bold;\n  text-transform: uppercase;\n  text-align: center;\n  line-height: 4.5;\n  padding: 2px 7px;\n  transition: none;\n  width: 65px;\n  height: 65px; }\n  .block-mobile-hamburger-block .menu-toggle .menu-icon,\n  .block-mobile-hamburger-block .menu-toggle .menu-icon:before,\n  .block-mobile-hamburger-block .menu-toggle .menu-icon:after,\n  .block-mobile-hamburger-block .menu-toggle.open .menu-icon,\n  .block-mobile-hamburger-block .menu-toggle.open .menu-icon:before,\n  .block-mobile-hamburger-block .menu-toggle.open .menu-icon:after {\n    width: 30px;\n    height: 4px;\n    border-radius: 1px;\n    display: block; }\n  .block-mobile-hamburger-block .menu-toggle .menu-icon,\n  .block-mobile-hamburger-block .menu-toggle.open .menu-icon {\n    position: relative;\n    overflow: visible;\n    margin: 10px auto;\n    top: 18px; }\n    .block-mobile-hamburger-block .menu-toggle .menu-icon:before, .block-mobile-hamburger-block .menu-toggle .menu-icon:after,\n    .block-mobile-hamburger-block .menu-toggle.open .menu-icon:before,\n    .block-mobile-hamburger-block .menu-toggle.open .menu-icon:after {\n      content: '';\n      overflow: hidden;\n      position: absolute;\n      left: 0; }\n    .block-mobile-hamburger-block .menu-toggle .menu-icon:before,\n    .block-mobile-hamburger-block .menu-toggle.open .menu-icon:before {\n      top: -7px; }\n    .block-mobile-hamburger-block .menu-toggle .menu-icon:after,\n    .block-mobile-hamburger-block .menu-toggle.open .menu-icon:after {\n      bottom: -7px; }\n\n.block-mobile-hamburger-block {\n  position: absolute;\n  bottom: 0;\n  left: 0; }\n  @media (min-width: 624px) {\n    .block-mobile-hamburger-block {\n      display: none; } }\n\n.block-mobile-hamburger-block .menu-toggle.open {\n  background-color: #1A6986; }\n\n.main-menu {\n  overflow: visible;\n  position: relative;\n  z-index: 30;\n  display: none; }\n  .main-menu.open {\n    display: block; }\n  @media (min-width: 624px) {\n    .main-menu {\n      display: block; } }\n  .main-menu .menu {\n    display: block;\n    margin: 0;\n    padding: 0;\n    background-color: #1E384B; }\n    .main-menu .menu > li,\n    .main-menu .menu > li > a {\n      display: inline-block; }\n    .main-menu .menu > li {\n      margin: 0;\n      padding: 0; }\n  .main-menu.collapsible > .menu > li > a {\n    text-decoration: none;\n    position: relative;\n    padding: 0.35em 0.75em 0.35em 0.75em;\n    font-size: 1.6rem; }\n    .main-menu.collapsible > .menu > li > a:after {\n      display: inline-block;\n      width: 0;\n      height: 0;\n      overflow: hidden;\n      content: '';\n      z-index: 2;\n      border-left: 7.5px solid #FFFFFF;\n      border-bottom: 5px solid transparent;\n      border-top: 5px solid transparent;\n      position: absolute;\n      top: 50%;\n      right: 15px;\n      margin: -5px 0 0 0; }\n  .main-menu.collapsible .mega-menu-wrapper {\n    display: none !important; }\n  .main-menu .menu-item.open .mega-menu-wrapper {\n    display: block;\n    opacity: 1; }\n  .main-menu > .menu {\n    overflow: visible;\n    font-size: 1.4rem; }\n    .main-menu > .menu:after {\n      clear: both;\n      content: \"\";\n      display: table; }\n    .main-menu > .menu > li {\n      display: block;\n      border-bottom: 4px solid #1E384B;\n      border-top: 1px solid #FFFFFF; }\n      .main-menu > .menu > li:hover {\n        border-bottom: 4px solid #CD3835; }\n        .main-menu > .menu > li:hover + li {\n          border-top: 1px solid #1E384B; }\n      .main-menu > .menu > li > a {\n        display: block;\n        line-height: 1.4;\n        text-decoration: none; }\n    .main-menu > .menu > li.is-active {\n      border-bottom: 4px solid #CD3835; }\n    @media (min-width: 624px) {\n      .main-menu > .menu {\n        font-size: 1.4rem; }\n        .main-menu > .menu > li {\n          float: left;\n          border-top: none; }\n          .main-menu > .menu > li:hover + li {\n            border-top: none; }\n          .main-menu > .menu > li > a {\n            padding: 0.25em 0;\n            text-align: center; } }\n    @media (min-width: 768px) {\n      .main-menu > .menu li > a {\n        padding: 0.5em 0; } }\n    @media (min-width: 864px) {\n      .main-menu > .menu {\n        font-size: 1.6rem; } }\n  .main-menu .mega-menu-item {\n    font-size: 1.4rem; }\n  @media (min-width: 624px) {\n    .main-menu > .menu > li:nth-child(1) {\n      width: 13%; }\n    .main-menu > .menu > li:nth-child(2) {\n      width: 13%; }\n    .main-menu > .menu > li:nth-child(3) {\n      width: 12%; }\n    .main-menu > .menu > li:nth-child(4) {\n      width: 8%; }\n    .main-menu > .menu > li:nth-child(5) {\n      width: 8%; }\n    .main-menu > .menu > li:nth-child(6) {\n      width: 11%; }\n    .main-menu > .menu > li:nth-child(7) {\n      width: 12%; }\n    .main-menu > .menu > li:nth-child(8) {\n      width: 11%; }\n    .main-menu > .menu > li:nth-child(9) {\n      width: 12%; } }\n  @media (min-width: 768px) {\n    .main-menu > .menu > li:nth-child(1) {\n      width: 15%; }\n    .main-menu > .menu > li:nth-child(2) {\n      width: 17%; }\n    .main-menu > .menu > li:nth-child(3) {\n      width: 16%; }\n    .main-menu > .menu > li:nth-child(4) {\n      width: 7%; }\n    .main-menu > .menu > li:nth-child(5) {\n      width: 6%; }\n    .main-menu > .menu > li:nth-child(6) {\n      width: 9%; }\n    .main-menu > .menu > li:nth-child(7) {\n      width: 10%; }\n    .main-menu > .menu > li:nth-child(8) {\n      width: 9%; }\n    .main-menu > .menu > li:nth-child(9) {\n      width: 11%; } }\n\n.block-mobile-hamburger-block .menu-toggle {\n  color: #FFFFFF !important; }\n  .block-mobile-hamburger-block .menu-toggle .menu-icon,\n  .block-mobile-hamburger-block .menu-toggle .menu-icon:before,\n  .block-mobile-hamburger-block .menu-toggle .menu-icon:after {\n    background-color: #FFFFFF; }\n\n.block-mobile-hamburger-block .menu-toggle:hover,\n.block-mobile-hamburger-block .menu-toggle.animating,\n.block-mobile-hamburger-block .menu-toggle.open {\n  color: #FFFFFF !important;\n  background-color: #1A6986; }\n  .block-mobile-hamburger-block .menu-toggle:hover .menu-icon,\n  .block-mobile-hamburger-block .menu-toggle:hover .menu-icon:before,\n  .block-mobile-hamburger-block .menu-toggle:hover .menu-icon:after,\n  .block-mobile-hamburger-block .menu-toggle.animating .menu-icon,\n  .block-mobile-hamburger-block .menu-toggle.animating .menu-icon:before,\n  .block-mobile-hamburger-block .menu-toggle.animating .menu-icon:after,\n  .block-mobile-hamburger-block .menu-toggle.open .menu-icon,\n  .block-mobile-hamburger-block .menu-toggle.open .menu-icon:before,\n  .block-mobile-hamburger-block .menu-toggle.open .menu-icon:after {\n    background-color: #FFFFFF; }\n\n.main-menu .menu-item,\n.main-menu .menu-item.open {\n  background-color: transparent; }\n  .main-menu .menu-item:hover, .main-menu .menu-item:active, .main-menu .menu-item:focus,\n  .main-menu .menu-item.open:hover,\n  .main-menu .menu-item.open:active,\n  .main-menu .menu-item.open:focus {\n    background-color: transparent; }\n\n.mega-menu-item {\n  display: block;\n  width: 100%;\n  line-height: 1.3; }\n  @media (min-width: 1000px) {\n    .mega-menu-item {\n      height: auto; } }\n  .mega-menu-item a.heading-link {\n    text-decoration: none; }\n    .mega-menu-item a.heading-link:hover {\n      text-decoration: underline; }\n\n.menu--simple-mega-menu > .menu-item--expanded > .mega-menu-wrapper {\n  background: #EEEEEE;\n  border: 1px solid #CDCDCD; }\n  .menu--simple-mega-menu > .menu-item--expanded > .mega-menu-wrapper .field--type-link {\n    margin: 0 10px 10px 0;\n    float: right;\n    margin-bottom: 10px; }\n  .menu--simple-mega-menu > .menu-item--expanded > .mega-menu-wrapper .col-3 {\n    width: 32%;\n    float: left;\n    margin-right: 2%; }\n    .menu--simple-mega-menu > .menu-item--expanded > .mega-menu-wrapper .col-3:nth-child(3) {\n      margin-right: 0; }\n  .menu--simple-mega-menu > .menu-item--expanded > .mega-menu-wrapper .col-4 {\n    width: 23.8%;\n    float: left;\n    margin-right: 1.2%; }\n    .menu--simple-mega-menu > .menu-item--expanded > .mega-menu-wrapper .col-4.about-1, .menu--simple-mega-menu > .menu-item--expanded > .mega-menu-wrapper .col-4.about-2 {\n      border-right: 1px solid #ccc;\n      height: 240px; }\n  .menu--simple-mega-menu > .menu-item--expanded > .mega-menu-wrapper img.align-left {\n    margin: 5px 10px 0 0; }\n\n.simple-mega-menu h2 {\n  margin: 5px 0;\n  font-size: 1.5rem; }\n  .simple-mega-menu h2 a {\n    color: #1E384B;\n    text-decoration: none; }\n    .simple-mega-menu h2 a:hover {\n      color: #A82D2B;\n      text-decoration: underline; }\n\n.simple-mega-menu h3 {\n  font-size: 14px;\n  margin: 0.75em 0;\n  color: #000000; }\n\n.simple-mega-menu ul {\n  margin-bottom: 10px; }\n  .simple-mega-menu ul li {\n    padding: 0.5em; }\n    .simple-mega-menu ul li ul {\n      margin-top: 10px;\n      margin-bottom: 0; }\n      .simple-mega-menu ul li ul li {\n        font-size: 14px;\n        padding: 0.25em 1em;\n        /*&:before {\n              content: \"\\0BB \\020\";\n            }*/ }\n    .simple-mega-menu ul li a {\n      color: #1F419A;\n      text-decoration: none; }\n      .simple-mega-menu ul li a:hover {\n        color: #1E384B;\n        text-decoration: underline; }\n\n.menu ul.locator li {\n  margin: 0 0 0.5em;\n  padding: 0 0 0 24px;\n  display: block; }\n\n.data_menu {\n  width: 100%;\n  margin-bottom: 15px;\n  margin-left: 5px; }\n  .data_menu ul {\n    padding: 0;\n    margin: 0; }\n    .data_menu ul li {\n      list-style: none;\n      padding: 5px 0; }\n      .data_menu ul li a {\n        text-decoration: none; }\n    .data_menu ul .newlevel.level-1 {\n      margin: 12px 0; }\n    .data_menu ul .level-1 {\n      position: absolute;\n      top: 0;\n      left: 250px; }\n  .data_menu .newlevel li:hover > ul {\n    display: block; }\n  .data_menu .level-0 ul {\n    display: none; }\n\n@media (min-width: 624px) and (max-width: 640px) {\n  .main-menu.collapsible > .menu > li > a {\n    font-size: 1.4rem; }\n    .main-menu.collapsible > .menu > li > a:after {\n      border-left: none;\n      border-bottom: none;\n      border-top: none; } }\n\n.display-block {\n  display: block; }\n\n.display-inline-block {\n  display: inline-block; }\n\nul.double-caret li {\n  margin: 0 0 .5em;\n  padding: 0 0 0 1em;\n  position: relative;\n  display: block; }\n  ul.double-caret li:before {\n    content: \"\\0BB \\020\";\n    position: absolute;\n    left: 0; }\n\n.region--content .pager ul {\n  text-align: center; }\n\n.img-left, .media-block img {\n  float: left;\n  padding: 0px 10px 10px 0px; }\n\n.img-right {\n  float: right;\n  padding: 0px 0px 10px 10px; }\n\n.heading-link {\n  font-weight: bold;\n  text-decoration: none;\n  color: #A82D2B; }\n  .heading-link:hover {\n    text-decoration: underline; }\n  .heading-link:visited {\n    color: #A82D2B; }\n  .heading-link:focus {\n    color: #A82D2B; }\n  .heading-link:hover {\n    color: #A82D2B; }\n  .heading-link:active {\n    color: #A82D2B; }\n\n@font-face {\n  font-family: 'samhsa-icons';\n  src: url(\"../../fonts/icomoon/samhsa-icons/samhsa-icons.eot?xd8hxr\");\n  src: url(\"../../fonts/icomoon/samhsa-icons/samhsa-icons.eot?xd8hxr#iefix\") format(\"embedded-opentype\"), url(\"../../fonts/icomoon/samhsa-icons/samhsa-icons.woff2?xd8hxr\") format(\"woff2\"), url(\"../../fonts/icomoon/samhsa-icons/samhsa-icons.ttf?xd8hxr\") format(\"truetype\"), url(\"../../fonts/icomoon/samhsa-icons/samhsa-icons.woff?xd8hxr\") format(\"woff\"), url(\"../../fonts/icomoon/samhsa-icons/samhsa-icons.svg?xd8hxr#samhsa-icon\") format(\"svg\");\n  font-weight: normal;\n  font-style: normal; }\n\n[class^=\"samhsa-icons-\"], [class*=\" samhsa-icons-\"] {\n  font-family: 'samhsa-icons' !important;\n  speak: none;\n  font-style: normal;\n  font-weight: normal;\n  font-variant: normal;\n  text-transform: none;\n  line-height: 1;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale; }\n\n.samhsa-icons-arrow-up:before {\n  content: \"\\e900\"; }\n\n/*.samhsa-icons-magnify:before {\n  content: \"\\e901\";\n}*/\n.sprite {\n  overflow: hidden;\n  display: inline-block;\n  text-indent: 999em; }\n\n.p-clear, .media-block p {\n  clear: both; }\n\n.side-menu {\n  font-size: 1.4rem;\n  margin-bottom: 14px; }\n  .side-menu h2 {\n    margin: 0;\n    padding: 0.75em;\n    font-size: 1.1em;\n    font-weight: normal;\n    color: #FFFFFF;\n    background-color: #CD3835;\n    font-weight: bold; }\n    .side-menu h2 a {\n      display: block;\n      color: #FFFFFF;\n      font-weight: bold;\n      padding: 0; }\n  .side-menu .menu {\n    display: block;\n    margin: 0;\n    padding: 0;\n    background: #CDCDCD; }\n    .side-menu .menu > li,\n    .side-menu .menu > li > a {\n      display: inline-block; }\n    .side-menu .menu > li {\n      margin: 0;\n      padding: 0; }\n    .side-menu .menu li {\n      display: block; }\n  .side-menu a {\n    text-decoration: none;\n    font-family: Tahoma, Verdana, Segoe, sans-serif;\n    padding: 0.75em;\n    color: #000000;\n    font-weight: normal; }\n    .side-menu a:hover {\n      text-decoration: underline; }\n  .side-menu .menu-item--active-trail > a,\n  .side-menu a.is-active {\n    font-weight: bold; }\n  .side-menu > ul.menu > li {\n    border-top: 1px solid #FFFFFF; }\n    .side-menu > ul.menu > li > ul {\n      padding: 1.125em 0 0.75em;\n      border-top: 1px solid #FFFFFF; }\n      .side-menu > ul.menu > li > ul li.menu-item--active-trail > a {\n        font-weight: bold; }\n      .side-menu > ul.menu > li > ul li {\n        background-color: #EEEEEE;\n        padding-left: 0;\n        margin-bottom: 0; }\n        .side-menu > ul.menu > li > ul li a {\n          padding-top: 0;\n          padding-bottom: 4px; }\n        .side-menu > ul.menu > li > ul li a.is-active {\n          font-weight: bold; }\n        .side-menu > ul.menu > li > ul li ul {\n          padding: 0.375em 0 0 0.375em;\n          background-color: #EEEEEE; }\n          .side-menu > ul.menu > li > ul li ul li {\n            padding-left: 10px; }\n  .side-menu.collapsible {\n    border: 1px solid #CDCDCD; }\n    .side-menu.collapsible h2 {\n      position: relative;\n      padding-right: 50px; }\n    .side-menu.collapsible .menu-toggle {\n      position: absolute;\n      right: 10px;\n      margin: -14px 0 0 0;\n      width: 28px;\n      height: 28px;\n      overflow: hidden;\n      text-align: center;\n      cursor: pointer;\n      text-indent: -999em;\n      background-color: #541615; }\n      .side-menu.collapsible .menu-toggle .menu-icon {\n        display: block;\n        width: 28px;\n        height: 28px;\n        position: relative; }\n        .side-menu.collapsible .menu-toggle .menu-icon:before, .side-menu.collapsible .menu-toggle .menu-icon:after {\n          content: '';\n          display: block;\n          position: absolute;\n          overflow: hidden;\n          top: 50%;\n          left: 50%;\n          background-color: #000;\n          width: 16px;\n          height: 4px;\n          margin: -2px 0 0 -8px; }\n        .side-menu.collapsible .menu-toggle .menu-icon:after {\n          transform: rotate(90deg); }\n        .side-menu.collapsible .menu-toggle .menu-icon:after {\n          opacity: 1;\n          transition: opacity 150ms ease; }\n    .side-menu.collapsible.animating .menu-toggle .menu-icon:after,\n    .side-menu.collapsible.open .menu-toggle .menu-icon:after {\n      opacity: 0; }\n    .side-menu.collapsible.open.animating .menu-toggle .menu-icon:after {\n      opacity: 1; }\n    .side-menu.collapsible > ul.menu {\n      display: none; }\n    .side-menu.collapsible.open .menu {\n      display: block; }\n\n.side-menu.collapsible .menu-toggle .menu-icon:before,\n.side-menu.collapsible .menu-toggle .menu-icon:after {\n  background-color: #FFFFFF; }\n\n.side-menu > ul.menu > li {\n  background-color: #CDCDCD; }\n  .side-menu > ul.menu > li:hover, .side-menu > ul.menu > li:active, .side-menu > ul.menu > li:focus {\n    background-color: #DADADA; }\n\n.side-menu > ul.menu > li > ul {\n  background-color: #EEEEEE; }\n  .side-menu > ul.menu > li > ul a {\n    color: #000000;\n    font-weight: normal; }\n    .side-menu > ul.menu > li > ul a:visited {\n      color: #000000; }\n    .side-menu > ul.menu > li > ul a:focus {\n      color: #000000; }\n    .side-menu > ul.menu > li > ul a:hover {\n      color: #000000; }\n    .side-menu > ul.menu > li > ul a:active {\n      color: #000000; }\n    .side-menu > ul.menu > li > ul a.is-active {\n      color: #000000;\n      background-color: transparent; }\n      .side-menu > ul.menu > li > ul a.is-active:visited {\n        color: #000000; }\n      .side-menu > ul.menu > li > ul a.is-active:focus {\n        color: #000000; }\n      .side-menu > ul.menu > li > ul a.is-active:hover {\n        color: #000000; }\n      .side-menu > ul.menu > li > ul a.is-active:active {\n        color: #000000; }\n\n.side-menu > ul.menu > li.menu-item--expanded > a:after {\n  border-top-color: #FFFFFF; }\n\n.side-menu > ul.menu > li.menu-item--collapsed > a:after {\n  border-left-color: #FFFFFF; }\n\n.side-menu > ul.menu > li > ul li.menu-item--expanded > a:after {\n  border-top-color: #000000; }\n\n.side-menu > ul.menu > li > ul li.menu-item--collapsed > a:after {\n  border-left-color: #000000; }\n\n.sideblock {\n  margin-bottom: 14px;\n  border: 1px solid #000000;\n  border-color: #EEEEEE; }\n  .sideblock .block-title {\n    font-size: 1em;\n    margin: 0;\n    padding: 0.75em 1em;\n    background-color: #EEEEEE;\n    color: #1E384B; }\n    .sideblock .block-title a {\n      color: #1E384B;\n      text-decoration: none; }\n      .sideblock .block-title a:hover, .sideblock .block-title a:active, .sideblock .block-title a:focus {\n        text-decoration: underline; }\n  .sideblock .block-content {\n    padding: 1em; }\n\n.region--sidebar-second a {\n  color: #1F419A;\n  text-decoration: underline; }\n  .region--sidebar-second a:hover, .region--sidebar-second a:active, .region--sidebar-second a:focus {\n    text-decoration: none;\n    color: #A82D2B; }\n\n.region--sidebar-second .rr-banner-block img {\n  width: 100%;\n  margin-bottom: 9px; }\n\n.region--sidebar-second .rr-headerbox-block {\n  margin-bottom: 14px; }\n  .region--sidebar-second .rr-headerbox-block h2 {\n    display: block;\n    font-size: 1.4rem;\n    font-weight: bold;\n    line-height: 1.6;\n    background-color: #EEEEEE;\n    margin: 0;\n    padding: 7px 15px;\n    color: #1E384B;\n    text-decoration: none; }\n  .region--sidebar-second .rr-headerbox-block .field--name-body {\n    padding: 10px 15px;\n    border: 1px solid #EEEEEE; }\n    .region--sidebar-second .rr-headerbox-block .field--name-body ul {\n      list-style-type: none;\n      margin: 0 0 1.5em 0; }\n      .region--sidebar-second .rr-headerbox-block .field--name-body ul li {\n        padding: 0.25em;\n        text-indent: -1em;\n        margin-left: 10px; }\n        .region--sidebar-second .rr-headerbox-block .field--name-body ul li:before {\n          content: \"\\0BB \\020\"; }\n\n.region--sidebar-second .rr-solidbox-block {\n  background-color: #EEEEEE;\n  margin-bottom: 14px; }\n  .region--sidebar-second .rr-solidbox-block h2 {\n    display: block;\n    font-size: 1.5rem;\n    font-weight: bold;\n    margin: 0;\n    padding: 15px 15px 0;\n    color: #A82D2B;\n    text-decoration: none; }\n  .region--sidebar-second .rr-solidbox-block .field--name-body {\n    padding: 10px 15px;\n    border: 1px solid #EEEEEE; }\n    .region--sidebar-second .rr-solidbox-block .field--name-body ul {\n      list-style-type: none;\n      margin: 0 0 1.5em 0; }\n      .region--sidebar-second .rr-solidbox-block .field--name-body ul li {\n        padding: 0.25em;\n        text-indent: -1em;\n        margin-left: 10px; }\n        .region--sidebar-second .rr-solidbox-block .field--name-body ul li:before {\n          content: \"\\0BB \\020\"; }\n\n.rr-solidbox-block .view-content {\n  padding: 15px 15px 20px; }\n  .rr-solidbox-block .view-content .views-row {\n    margin-bottom: 7px; }\n\n#block-talktheyhearyourrfeaturedresources p.left,\n#block-talktheyhearyourrtakeaction p.left,\n.media-list p.left {\n  clear: both; }\n  #block-talktheyhearyourrfeaturedresources p.left a,\n  #block-talktheyhearyourrtakeaction p.left a,\n  .media-list p.left a {\n    vertical-align: top; }\n  #block-talktheyhearyourrfeaturedresources p.left img.left,\n  #block-talktheyhearyourrtakeaction p.left img.left,\n  .media-list p.left img.left {\n    margin-right: 10px;\n    margin-bottom: 10px;\n    float: left; }\n\n.region-sidebar-second .button, .region-sidebar-second .btn {\n  margin-right: 0;\n  margin-left: 0;\n  border-radius: 0;\n  -webkit-appearance: none; }\n\n.view-language-toggle {\n  margin-bottom: 10px; }\n\n/*# sourceMappingURL=data:application/json;charset=utf8;base64, */\n","// Classes applied to Typography (<a>, <p>, headings, etc)\r\n// try to use naming conventions without style info (no color, size or weight info)\r\n//==========================================================================\r\n\r\n\r\n// Add this class to the classes created with gulp optimize-sprites\r\n// It simply sets the display and overflow to only show the background image of the sprite\r\n.sprite{\r\n  overflow: hidden;\r\n  display: inline-block;\r\n  text-indent: 999em;\r\n}\r\n\r\n// Simple clear for paragraphs\r\n.p-clear{\r\n  clear: both;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// Left Side Menu\n//==========================================================================\n\n.side-menu{\n  font-size: 1.4rem;\n  margin-bottom: $gutters;\n\n   h2 {\n     margin: 0;\n     padding: $side-menu-padding;\n     font-size: 1.1em;\n     font-weight: $weight-regular;\n     color: $white;\n     background-color: $sm-bg-1;\n     font-weight: bold;\n\n    a {\n      display: block;\n      color: $white;\n      font-weight: bold;\n      padding: 0;\n    }\n  }\n  .menu {\n    @include menu;\n    background: $sm-bg-2;\n    li {\n      display: block;\n    }\n  }\n  a {\n    @include hover-link;\n    font-family: $heading-font-family;\n    padding: $side-menu-padding;\n    color: $black;\n   \tfont-weight: normal;\n  }\n  .menu-item--active-trail > a,\n  a.is-active {\n    font-weight: bold;\n  }\n\n  //-------Level 1 ----------//\n\n  > ul.menu > li{\n    border-top: $sm-border;\n\n    //-------Level 2 ----------//\n    > ul{\n      padding: $side-menu-padding*1.5 0 $side-menu-padding;\n      border-top: $sm-border;\n\n      li.menu-item--active-trail > a {\n        font-weight: bold;\n      }\n\n      //(li and a under this inherit the styling)\n      li {\n        background-color: $sm-bg-3;\n        padding-left: 0;\n        margin-bottom: 0;\n\n\t        a{\n\t          padding-top: 0;\n\t          padding-bottom: 4px;\n\t        }\n\n\t        a.is-active {\n\t         font-weight: bold;\n\t        }\n\n\t        //-------Level 3 ----------//\n\t        ul{\n\t          padding: $side-menu-padding*.5 0 0 $side-menu-padding*.5;\n\t          background-color: $sm-bg-3;\n\n\t          li{\n\t             padding-left:10px;\n\t\t\t\t}\n             }//ul - level 3\n         }//li\n    }//ul - level 2\n  }//ul - level 1\n\n\n  //Collapsible menu\n  //---------------------------------------------------------\n  &.collapsible{\n    border: 1px solid $sm-bg-2;\n\n    //Adding the collapsible button\n    //Using pixels for the button (28x28px with 10px gutters)\n    //--------------------------\n    h2{\n      position: relative;\n      padding-right: 50px;\n    }\n\n    .menu-toggle{\n      position: absolute;\n      right: 10px;\n      margin: -14px 0 0 0;\n      width: 28px;\n      height: 28px;\n      overflow: hidden;\n      text-align: center;\n      cursor: pointer;\n      text-indent: -999em;\n      background-color: darken($sm-bg-1, 30%);\n\n\n      //Creating the \"+\" or \"-\" icon w/ css\n      .menu-icon{\n        @include plus-icon(28px, 16px, 4px);\n\n        &:after{\n          opacity: 1;\n          transition: opacity $base-duration $base-timing;\n        }\n      }\n    }\n\n    &.animating .menu-toggle .menu-icon:after,\n    &.open .menu-toggle .menu-icon:after{\n      opacity: 0;\n    }\n\n    &.open.animating .menu-toggle .menu-icon:after{\n      opacity: 1;\n    }\n\n\n    //Setting visibility of open side menu on mobile devices\n    //--------------------------\n    > ul.menu{\n      display: none;\n    }\n\n    &.open .menu{\n      display: block;\n    }\n  }//.collapsible\n\n}//.side-menu\n\n\n// Might want to edit the color variables in /config/variables/colors rather than change code here\n//-----------------------------------------------------\n\n .side-menu ul.menu{\n\n  }\n  .menu a{\n\n  }\n\n.side-menu{\n  &.collapsible{\n    //The button to open the menu when collapsible\n    .menu-toggle{\n      .menu-icon:before,\n      .menu-icon:after{\n        background-color: $sm-color-1;\n      }\n    }\n  }\n\n  //Level 1\n  //--------------------------\n  > ul.menu > li {\n    background-color: $sm-bg-2;\n\n    &:hover,\n    &:active,\n    &:focus{\n      background-color: $sm-bg-4;\n    }\n  }\n\n  //Level 2 & 3\n  //--------------------------\n  > ul.menu > li > ul{\n    background-color: $sm-bg-3;\n\n    a{\n      @include link-colors($sm-color-2, $sm-color-2, $sm-color-2, $sm-color-2, $sm-color-2);\n     font-weight: normal;\n\n      &.is-active{\n        @include link-colors($sm-color-2, $sm-color-2, $sm-color-2, $sm-color-2, $sm-color-2);\n        background-color: transparent;\n      }\n    }\n  }\n\n  //Arrow colors\n\n  //Level 1\n  //--------------------------\n  > ul.menu > li{\n\n    &.menu-item--expanded > a:after{\n      border-top-color: $white;\n    }\n\n    &.menu-item--collapsed > a:after{\n      border-left-color: $white;\n    }\n\n    //Level 2 & 3\n    //--------------------------\n    > ul li{\n\n      &.menu-item--expanded > a:after{\n        border-top-color: $sm-color-2;\n      }\n\n      &.menu-item--collapsed > a:after{\n        border-left-color: $sm-color-2;\n      }\n    }\n  }\n\n}//.side-menu\n","// Open and close icons\r\n// This creates a + icon\r\n//==========================================================================\r\n\r\n// Apply this mixin to the selector that you want to have the + inside\r\n// $container is the width and height of the selector that holds the +\r\n// The $width and $height are for the horizontal rectangle in the +\r\n// The :after item is rotated to be the verticle part of the +\r\n//\r\n// The $variation allows you to change the + to a x\r\n// $variation values are 'plus' or 'cross'\r\n// $variation is optional - default is a plus\r\n//\r\n// Example:\r\n// .menu-icon{\r\n//   @include plus-icon(28px, 16px, 4px);\r\n//  }\r\n\r\n@mixin plus-icon($container, $width, $height, $variation: 'plus'){\r\n  display: block;\r\n  width: $container;\r\n  height: $container;\r\n  position: relative; \r\n  &:before,\r\n  &:after{\r\n    content: '';\r\n    display: block;\r\n    position: absolute;\r\n    overflow:  hidden;\r\n    top: 50%;\r\n    left: 50%;\r\n    background-color: #000;\r\n    width: $width;\r\n    height: $height;\r\n    margin: ($height/2)*-1 0 0 ($width/2)*-1;\r\n  }\r\n\r\n  //Variations\r\n  @if $variation == 'plus'{   \r\n    &:after{\r\n      transform: rotate(90deg);\r\n    }    \r\n  } @elseif $variation == 'cross'{    \r\n    &:before{\r\n      transform: rotate(45deg);\r\n    }    \r\n    &:after{\r\n      transform: rotate(135deg);\r\n    }   \r\n  }\r\n}\r\n","\r\n\r\n//Right Rail Blocks\r\n//========================\r\n\r\n.sideblock {\r\n  margin-bottom: $gutters;\r\n  border: 1px solid $black;\r\n  border-color: $lighter-gray;   \r\n  .block-title {\r\n    font-size: 1em;\r\n    margin: 0;\r\n    padding: 0.75em 1em;;\r\n    background-color: $lighter-gray; \r\n    color: $base-accent-color;\r\n    a {\r\n      color: $base-accent-color; \r\n      text-decoration: none;      \r\n        &:hover,\r\n        &:active,\r\n        &:focus {\r\n          text-decoration: underline;\r\n        }\r\n    }//a\r\n  }//block-title\r\n    \r\n  .block-content {\r\n    padding: 1em;\r\n  }\r\n}//sideblock\r\n\r\n.region--sidebar-second {\r\n\t a {\r\n     color: $blue; \r\n     text-decoration: underline;      \r\n       &:hover,\r\n       &:active,\r\n       &:focus {\r\n          text-decoration: none;\r\n          color: $red-dark;\r\n          }\r\n        }\r\n        \t\r\n\t//Banner Block \r\n\t.rr-banner-block {\r\n\t\timg{\r\n      width:100%;\r\n    \tmargin-bottom: 9px;\r\n    }\r\n \t}\r\n \t\r\n\t//Header Box Block\r\n\t.rr-headerbox-block {\r\n\t\tmargin-bottom: $gutters;\r\n\t\t  h2 {\r\n\t\t    display: block;\r\n\t\t    font-size: 1.4rem;\r\n\t\t    font-weight: bold;\r\n\t\t    line-height:1.6;\r\n\t\t    background-color: $lighter-gray;\r\n\t\t    margin: 0;\r\n\t\t    padding: 7px 15px;\r\n\t\t    color: $blue-gray;\r\n\t\t    text-decoration: none;\r\n\t\t  }\r\n\t\t  .field--name-body {\r\n\t\t     padding: 10px 15px;\r\n\t\t     border: 1px solid $lighter-gray;\r\n\t\t     ul{\r\n\t\t       list-style-type: none;\r\n\t\t       margin: 0 0 1.5em 0;\r\n\t\t       li{\r\n\t\t         padding: 0.25em;\r\n\t\t         text-indent: -1em;\r\n             margin-left: 10px;\r\n\t\t         &:before {\r\n\t\t           content: \"\\0BB \\020\";\r\n\t\t        }\r\n\t\t      }\r\n\t\t    }//ul\r\n\t\t  }//body\t\r\n \t}\r\n \t\r\n \t//Color BG Block\r\n\t.rr-solidbox-block {\r\n\t\t background-color: $lighter-gray;\r\n\t\t margin-bottom: $gutters;\r\n\t\r\n\t  \th2 {\r\n\t\t    display: block;\r\n\t\t    font-size: 1.5rem;\r\n\t\t    font-weight: bold;\r\n\t\t    margin:0;\r\n\t\t    padding: 15px 15px 0;\r\n\t\t    color: $red-dark;\r\n\t\t    text-decoration: none;\r\n\t\t  }\r\n\t\t  .field--name-body {\r\n\t\t    padding: 10px 15px;\r\n\t\t    border: 1px solid $lighter-gray;\r\n\t\t    ul{\r\n\t\t      list-style-type: none;\r\n\t\t      margin: 0 0 1.5em 0;\r\n\t\t      li{\r\n\t\t        padding: 0.25em;\r\n\t\t        text-indent: -1em;\r\n            margin-left: 10px;\r\n\t\t        &:before {\r\n\t\t          content: \"\\0BB \\020\";\r\n\t\t        }\r\n\t\t      }\r\n\t\t    }//ul\r\n\t\t  }//body\t\r\n\t\t}\r\n}\r\n\r\n//leadership RR view blocks \r\n//===========================\r\n\r\n\r\n.rr-solidbox-block{\r\n  .view-content {\r\n    padding: 15px 15px 20px;\r\n    .views-row {\r\n      margin-bottom: 7px;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n//Underage drinking RR blocks\r\n\r\n#block-talktheyhearyourrfeaturedresources,\r\n#block-talktheyhearyourrtakeaction,\r\n.media-list{\r\n  p.left {\r\n    clear: both;\r\n    a {\r\n      vertical-align: top;\r\n    }\r\n    img.left {\r\n      margin-right: 10px;\r\n      margin-bottom: 10px;\r\n      float: left;\r\n    }//img\r\n  }//p.left\r\n}\r\n\r\n.region-sidebar-second{\r\n  .button, .btn{\r\n    margin-right: 0;\r\n    margin-left: 0;\r\n    border-radius: 0;\r\n    -webkit-appearance: none;\r\n  }\r\n}\r\n\r\n.view-language-toggle {\r\n    margin-bottom: 10px;\r\n}\r\n\r\n\r\n\r\n\r\n","// Variables\n//==========================================================================\n\n//Warning from Omega\n//For a SCSS file in your theme to use the variables represented here, the line @import \"_omega-style-vars.scss\", \"_omega-default-style-vars.scss\"; must be at the top of the SCSS file.\n\n// You can add as many partials as needed and import them here\n// Be mindful of the order in which you import them\n//--------------------------------------------------------------------\n\n//Imports\n@import \"var_colors\";\n@import \"var_grids\";\n\n// Typography\n//-----------------------------------------------------\n$base-font-family: Tahoma, Verdana, Segoe, sans-serif;\n$heading-font-family: $base-font-family;\n\n// Font Sizes\n$base-font-size: 1.4rem;\n\n// Font Weights\n$weight-regular: normal;\n$weight-bold: bold;\n\n// Line height\n$base-line-height: 1.5;\n$heading-line-height: 1.3;\n\n// Spacing, padding and indexes\n//-----------------------------------------------------\n$base-spacing: $base-line-height * 1em;\n$small-spacing: $base-spacing / 2;\n$base-z-index: 0;\n$h2-spacing: 5px 0;\n\n//this is the padding for the mega menu\n$mega-menu-padding: 10px;\n\n//this is the padding for the buttons / list items in the side menu\n$side-menu-padding: 0.75em;\n\n// Borders\n//-----------------------------------------------------\n$base-border-radius: 0;\n$base-border-color: $light-gray;\n$base-border: 1px solid $base-border-color;\n$megamenu-border: 1px solid $light-gray;\n\n// Forms\n//-----------------------------------------------------\n//Variables to define our field types\n$form-input-text: 'input[type=\"text\"], input[type=\"password\"], input[type=\"search\"], input[type=\"email\"], input[type=\"tel\"], input[type=\"url\"], input[type=\"number\"]';\n$form-input-buttons: 'input[type=\"submit\"], input[type=\"reset\"], input[type=\"button\"], button';\n$form-input-dates: 'input[type^=\"date\"], input[type=\"month\"], input[type=\"week\"], input[type=\"time\"]';\n$form-input-not-radio: 'input:not([type=\"radio\"]):not([type=\"checkbox\"])';\n\n$form-focus-color: #3b99fc;\n$form-box-shadow: inset 0 1px 3px rgba(#000, 0.06);\n$form-box-shadow-focus: 0 0 5px rgba($form-focus-color, 0.7);\n$form-field-bg: $white;\n$form-padding: $base-spacing / 3;\n$form-line-height: 2.2;\n\n// Transitions\n//-----------------------------------------------------\n$base-duration: 150ms;\n$base-timing: ease;\n"]}